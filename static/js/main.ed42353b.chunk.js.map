{"version":3,"sources":["util/time.ts","components/DataViewer.tsx","components/DayPanel.tsx","components/Picker.tsx","years/2015/day1.ts","years/2015/data/day1.ts","years/2015/day2.ts","years/2015/data/day2.ts","years/2015/day3.ts","years/2015/data/day3.ts","years/2015.ts","util/collections.ts","years/2020/day01.ts","years/2020/data/day01.ts","util/count.ts","years/2020/day02.ts","years/2020/data/day02.ts","years/2020/data/day03.ts","years/2020/day03.ts","years/2020/data/day04.ts","years/2020/day04.ts","years/2020/day05.ts","years/2020/data/day05.ts","years/2020/data/day06.ts","years/2020/day06.ts","years/2020/day07.ts","years/2020/data/day07.ts","years/2020/data/day08.ts","years/2020/handheld.ts","years/2020/day08.ts","years/2020/data/day09.ts","years/2020/day09.ts","years/2020/data/day10.ts","years/2020/day10.ts","years/2020/data/day11.ts","years/2020/day11.ts","years/2020/data/day12.ts","years/2020/day12.ts","years/2020/data/day13.ts","years/2020/day13.ts","years/2020/day14.ts","years/2020/data/day14.ts","years/2020/day15.ts","years/2020/day16.ts","years/2020/data/day16.ts","years/2020.ts","years/years.ts","App.tsx","index.js"],"names":["prettyPerfTimer","time","delta","unit","console","log","toPrecision","makeSample","data","split","slice","join","DataViewer","title","className","runDayPart","day","part","t0","performance","now","rs","func","dataConv","t1","makeDay","description","tests","map","test","index","result","runResult","isSuccess","base","lineClasses","classnames","lineText","toString","makeTestResult","undefined","DayPanel","year","dayIndex","parts","Picker","options","current","linkPrefix","getDayClasses","Array","from","value","to","count","haystack","needle","score","forEach","step","day1","floor","lastFloor","some","char","moveToBasement","calcPaper","box","length","width","height","calcArea","sides","top","front","side","getSides","Math","min","Object","values","getSmallestSide","day2","raw","line","l","w","h","Number","total","item","sort","a","b","reduce","prev","cur","calcVolume","pt","x","y","Moves","v","day3","Map","coord","set","one","other","newCoord","get","size","days","range","start","end","keys","findTwo","target","second","first","find","third","apple","orange","pear","findThree","re","testdata","lo","hi","password","row","match","exec","groups","pw","filter","record","charCount","countChars","traverseSlope","stepX","stepY","trees","part2slopes","slopes","slope","traverseSlopes","testdata2","isCompletePassport","passport","splits","indexOf","inRange","val","max","validators","byr","iyr","eyr","hgt","replace","hcl","ecl","includes","pid","isNaN","cid","day4","fields","field","name","validatePasswordFields","substMap","seat","decodeRow","decoder","decodedData","replaceAll","parseInt","calcId","pass","day5","makePass","passes","seatIds","getHighestSeatId","arr","findSeatIdGap","testdata1b","countUniqueAnswers","group","people","groupAnswers","Set","person","answer","add","countCommonAnswers","acc","day6","findBagParents","bags","bag","parents","candidate","children","child","mod","color","parent","found","findBagChildren","srcBag","bagChildrenCount","quantity","day7","bagDescs","findOrCreateBag","bagdesc","desc","bagname","contents","push","childBagName","qty","subBag","test1data","Opcodes","Handheld","rom","InstSet","nop","ax","jmp","pc","mem","inst","cmd","opcode","runUntilHalt","trace","fill","this","parseImage","image","Error","MakeInstruction","day8","findHaltingValue","noopSlots","jmpSlots","instr","dataCandidate","JSON","parse","stringify","changeIds","instPtr","splice","debugProgram","findWeakNumber","numbers","preamble","n","findWeakRange","num","findSumsTo","day9","test1dataA","test1dataB","day10","diffs","diff","findDeviceRating","sorted","optionals","findOptionalIndices","getDiffs","findPermutations","isWithin","pos","getSeatAt","updateFromAdjacent","currentSymbol","occupiedSeats","col","tx","ty","getNeighborsAt","s","isEqual","every","sweep","direction","updateFromVisible","simulate","createFrame","frame","currentFrame","ctr","nextFrame","day11","Directions","Turns","TurnTransforms","0","p","1","2","3","DirectionMoves","N","E","S","W","Ferry","location","heading","waypoint","Move","vector","steps","Turn","turn","turnSteps","currentIndex","MoveWaypoint","Do","instruction","move","DoWithWaypoint","transform","getManhattanDistFrom","origin","abs","day12","substr","f","part1","part2","calcNextBus","bus","timestamp","nextBus","day13","lines","departure","buses","memRe","VM","instructions","run","currentMask","type","address","applyMask","BigInt","addr","mask","maskBits","c","day14","startingNumbers","stopAt","table","addNum","lastNum","i","entry","FieldNames","class","duration","price","route","train","wagon","zone","Validator","schemas","validate","schema","ranges","getInvalidFields","ticket","parseSchema","rangeDesc","fieldName","parseTicket","day16","schemaDesc","yourTicketDesc","nearbyTicketsDesc","yourTicket","nearbyTickets","ticketAcc","day15","years","days2015","days2020","AppMain","useParams","yearIndex","currentYear","currentDay","App","exact","path","href","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ed42353b.chunk.js","sourcesContent":["const prettyPerfTimer = (time: number) => {\n  let delta = time / 1000.0;\n  let unit = \"s\";\n\n  if (delta < 1) {\n    delta *= 1000;\n    unit = \"ms\";\n  }\n\n  if (delta < 1) {\n    delta *= 1000;\n    unit = \"µs\";\n  }\n  console.log(`writing ${time} as ${delta.toPrecision(3)}${unit}`);\n  return `${delta.toPrecision(3)}${unit}`;\n};\n\nexport default prettyPerfTimer;\n","import React from \"react\";\n\nimport \"./DataViewer.scss\";\n\nconst makeSample = (data: string): string => {\n  return data.split(\"\\n\").slice(0, 5).join(\"\\n\");\n};\n\ntype Props = {\n  data: string;\n  title?: string;\n};\n\nconst DataViewer = ({ data, title = \"Sample data\" }: Props) => {\n  return (\n    <div className=\"my-day__dataview\">\n      <div className=\"my-day__dataview-title\">{title}</div>\n      <div className=\"my-day__dataview-data\">{makeSample(data)}</div>\n    </div>\n  );\n};\n\nexport default DataViewer;\n","import classnames from \"classnames\";\r\nimport React, { FunctionComponent } from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { Day, DayPart, TestRun } from \"util/Day\";\r\nimport prettyPerfTimer from \"util/time\";\r\nimport DataViewer from \"./DataViewer\";\r\n\r\nimport \"./DayPanel.scss\";\r\n\r\nconst makeTestResult = ({\r\n  index,\r\n  result,\r\n  runResult,\r\n}: TestRun<number | string | boolean>) => {\r\n  const isSuccess = runResult === result;\r\n\r\n  const base = \"my-day__testline\";\r\n  const lineClasses = classnames({\r\n    [`${base}`]: true,\r\n    [`${base}--is-success`]: isSuccess,\r\n    [`${base}--is-fail`]: result && runResult && !isSuccess,\r\n  });\r\n\r\n  const lineText = isSuccess\r\n    ? `passed (got ${result.toString()})`\r\n    : `failed (expected ${result.toString()}, \r\n       got ${runResult?.toString() || \"nothing\"})`;\r\n\r\n  return (\r\n    <div key={index} className={lineClasses}>\r\n      <span>\r\n        test {index} {lineText}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst runDayPart = (day: Day<unknown>, part: DayPart<unknown>) => {\r\n  const t0 = performance.now();\r\n  const rs = part.func(day.dataConv(day.data));\r\n  const t1 = performance.now() - t0;\r\n  return (\r\n    <>\r\n      <div className=\"my-day__run-result\">{rs}</div>\r\n      <div className=\"my-day__time\">{prettyPerfTimer(t1)}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst makeDay = (day: Day<unknown>, part: DayPart<unknown>) => {\r\n  return (\r\n    <div key={part.title} className=\"my-day__part\">\r\n      <div className=\"my-day__part-title\">{part.title}</div>\r\n      {part.description && (\r\n        <div className=\"my-day__part-desc\">\r\n          <ReactMarkdown>{part.description}</ReactMarkdown>\r\n        </div>\r\n      )}\r\n      <div className=\"my-day__test-result\">\r\n        {part.tests?.map((test, index) =>\r\n          makeTestResult({\r\n            index,\r\n            runResult: (test.func ? test.func : part.func)?.(\r\n              day.dataConv !== undefined\r\n                ? day.dataConv(test.data as string)\r\n                : test.data\r\n            ),\r\n            ...test,\r\n          })\r\n        )}\r\n      </div>\r\n      {part.func && runDayPart(day, part)}\r\n    </div>\r\n  );\r\n};\r\n\r\ntype Props = {\r\n  day: Day<unknown>;\r\n  year: number;\r\n  dayIndex: number;\r\n};\r\n\r\nconst DayPanel: FunctionComponent<Props> = ({ day, year, dayIndex }: Props) => {\r\n  const { data, parts, title, description } = day;\r\n\r\n  return (\r\n    <div className=\"my-day\">\r\n      <div className=\"my-day__title\">{title}</div>\r\n      <div className=\"my-day__dayindex\">Day {dayIndex}</div>\r\n\r\n      {description && (\r\n        <div className=\"my-day__desc\">\r\n          <ReactMarkdown>\r\n            {`${description}\r\n            \r\n[Read full story](https://adventofcode.com/${year}/day/${dayIndex})\r\n\r\n[View solution on GitHub](https://github.com/teetow/aoc2020/blob/master/src/years/${year}/day${dayIndex}.ts)\r\n\r\n`}\r\n          </ReactMarkdown>\r\n        </div>\r\n      )}\r\n\r\n      {data && (\r\n        <div className=\"my-day__sampledata\">\r\n          <DataViewer data={data} />\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"my-day__parts\">\r\n        {parts.map((part) => makeDay(day, part))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DayPanel;\r\n","import classnames from \"classnames\";\r\nimport React, { FunctionComponent } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Picker.scss\";\r\n\r\ntype Props = {\r\n  options: number[];\r\n  current: number;\r\n  linkPrefix?: string;\r\n};\r\n\r\nconst Picker: FunctionComponent<Props> = ({\r\n  options,\r\n  current,\r\n  linkPrefix,\r\n}: Props) => {\r\n  const base = \"my-picker\";\r\n\r\n  const getDayClasses = (index: number) => {\r\n    return classnames({\r\n      [`${base}__option`]: true,\r\n      [`${base}__option--current`]: index === current,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={`${base}`}>\r\n      {Array.from(options).map((value) => (\r\n        <Link to={`/${linkPrefix || \"\"}${value}`} key={value}>\r\n          <div className={getDayClasses(value)}>{value}</div>\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Picker;\r\n","import { Day } from \"util/Day\";\r\nimport day1data from \"./data/day1\";\r\n\r\nconst count = (haystack: string, needle: string) => {\r\n  let score = 0;\r\n\r\n  haystack.split(\"\").forEach((step) => {\r\n    score += step === needle ? 1 : 0;\r\n  });\r\n  return score;\r\n};\r\n\r\nconst moveToBasement = (data: string) => {\r\n  let floor = 0;\r\n  let lastFloor = 0;\r\n  data.split(\"\").some((char, index) => {\r\n    floor += char === \"(\" ? 1 : -1;\r\n    lastFloor = index;\r\n    return floor === -1;\r\n  });\r\n  return lastFloor + 1;\r\n};\r\n\r\nconst day1: Day<string> = {\r\n  title: \"Day 1\",\r\n  data: day1data,\r\n  dataConv: (data) => data,\r\n  parts: [\r\n    {\r\n      title: \"Part 1\",\r\n      func: (data) => count(data, \"(\") - count(data, \")\"),\r\n      tests: [\r\n        { data: \"(())\", result: 0 },\r\n        { data: \"()()\", result: 0 },\r\n        { data: \"(((\", result: 3 },\r\n        { data: \"(()(()(\", result: 3 },\r\n        { data: \"))(((((\", result: 3 },\r\n        { data: \"())\", result: -1 },\r\n        { data: \"))(\", result: -1 },\r\n        { data: \")))\", result: -3 },\r\n        { data: \")())())\", result: -3 },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Part 2\",\r\n      func: (data) => moveToBasement(data),\r\n      tests: [\r\n        { data: \")\", result: 1 },\r\n        { data: \"()())\", result: 5 },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport default day1;\r\n","const data =\r\n  \"(((())))()((((((((())()(()))(()((((()(()(((()((()((()(()()()()()))(((()(()((((((((((())(()()((())()(((())))()(()(()((()(()))(()()()()((()((()(((()()(((((((()()())()((((()()(((((()(())()(())((())()()))()(((((((())(()())(()(((())(()))((())))(()((()())))()())((((())))(()(((((()(())(((()()((()((()((((((((((())(()())))))()))())()()((((()()()()()()((((((())())(((()())()((()()(((()()()))(((((()))(((()(()()()(()(()(((())()))(()(((()((())()(()())())))((()()()(()()(((()))(((()((((()(((((()()(()())((()())())(()((((((()(()()))((((()))))())((())()()((()(()))))((((((((()))(()()(((())())(())()((()()()()((()((()((()()(((())))(()((())()((((((((()((()(()()(((())())())))(())())))()((((()))))))())))()()))()())((()())()((()()()))(()()(((()(())((((())())((((((((()()()()())))()()()((((()()))))))()((((()(((()))(()()())))((()()(((()))()()())())(((())((()()(())()()()(((())))))()())((()))()))((())()()())()())()()(()))())))())()))(())((()(())))(()(())(()))))(()(())())(()(())(()(()))))((()())()))()((((()()))))())))()()())((())()((()()()))()(((()(()))))(())()()))(((()())))))))))(((())))()))())()))))()()(((())))))))()(()()(()))((()))))((())))((()((())))())))()()(()))())()(()((()())(()(()()())())(()()))()))))(()())()()))()()()()))(()(()(()))))))()(()))()))()()(()((())(()(())))()(((())(())())))))()(()(()))))()))(()()()(())()(()(())))()))))()()(((((())))))())()())())())()())()))))()))))))))())()()()()()()())))()))((())()))())))()((())()))))()))())))))))())()()()))()()(()((((()(((((((()(())((()())((()()))()))))(())))()()()(())((())()())))(())))(())))(((()()))()(())(((()(()))((())))())()))((((()))())()))))))))()(())())))(()))()(()()))())()()(())())))())()()(()())))()((()())(()(())(())))))))))))))(()))))()))))))()()())(()(((((()(()())))())()))(()))()))(()()))()())(()))())()(())((()()))))))())))())()(((())))(()(()))()()))()(()))))))((()())(()))))))()())))()()))))))))((((((((()()()(()))))))()())))())))()()((())()))((())(())))())())))()()()((()((()(())))())()(())))))))))()())))()()()()()()))()))((())())(()(()))))))(()()))()))(())))()))))))))))))(()))))))))()))))()))()())()))()()))))))()))))((()))))(()))())()(())))(()())((((()())))()))))(()))()(()()(())))))())))))()))))))())))())))))())))())())))())(()))))(())()(())))())()))((()()))))))())))((())))))))())))(())))))()()())))))())))))()))))))()))()()()(()(((()())())())(()))())))))((()(())(()))))))))(())))()()()())())(()))))()()()))()))())())())()(())))()(((()((((())))))))()))))))))))))))))))))((())()())(()))))()()))))))(()()(())())))())))((())))((())))))))))))))()))))()(()))))))())))))()))(()()())(()())))))))))()))))))(())))))()()))()())(((())))()))(()))))))))(())())))())))())())())()()))((())()(())()())()))()())(())(()))))()())))(()(((()))))))()(()())()()()))()))))))))()()()(())()())()(((((()))()())())(()))))()()()(())))())))()((()())))(()))())()(()())())(()))()()))((()()))((()()()()())))(())()))(()(())))((()()))))))))())))))))())()()))))))))))))))))(())()(())(())()())())()))()(()))))())())))))()())()(()))()()(())))(())())))))(()))))))))))))))())())(())(())))(((()))()))))())((())(()))())))))))())))))())))()))()))))))))))))())()))))()))))((()))(())))()(())))(())()))()))())))())))))))()(()())())))()()())))(())))))(()))))))))))))(()))()))()))())))(((()()()(())((()())))()())(((()))(())()))((()()()())))())(())(()))))()(((((())))(()))())())))))))((((()()()))())())()(()(()())))))))))()())())))(())))()())(((()(())())()()))())())))))))((()())((()()(()))(()(())))()))()))(()))(()))()()(()(((())((((()))()(()))((())()(()(()())()(()))()())))))(()))()))())()())))())))(())))((())(()())))))()))(())(()))()())()(()()((()(()))))))()(())(()())(())()))(((())()))(()()(()()()))))(()(())))()))))())))))())(()()()()()()(((())))(()()))()((())(((((()()())))(()))(()))()()))(((())())()(((()()()()))))(()))(())())))()())(()()())())))))))()))))((())))()())(()))(()(()))())))))())(())))))()()())())()))()()(())))(()))(())((((((())(()))(()))())()))(()()(())))()))(()()))()))()(())))(())))((()(()))(())()()())())))(((()()())(())()))))))()(((()(((((()()(((())(())))())()((()))))((()())()(())(((())))(((()((()(()(()))(()()))())(()))(())(())))()))))))((((()))()((((()(()))()))()()))))()(()(()))()(()((()(((()(()()(((()))))()(((()(()(()(((()(()())())()()(()(()())())(()((((())(()))()))(((((()()())(())()((()()())))()()(((()()))()((((((((()(())))())((()))))(())))(()))))((()((((()()(())(((((()))(((((((((((((()())))((((()(((()((())())()))((()))()(()()((()()()()(()()(()(()(((())()(()((((((()((()()((())()((((()((()()(()()())((()()()((()((())()(()(((()((())((((())(()))((()(()))(()())()((((((((()(((((((((((()))(()(((()(()()()((((())((())()())()))(())((())(()))(((()((()(())))(()))))((()()))))((((()(()(()())(()(())((((((((()((((()((()(((((()))())()(()))(()()((()(())(((((()(())()(((((()()))))))()(((())()(()()((((())()((())((()(((())(((()))((()()((((()(())))))((()((((()((()((()(((())((()))(((((((()(((()((((((((())()))((((())(((((()((((((((()(((()((()(((()()(((()((((((()()(()((((((((()()(()(()(())((((()())()))))(((()))((((())((((()())((()(())()((()((((((()((((((()(())))()())(((())())())()(())()(()())((()()((((())((((((())(()(((((()((((())()((((()(()(())(()())(((())()((())((((()))()((((((())(()(((()(((()((((((()(((()))(()()())())((()((()())()((((())(((()(()(((((((((())(())))()((()()()()(())((()))(((((((()(((((((((()(()))))(()((((((((()((((()((()()((((((()()(((((((()(()(())()(())((()()()((()(((((()())()(((((()())()()((()(()())(()()()(((()()(((((()((((((()()((()(()()()((((((((((((()((((((((()()(((()())))()(((()()(())())((((()((((()((((()()()(())(())((()(()(((((((((((((((()(())(())))))()()))((()(((()(())((()(((()(()()((((()()(((()(((()(((((()()((()(()(((()))((((((()((((((((()((()((())(((((()(((())(())())((()()))((((())()()((()(((()(((((()()(((()))(((()(()(((((((((((((()))((((((((()(((()))))())((((((((((((())((())((()())(((())((())(()((((((((((()(((())((()()(()((())(((((((((((()))((((((((((((()(()())((()((()((()(()(((()((((((((()()(()((()(()(((()))((()))(((((((((((((()(())((((((())(((()(())(()(()(()((()()))((((()((((()((((())))())((((()((((()))((((((()((((((()((()(((())))((())(()))(()((()((((()((()(((()()))((((()()()(((((((())(((())(()))())((((()())(((()(((((((((((()(()(()((()(((((((((((((((()()((((()((((((((()(((()()((()((((()))(((()(())((((((()((((())()((((()((()))(())()(()(((()((())())((((((()(()(())())(((())(()(()())(((((()((()((())()())(())))(((()(())))))))(((()(((()))()((()(((()()((()())()()))())))(((()))(()(((()(((((((((()(()(((((()()(((()())()()))))()(((()))(((()(()(()(()(()))()(())()))(()(((())))(()))))))))))(())((()((())((()(())()(())((()()((((()()((()()))((())(((()((()(())(())))()(()(((((()((()))())()(((((()()(((()(()((((((())(()))(())()))((()(()()))(())())()))(((())))(()((()(((())(())())))((()()((((((((((((((()((()(()()(()(((()))())()()((()()()(())(()))(()())(((())((())()(())()()(()()(())))((()(((()))))(((()()(()()))())((()((())()))((((()()()())((())))(((()(())(((((()(((((()((()(()((((()()(((()()()(((()())(((()()((((())(()))(((()))(())())((()))(((()((()))(((()()((())((()(((((()((((()()())((()))()((((()((()(()()()(\";\r\nexport default data;\r\n","import { Day } from \"util/Day\";\r\nimport day2data from \"./data/day2\";\r\n\r\ntype Box = { length: number; width: number; height: number };\r\ntype Sides = { top: number; front: number; side: number };\r\n\r\nconst makeData = (raw: string): Box[] => {\r\n  if (typeof raw === \"string\") {\r\n    const rawLines = raw.split(\"\\n\").map((line) => line);\r\n    return rawLines.map((line) => {\r\n      const [l, w, h] = line.split(\"x\");\r\n      return {\r\n        length: Number(l),\r\n        width: Number(w),\r\n        height: Number(h),\r\n      };\r\n    });\r\n  }\r\n  return [];\r\n};\r\n\r\nconst getSides = (box: Box): Sides => {\r\n  return {\r\n    top: box.length * box.width,\r\n    front: box.width * box.height,\r\n    side: box.height * box.length,\r\n  };\r\n};\r\n\r\nconst getSmallestSide = (box: Box) => {\r\n  const sides = getSides(box);\r\n  return Math.min(...Object.values(sides));\r\n};\r\n\r\nconst calcArea = (box: Box) => {\r\n  return (\r\n    box.length * box.width * 2 +\r\n    box.width * box.height * 2 +\r\n    box.height * box.length * 2\r\n  );\r\n};\r\n\r\nconst calcPaper = (box: Box) => {\r\n  return calcArea(box) + getSmallestSide(box);\r\n};\r\n\r\nconst calcVolume = (box: Box) => {\r\n  return box.length * box.width * box.height;\r\n};\r\n\r\nconst calcRibbon = (box: Box) => {\r\n  const ribbonSides = Object.values(box)\r\n    .sort((a, b) => a - b)\r\n    .slice(0, 2);\r\n  const baseRibbon = ribbonSides.reduce((prev, cur) => prev + cur) * 2;\r\n  const extraRibbon = calcVolume(box);\r\n\r\n  return baseRibbon + extraRibbon;\r\n};\r\n\r\nconst runA = (data: Box[]): number => {\r\n  let total = 0;\r\n  data.forEach((item) => {\r\n    total += calcPaper(item);\r\n  });\r\n  return total;\r\n};\r\n\r\nconst runB = (data: Box[]): number => {\r\n  let total = 0;\r\n  data.forEach((item) => {\r\n    total += calcRibbon(item);\r\n  });\r\n\r\n  return total;\r\n};\r\n\r\nconst day2: Day<Box[]> = {\r\n  title: \"Day 2\",\r\n  data: day2data,\r\n  dataConv: makeData,\r\n  parts: [\r\n    {\r\n      title: \"Part 1\",\r\n      func: runA,\r\n      tests: [\r\n        { data: [{ length: 2, width: 3, height: 4 }], result: 52 + 6 },\r\n        { data: [{ length: 1, width: 1, height: 10 }], result: 42 + 1 },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Part 2\",\r\n      func: runB,\r\n      tests: [\r\n        { data: [{ length: 2, width: 3, height: 4 }], result: 10 + 24 },\r\n        { data: [{ length: 1, width: 1, height: 10 }], result: 4 + 10 },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport default day2;\r\n","const data = `4x23x21\r\n22x29x19\r\n11x4x11\r\n8x10x5\r\n24x18x16\r\n11x25x22\r\n2x13x20\r\n24x15x14\r\n14x22x2\r\n30x7x3\r\n30x22x25\r\n29x9x9\r\n29x29x26\r\n14x3x16\r\n1x10x26\r\n29x2x30\r\n30x10x25\r\n10x26x20\r\n1x2x18\r\n25x18x5\r\n21x3x24\r\n2x5x7\r\n22x11x21\r\n11x8x8\r\n16x18x2\r\n13x3x8\r\n1x16x19\r\n19x16x12\r\n21x15x1\r\n29x9x4\r\n27x10x8\r\n2x7x27\r\n2x20x23\r\n24x11x5\r\n2x8x27\r\n10x28x10\r\n24x11x10\r\n19x2x12\r\n27x5x10\r\n1x14x25\r\n5x14x30\r\n15x26x12\r\n23x20x22\r\n5x12x1\r\n9x26x9\r\n23x25x5\r\n28x16x19\r\n17x23x17\r\n2x27x20\r\n18x27x13\r\n16x7x18\r\n22x7x29\r\n17x28x6\r\n9x22x17\r\n10x5x6\r\n14x2x12\r\n25x5x6\r\n26x9x10\r\n19x21x6\r\n19x4x27\r\n23x16x14\r\n21x17x29\r\n24x18x10\r\n7x19x6\r\n14x15x10\r\n9x10x19\r\n20x18x4\r\n11x14x8\r\n30x15x9\r\n25x12x24\r\n3x12x5\r\n12x21x28\r\n8x23x10\r\n18x26x8\r\n17x1x8\r\n2x29x15\r\n3x13x28\r\n23x20x11\r\n27x25x6\r\n19x21x3\r\n30x22x27\r\n28x24x4\r\n26x18x21\r\n11x7x16\r\n22x27x6\r\n27x5x26\r\n4x10x4\r\n4x2x27\r\n2x3x26\r\n26x29x19\r\n30x26x24\r\n8x25x12\r\n16x17x5\r\n13x2x3\r\n1x30x22\r\n20x9x1\r\n24x26x19\r\n26x18x1\r\n18x29x24\r\n1x6x9\r\n20x27x2\r\n3x22x21\r\n4x16x8\r\n29x18x16\r\n7x16x23\r\n13x8x14\r\n19x25x10\r\n23x29x6\r\n23x21x1\r\n22x26x10\r\n14x4x2\r\n18x29x17\r\n9x4x18\r\n7x22x9\r\n19x5x26\r\n27x29x19\r\n7x13x14\r\n19x10x1\r\n6x22x3\r\n12x21x5\r\n24x20x12\r\n28x2x11\r\n16x18x23\r\n2x13x25\r\n11x7x17\r\n27x21x4\r\n2x10x25\r\n22x16x17\r\n23x22x15\r\n17x13x13\r\n23x24x26\r\n27x18x24\r\n24x7x28\r\n30x12x15\r\n14x28x19\r\n2x15x29\r\n12x13x5\r\n17x22x21\r\n27x10x27\r\n17x6x25\r\n22x2x1\r\n1x10x9\r\n9x7x2\r\n30x28x3\r\n28x11x10\r\n8x23x15\r\n23x4x20\r\n12x5x4\r\n13x17x14\r\n28x11x2\r\n21x11x29\r\n10x23x22\r\n27x23x14\r\n7x15x23\r\n20x2x13\r\n8x21x4\r\n10x20x11\r\n23x28x11\r\n21x22x25\r\n23x11x17\r\n2x29x10\r\n28x16x5\r\n30x26x10\r\n17x24x16\r\n26x27x25\r\n14x13x25\r\n22x27x5\r\n24x15x12\r\n5x21x25\r\n4x27x1\r\n25x4x10\r\n15x13x1\r\n21x23x7\r\n8x3x4\r\n10x5x7\r\n9x13x30\r\n2x2x30\r\n26x4x29\r\n5x14x14\r\n2x27x9\r\n22x16x1\r\n4x23x5\r\n13x7x26\r\n2x12x10\r\n12x7x22\r\n26x30x26\r\n28x16x28\r\n15x19x11\r\n4x18x1\r\n20x14x24\r\n6x10x22\r\n9x20x3\r\n14x9x27\r\n26x17x9\r\n10x30x28\r\n6x3x29\r\n4x16x28\r\n8x24x11\r\n23x10x1\r\n11x7x7\r\n29x6x15\r\n13x25x12\r\n29x14x3\r\n26x22x21\r\n8x3x11\r\n27x13x25\r\n27x6x2\r\n8x11x7\r\n25x12x9\r\n24x30x12\r\n13x1x30\r\n25x23x16\r\n9x13x29\r\n29x26x16\r\n11x15x9\r\n11x23x6\r\n15x27x28\r\n27x24x21\r\n6x24x1\r\n25x25x5\r\n11x1x26\r\n21x4x24\r\n10x5x12\r\n4x30x13\r\n24x22x5\r\n26x7x21\r\n23x3x17\r\n22x18x2\r\n25x1x14\r\n23x25x30\r\n8x7x7\r\n30x19x8\r\n17x6x15\r\n2x11x20\r\n8x3x22\r\n23x14x26\r\n8x22x25\r\n27x1x2\r\n10x26x2\r\n28x30x7\r\n5x30x7\r\n27x16x30\r\n28x29x1\r\n8x25x18\r\n20x12x29\r\n9x19x9\r\n7x25x15\r\n25x18x18\r\n11x8x2\r\n4x20x6\r\n18x5x20\r\n2x3x29\r\n25x26x22\r\n18x25x26\r\n9x12x16\r\n18x7x27\r\n17x20x9\r\n6x29x26\r\n17x7x19\r\n21x7x5\r\n29x15x12\r\n22x4x1\r\n11x12x11\r\n26x30x4\r\n12x24x13\r\n13x8x3\r\n26x25x3\r\n21x26x10\r\n14x9x26\r\n20x1x7\r\n11x12x3\r\n12x11x4\r\n11x15x30\r\n17x6x25\r\n20x22x3\r\n1x16x17\r\n11x5x20\r\n12x12x7\r\n2x14x10\r\n14x27x3\r\n14x16x18\r\n21x28x24\r\n14x20x1\r\n29x14x1\r\n10x10x9\r\n25x23x4\r\n17x15x14\r\n9x20x26\r\n16x2x17\r\n13x28x25\r\n16x1x11\r\n19x16x8\r\n20x21x2\r\n27x9x22\r\n24x18x3\r\n23x30x6\r\n4x18x3\r\n30x15x8\r\n27x20x19\r\n28x29x26\r\n2x21x18\r\n1x23x30\r\n1x9x12\r\n4x11x30\r\n1x28x4\r\n17x10x10\r\n12x14x6\r\n8x9x24\r\n8x3x3\r\n29x8x20\r\n26x29x2\r\n29x25x25\r\n11x17x23\r\n6x30x21\r\n13x18x29\r\n2x10x8\r\n29x29x27\r\n27x15x15\r\n16x17x30\r\n3x3x22\r\n21x12x6\r\n22x1x5\r\n30x8x20\r\n6x28x13\r\n11x2x23\r\n14x18x27\r\n6x26x13\r\n10x24x24\r\n4x24x6\r\n20x8x3\r\n23x11x5\r\n29x5x24\r\n14x15x22\r\n21x17x13\r\n10x10x8\r\n1x11x23\r\n21x19x24\r\n19x9x13\r\n21x26x28\r\n25x11x28\r\n2x17x1\r\n18x9x8\r\n5x21x6\r\n12x5x2\r\n23x8x15\r\n30x16x24\r\n7x9x27\r\n16x30x7\r\n2x21x28\r\n5x10x6\r\n8x7x1\r\n28x13x5\r\n11x5x14\r\n26x22x29\r\n23x15x13\r\n14x2x16\r\n22x21x9\r\n4x20x3\r\n18x17x19\r\n12x7x9\r\n6x12x25\r\n3x30x27\r\n8x19x22\r\n1x9x27\r\n23x20x12\r\n14x7x29\r\n9x12x12\r\n30x2x6\r\n15x7x16\r\n19x13x18\r\n11x8x13\r\n16x5x3\r\n19x26x24\r\n26x8x21\r\n21x20x7\r\n15x1x25\r\n29x15x21\r\n22x17x7\r\n16x17x10\r\n6x12x24\r\n8x13x27\r\n30x25x14\r\n25x7x10\r\n15x2x2\r\n18x15x19\r\n18x13x24\r\n19x30x1\r\n17x1x3\r\n26x21x15\r\n10x10x18\r\n9x16x6\r\n29x7x30\r\n11x10x30\r\n6x11x2\r\n7x29x23\r\n13x2x30\r\n25x27x13\r\n5x15x21\r\n4x8x30\r\n15x27x11\r\n27x1x6\r\n2x24x11\r\n16x20x19\r\n25x28x20\r\n6x8x4\r\n27x16x11\r\n1x5x27\r\n12x19x26\r\n18x24x14\r\n4x25x17\r\n24x24x26\r\n28x3x18\r\n8x20x28\r\n22x7x21\r\n24x5x28\r\n23x30x29\r\n25x16x27\r\n28x10x30\r\n9x2x4\r\n30x2x23\r\n21x9x23\r\n27x4x26\r\n2x23x16\r\n24x26x30\r\n26x1x30\r\n10x4x28\r\n11x29x12\r\n28x13x30\r\n24x10x28\r\n8x12x12\r\n19x27x11\r\n11x28x7\r\n14x6x3\r\n6x27x5\r\n6x17x14\r\n24x24x17\r\n18x23x14\r\n17x5x7\r\n11x4x23\r\n5x1x17\r\n26x15x24\r\n3x9x24\r\n5x3x15\r\n5x20x19\r\n5x21x2\r\n13x5x30\r\n19x6x24\r\n19x17x6\r\n23x7x13\r\n28x23x13\r\n9x1x6\r\n15x12x16\r\n21x19x9\r\n25x5x5\r\n9x7x9\r\n6x5x8\r\n3x11x18\r\n23x25x11\r\n25x4x6\r\n4x27x1\r\n4x3x3\r\n30x11x5\r\n9x17x12\r\n15x6x24\r\n10x22x15\r\n29x27x9\r\n20x21x11\r\n18x10x5\r\n11x2x2\r\n9x8x8\r\n1x26x21\r\n11x11x16\r\n2x18x30\r\n29x27x24\r\n27x8x18\r\n19x3x17\r\n30x21x26\r\n25x13x25\r\n20x22x1\r\n10x1x12\r\n11x17x15\r\n29x11x30\r\n17x30x27\r\n21x22x17\r\n13x6x22\r\n22x16x12\r\n27x18x19\r\n4x13x6\r\n27x29x10\r\n3x23x10\r\n26x16x24\r\n18x26x20\r\n11x28x16\r\n21x6x15\r\n9x26x17\r\n8x15x8\r\n3x7x10\r\n2x28x8\r\n1x2x24\r\n7x8x9\r\n19x4x22\r\n11x20x9\r\n12x22x16\r\n26x8x19\r\n13x28x24\r\n4x10x16\r\n12x8x10\r\n14x24x24\r\n19x19x28\r\n29x1x15\r\n10x5x14\r\n20x19x23\r\n10x7x12\r\n1x7x13\r\n5x12x13\r\n25x21x8\r\n22x28x8\r\n7x9x4\r\n3x20x15\r\n15x27x19\r\n18x24x12\r\n16x10x16\r\n22x19x8\r\n15x4x3\r\n9x30x25\r\n1x1x6\r\n24x4x25\r\n13x18x29\r\n10x2x8\r\n21x1x17\r\n29x14x22\r\n17x29x11\r\n10x27x16\r\n25x16x15\r\n14x2x17\r\n12x27x3\r\n14x17x25\r\n24x4x1\r\n18x28x18\r\n9x14x26\r\n28x24x17\r\n1x26x12\r\n2x18x20\r\n12x19x22\r\n19x25x20\r\n5x17x27\r\n17x29x16\r\n29x19x11\r\n16x2x4\r\n23x24x1\r\n19x18x3\r\n28x14x6\r\n18x5x23\r\n9x24x12\r\n15x4x6\r\n15x7x24\r\n22x15x8\r\n22x1x22\r\n6x4x22\r\n26x1x30\r\n8x21x27\r\n7x1x11\r\n9x8x18\r\n20x27x12\r\n26x23x20\r\n26x22x30\r\n24x3x16\r\n8x24x28\r\n13x28x5\r\n4x29x23\r\n22x5x8\r\n20x22x3\r\n9x9x17\r\n28x3x30\r\n10x13x10\r\n10x25x13\r\n9x20x3\r\n1x21x25\r\n24x21x15\r\n21x5x14\r\n13x8x20\r\n29x17x3\r\n5x17x28\r\n16x12x7\r\n23x1x24\r\n4x24x29\r\n23x25x14\r\n8x27x2\r\n23x11x13\r\n13x4x5\r\n24x1x26\r\n21x1x23\r\n10x12x12\r\n21x29x25\r\n27x25x30\r\n24x23x4\r\n1x30x23\r\n29x28x14\r\n4x11x30\r\n9x25x10\r\n17x11x6\r\n14x29x30\r\n23x5x5\r\n25x18x21\r\n8x7x1\r\n27x11x3\r\n5x10x8\r\n11x1x11\r\n16x17x26\r\n15x22x19\r\n16x9x6\r\n18x13x27\r\n26x4x22\r\n1x20x21\r\n6x14x29\r\n11x7x6\r\n1x23x7\r\n12x19x13\r\n18x21x25\r\n15x17x20\r\n23x8x9\r\n15x9x26\r\n9x12x9\r\n12x13x14\r\n27x26x7\r\n11x19x22\r\n16x12x21\r\n10x30x28\r\n21x2x7\r\n12x9x18\r\n7x17x14\r\n13x17x17\r\n3x21x10\r\n30x9x15\r\n2x8x15\r\n15x12x10\r\n23x26x9\r\n29x30x10\r\n30x22x17\r\n17x26x30\r\n27x26x20\r\n17x28x17\r\n30x12x16\r\n7x23x15\r\n30x15x19\r\n13x19x10\r\n22x10x4\r\n17x23x10\r\n2x28x18\r\n27x21x28\r\n24x26x5\r\n6x23x25\r\n17x4x16\r\n14x1x13\r\n23x21x11\r\n14x15x30\r\n26x13x10\r\n30x19x25\r\n26x6x26\r\n9x16x29\r\n15x2x24\r\n13x3x20\r\n23x12x30\r\n22x23x23\r\n8x21x2\r\n18x28x5\r\n21x27x14\r\n29x28x23\r\n12x30x28\r\n17x16x3\r\n5x19x11\r\n28x22x22\r\n1x4x28\r\n10x10x14\r\n18x15x7\r\n18x11x1\r\n12x7x16\r\n10x22x24\r\n27x25x6\r\n19x29x25\r\n10x1x26\r\n26x27x30\r\n4x23x19\r\n24x19x4\r\n21x11x14\r\n4x13x27\r\n9x1x11\r\n16x20x8\r\n4x3x11\r\n1x16x12\r\n14x6x30\r\n8x1x10\r\n11x18x7\r\n29x28x30\r\n4x21x8\r\n3x21x4\r\n6x1x5\r\n26x18x3\r\n28x27x27\r\n17x3x12\r\n6x1x22\r\n23x12x28\r\n12x13x2\r\n11x2x13\r\n7x1x28\r\n27x6x25\r\n14x14x3\r\n14x11x20\r\n2x27x7\r\n22x24x23\r\n7x15x20\r\n30x6x17\r\n20x23x25\r\n18x16x27\r\n2x9x6\r\n9x18x19\r\n20x11x22\r\n11x16x19\r\n14x29x23\r\n14x9x20\r\n8x10x12\r\n18x17x6\r\n28x7x16\r\n12x19x28\r\n5x3x16\r\n1x25x10\r\n4x14x10\r\n9x6x3\r\n15x27x28\r\n13x26x14\r\n21x8x25\r\n29x10x20\r\n14x26x30\r\n25x13x28\r\n1x15x23\r\n6x20x21\r\n18x2x1\r\n22x25x16\r\n23x25x17\r\n2x14x21\r\n14x25x16\r\n12x17x6\r\n19x29x15\r\n25x9x6\r\n19x17x13\r\n24x22x5\r\n19x4x13\r\n10x18x6\r\n6x25x6\r\n23x24x20\r\n8x22x13\r\n25x10x29\r\n5x12x25\r\n20x5x11\r\n7x16x29\r\n29x24x22\r\n28x20x1\r\n10x27x10\r\n6x9x27\r\n26x15x30\r\n26x3x19\r\n20x11x3\r\n26x1x29\r\n6x23x4\r\n6x13x21\r\n9x23x25\r\n15x1x10\r\n29x12x13\r\n7x8x24\r\n29x30x27\r\n3x29x19\r\n14x16x17\r\n4x8x27\r\n26x17x8\r\n10x27x17\r\n11x28x17\r\n17x16x27\r\n1x8x22\r\n6x30x16\r\n7x30x22\r\n20x12x3\r\n18x10x2\r\n20x21x26\r\n11x1x17\r\n9x15x15\r\n19x14x30\r\n24x22x20\r\n11x26x23\r\n14x3x23\r\n1x28x29\r\n29x20x4\r\n1x4x20\r\n12x26x8\r\n14x11x14\r\n14x19x13\r\n15x13x24\r\n16x7x26\r\n11x20x11\r\n5x24x26\r\n24x25x7\r\n21x3x14\r\n24x29x20\r\n7x12x1\r\n16x17x4\r\n29x16x21\r\n28x8x17\r\n11x30x25\r\n1x26x23\r\n25x19x28\r\n30x24x5\r\n26x29x15\r\n4x25x23\r\n14x25x19\r\n29x10x7\r\n29x29x28\r\n19x13x24\r\n21x28x5\r\n8x15x24\r\n1x10x12\r\n2x26x6\r\n14x14x4\r\n10x16x27\r\n9x17x25\r\n25x8x7\r\n1x9x28\r\n10x8x17\r\n4x12x1\r\n17x26x29\r\n23x12x26\r\n2x21x22\r\n18x23x13\r\n1x14x5\r\n25x27x26\r\n4x30x30\r\n5x13x2\r\n17x9x6\r\n28x18x28\r\n7x30x2\r\n28x22x17\r\n14x15x14\r\n10x14x19\r\n6x15x22\r\n27x4x17\r\n28x21x6\r\n19x29x26\r\n6x17x17\r\n20x13x16\r\n25x4x1\r\n2x9x5\r\n30x3x1\r\n24x21x2\r\n14x19x12\r\n22x5x23\r\n14x4x21\r\n10x2x17\r\n3x14x10\r\n17x5x3\r\n22x17x13\r\n5x19x3\r\n29x22x6\r\n12x28x3\r\n9x21x25\r\n10x2x14\r\n13x26x7\r\n18x23x2\r\n9x14x17\r\n21x3x13\r\n13x23x9\r\n1x20x4\r\n11x4x1\r\n19x5x30\r\n9x9x29\r\n26x29x14\r\n1x4x10\r\n7x27x30\r\n8x3x23\r\n1x27x27\r\n7x27x27\r\n1x26x16\r\n29x16x14\r\n18x6x12\r\n24x24x24\r\n26x2x19\r\n15x17x4\r\n11x7x14\r\n14x19x10\r\n9x10x1\r\n14x17x9\r\n20x19x13\r\n25x20x8\r\n24x20x21\r\n26x30x2\r\n24x2x10\r\n28x4x13\r\n27x17x11\r\n15x3x8\r\n11x29x10\r\n26x15x16\r\n4x28x22\r\n7x5x22\r\n10x28x9\r\n6x28x13\r\n10x5x6\r\n20x12x6\r\n25x30x30\r\n17x16x14\r\n14x20x3\r\n16x10x8\r\n9x28x14\r\n16x12x12\r\n11x13x25\r\n21x16x28\r\n10x3x18\r\n5x9x20\r\n17x23x5\r\n3x13x16\r\n29x30x17\r\n2x2x8\r\n15x8x30\r\n20x1x16\r\n23x10x29\r\n4x5x4\r\n6x18x12\r\n26x10x22\r\n21x10x17\r\n26x12x29\r\n7x20x21\r\n18x9x15\r\n10x23x20\r\n20x1x27\r\n10x10x3\r\n25x12x23\r\n30x11x15\r\n16x22x3\r\n22x10x11\r\n15x10x20\r\n2x20x17\r\n20x20x1\r\n24x16x4\r\n23x27x7\r\n7x27x22\r\n24x16x8\r\n20x11x25\r\n30x28x11\r\n21x6x24\r\n15x2x9\r\n16x30x24\r\n21x27x9\r\n7x19x8\r\n24x13x28\r\n12x26x28\r\n16x21x11\r\n25x5x13\r\n23x3x17\r\n23x1x17\r\n4x17x18\r\n17x13x18\r\n25x12x19\r\n17x4x19\r\n4x21x26\r\n6x28x1\r\n23x22x15\r\n6x23x12\r\n21x17x9\r\n30x4x23\r\n2x19x21\r\n28x24x7\r\n19x24x14\r\n13x20x26\r\n19x24x29\r\n8x26x3\r\n16x12x14\r\n17x4x21\r\n8x4x20\r\n13x27x17\r\n9x21x1\r\n29x25x6\r\n7x9x26\r\n13x25x5\r\n6x9x21\r\n12x10x11\r\n30x28x21\r\n15x6x2\r\n8x18x19\r\n26x20x24\r\n26x17x14\r\n27x8x1\r\n19x19x18\r\n25x24x27\r\n14x29x15\r\n22x26x1\r\n14x17x9\r\n2x6x23\r\n29x7x5\r\n14x16x19\r\n14x21x18\r\n10x15x23\r\n21x29x14\r\n20x29x30\r\n23x11x5`;\r\n\r\n\r\nexport default data;","import { Day } from \"util/Day\";\r\nimport day3data from \"./data/day3\";\r\n\r\nconst makeData = (data: string) => {\r\n  return data.split(\"\");\r\n};\r\n\r\ntype Point = {\r\n  x: number;\r\n  y: number;\r\n};\r\nconst pt = (x: number, y: number): Point => ({ x, y });\r\n\r\nconst Moves: Record<string, Point> = {\r\n  \"<\": pt(-1, 0),\r\n  v: pt(0, 1),\r\n  \">\": pt(1, 0),\r\n  \"^\": pt(0, -1),\r\n};\r\n\r\nconst addPoints = (one: Point, other: Point): Point => {\r\n  return pt(one.x + other.x, one.y + other.y);\r\n};\r\n\r\nconst getMove = (raw: string) => Moves[raw];\r\n\r\nconst runA = (data: string[]): number => {\r\n  const map = new Map<Point, number>();\r\n  const coord = pt(0, 0);\r\n  map.set(coord, 1);\r\n  data.forEach((step) => {\r\n    const newCoord = addPoints(coord, getMove(step));\r\n    map.set(newCoord, (map.get(newCoord) || 0) + 1);\r\n  });\r\n  return map.size;\r\n};\r\n\r\nconst day3: Day<string[]> = {\r\n  title: \"Day 3\",\r\n  data: day3data,\r\n  dataConv: makeData,\r\n  parts: [\r\n    {\r\n      title: \"Part 1\",\r\n      func: runA,\r\n      tests: [\r\n        { data: \">\", result: 2 },\r\n        { data: \"^>v<\", result: 4 },\r\n        { data: \"^v^v^v^v^v\", result: 2 },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport default day3;\r\n","const data = `v>v<vvv<<vv^v<v>vv>v<<<^^^^^<<^<vv>^>v^>^>^>^>^><vvvv<^>^<<^><<<^vvvv>^>^><^v^><^<>^^>^vvv^<vv>>^>^^<>><>^>vvv>>^vv>^<><>^<v^>^>^><vv^vv^>><<^><<v>><>^<^>>vvv>v>>>v<<^<><^<v<>v>^^v^^^<^v^^>>><^>^>v<>^<>>^>^^v^><v<v>>><>v<v^v>^v<>>^><v>^<>v^>^<>^v^^^v^^>>vv<<^^><^<vvv>^>^^<^>>^^^^^v^<v>vv<>>v^v<^v^^<><^<^vv^><>><><>v>vvv^vv^^<<><<vvv><<^v^><v<>vvv^<^>vvvv^>^>>^v^<v^vv<^^v<>v>vv^<>><v<<<^v^<<><v<^<^<><^^^>^>>v>^>v^<>v><^<^<v^>^^vv<^^<>v^v^vv<>>>>v^v<>><^^v>vv^^>v^v>v<vv>>v>><v^v^v>vv>^^>^v><<vv^v^^vv<^v><^<<v<v^>vv^^^<v^>v>v^^^>><^^<v^<^>>v><vv<v^^>^^v>>v^^^<^^v>^v>><^<^<>>v<<^^vv>^^^v<^<^<v<v^^vv>^vv^>>v^><v>><<<>^vv^<^<>v^^<<<v<^>^><><v^^>>^^^<^vv<^^^>><^^v>^^v^<v^v^>^^<v>^<^v<^<<<<^<v^>v^<^^<>^^>^><<>>^v><>><^<v><^^^>>vv>^><vv>^^^^^v^vvv><><^<^>v>v^v^>^><><^<^><>v<<vv<^>><>^v^^v>^<<<>^v^>^<<v^vv<>v^<v^^vv><<v^<>>>^<v>vv>v>>>^<^>><vv<>>>>v<v>>>^v>v><>>vvv<^^><<^>^>v<^vvvv<v><vv<><^^^v^^^>v^v<>v<^^v>>><>v<v^>>v><v^>>^^<v<<<^<v<><^^v><<v^><<<<^vv<^<>^><vv<<<<^>>>^v>^v>vv>^v<>v>v<v><^>>v>>^>^><^<v^v^>^v<><><^^>^<vvvv^^<>^^^>vv^v^v>^v^^v^^v><v^<^<>><^<v>v>>vv<<v>>vvvv<vv><>>^v^>^>>v^v^<<<vv<><v<<>>>^v<<v>^^vv^><>v>^>v><<<<<<<^>^^v^<<^^>>vvv^<><>><>^^v<<vv><^^v<^^><vv>v^>>>v^v><v^v<^>v^><>v<<>v>^^v><<<<><^v^v>>^<>^<<>^<v<<>>v<<>><^<<<<^v>^<^v>v>vv<v<v<<>^>v<^<<>v^<vvvv^>v>><<v><v<>v>v>>v^vvv^^>>>v^<^<<^^<<<><v>v^<<v<<<>v<^^<><v<v^^<v>^>v>>v<>^>^^>>^v<<>v^^^>>>^vv<^v<v>^>v>^><>v^^<>^^v^^vv^<^>^<<>><<^>^v>>><<<vvvv><<><v<^v^v<vvv^<><<^<vv><v^v^v^>v>v^<vvv^><^><^<vv><>>v^>^^^<>><v^<^^^<>v<<v<^v>>>^>>v^><<>vvv><^>>v><v><>v>>^>v><<><<>^<>^^^vv><v^>v^^>>^>^<^v<v<^^<^vvvv>v<v>^>v^>^><^<vvvv><^><><<v<>v<v^><^<v^>^v^^<<<<^><^^<^><>>^v<<^<<^vv>v>>v<^<^vv>><v<vv>v<v<v>^v<>^>v<>^v<<<v>>^^v>>><vvv>v^>^v^v>^^^v<vvvv>><^>vvv^<vv^^vv><<<>v<>v>^<vvv^<^<v<v<^vv^^>>vv^<^^v^><^^^^^v<^<v<^>>>vv^v^>^<v>^<><v^<^v>>><^v^<<v<<v<>v>^v<v^v>>^^v<<v<v<<>>>vv>>^v>>^<<<<^><<<><^^>>v<>^vvvv>v^^^>^^^>^<vvvv><^^v<v<>v<^v^v<<v^^^v^<v<^v>v^^<>^>^<^v>vv<v^vv<^<<>v><<^><><^^v<<><^^><>^v>^<><<^<^^<<>vv<>^^<<^>><<<>>vvv>^>v^^v^><<^>v>^>^<^<<>v<^>vv^v^v<>vv<<v>vv<vv><^>v^<>^vv^v^<v<^>>>>v^v><^<><<>vv^<vvv^>>vvv^>v>>><^^vv<vvvv>v<^<^>>^^>^^vv>>><^v<>^v^<<>v^^^<v>^>>^<^<v>>^v<^^^<v>^v>^>>v<vv>>^<v^<<>>^>>><v>v^<<^<v>>^<<^^<>v<^v<^<>v^v>^^v<vvvv>^vv>vvv>v^<^>><v^^vv<<<^>vvvv<>>^^<>v^<><>v<^<>v<>^>v<>vv<v^v>>v<v<^<v^^v^vv^vvv><^^>v>><>>^<^^<>>^>^<v^>>vvv^v><v>>^>^>v><><<><vv^v>v<>^v<^vv^^^<>^^<<^^^v<>><v<^<^<^<^^><v^v<^>v^>vvvv>^^v^>^<v<^^^>>^<<vv^<><><^^^^<<>^<><v>vv^<><^>^^<>v^<>>>v><>vvvvv>v>v^^>^<<vvvv<>vv>>v<<^<>^^^v^<><>>^<<<v<v<>>>><><v>v<v<>>^>^^^^vv^^<<><^^<<vv<^<>v>vv<v<><<<^<<v<<<<>v<>>^<^>^>><v>v>><^^<>><<<><<><v^^v<<><^<^v<v^><^^v<<>><<<<^>v^<v>><v^><v<vvv>v^v^<v><<>>v<><<v>^<>><>>^><>v^v>v<<>v<>v^^><<>>>v<<>>>>^>v>><v<<>>>vv>v>^<^^^<>v<v>^<^^v^vvv^>vv>^<v><vvvv>^<<>vvv<<<vv>^^<^>^>>v>v<<<<<>^^vv^>>v>^<^<v^v^>^v>>v>^v<><>^<^>v>v<<<^^^v>^<<<>vvv^v^^>^>>^>v>v<>^^><>>v>^>v<<<^^^v^<v^vv>><><^<^<><vvv<v^>>^v>vv<^v<<^vv>v^<<v>v>v>^v^>^v<<^v^vv>v<v>^<<><v^>>v<>><v<<<^v<<>vvv^<vv<vvv<<>^vv^^v><^>v^vv<<v^<<^^^<^<>^^<<>v<><<v>^><>^<><<v<v^^>vv<>^<v<^<vvv>vv>v><^^v<>><^v^v><><>><v<v>vv<>>><v^^v<>><<^>>><^^^vvv<<<vv<<^v<<<>><<vv>>>>v<<<<<vv><><v>v^^<<^vv^<vv<>>vv>^<>^v^^<>^^^vv>v^^<v<><v>v<v>>^v<v<>>^<v^^><>v^^^>v^^v<vv><^>v^v^<>v>v<v<^^>>v<^^vv^v<^^^^vv<<><<^>>^^<<v^^<<^>v^>>^^^><^^>^v^v>^<<v<vv<<<v<^^^>^>>^v<>^<^>v>^>^v^<^^^<^vv<v><^^>>v<v>^>^v^>>>>^v>^^<<^<v^v<^<<v<<^><^^<v^<><v>v^<<v^^<><<>>><vv<<><>^<>>>v<<v^^^v^^<<<vv<<^<^<^vv^<><><<^^<^^>v^>^<v<>>v^v<><<v>^^v>^<^<vvv<v>v^v>>>^^<^<v^>^vv<<<v<<>^><><^<>v>>>v<v^<>v>><^^^v^^^v<^^<vv^^^>v>v<>>^^<><>v>^<v<>^>>>><>v>^v>^vv^v<vv<<^^>><v<>^>^^<v<^>^<vvv>><>^<<>>><<<><>^^<<<v<>v^>v>v<v>^^^>^>^v<<>v>vv>><<<v>^^<v><vv<<v^^>^>>^><^>v<^<^v>><^^>v<vv^^><><>^><<><>v^>v<><^^>><>^<^^v<^<<v>><v><<<^^<<v<^vv^v<>><>>>^>v<vvv^>^<><v^><^<<^vv<^v^v^v<>v^^v>v^<^>^vv^>>><<>v^vv^<>^v^><<v^v<v>v^<><>>v^v^><>v^vvv^^^<<^<<v<<v<^vv^>>v^v>^^<v<>><>v>>v^<>^>v>^>><<>v^v><^v>v>>><v<v><^<^^>vv<v><^>^<^>^^v><><v<^^v<<><^<<v^<v<<><^^vvv^v>^>^<>>vv>v^^v^^vv<^^>><v^^vv><^v>v^<<v<^v>vvv<>>^v><<>^v<<<>^><^vv><<^^<v^>v<<v>^vv<>^v>>>><<<<^^<^v>^<^^<^<^^>>^^v>^^^^v^^^<<>^^vv<<v^^><v>><^<<><>^>v<>>v^^^>^v^^v^<v^v>v>>>>>^v>^>^^<vvv^^<v^<<<v<<>v>><^^^v<<^^<v>>^<^<^><^<<v^v><<vv<^<>>v>v>^v<><<v>^>vv^v<v>v><^<v>><>^<vv<v^^^^v<^^>><<^^>v>v>^^^<>v>^v^^>vv^vv<^^>><>^>^<>v>><>^v<<v>v>^><^^^v^<vv><<^v^>v^>vv>v^<>v><vv><^v>v<><v^v^v<^v<>^v<v^<<><<v>>^v><v>^^<>vvv^>^<<v^>><^>><^<>^v<v<v<^vvv<><<^v^<v>><<<v>^<^<v>v>^vv^v>v<^^vv<<vvv^<v>><>vv^>v<<>v<vvvv>>v>^^>>><<<^>^vv>><v>^^^>v<^vv<>v<<<v<<<<v>>>>^<^^^^>v<^^<><v>v>v<v^>vv^>v>v<^>^v^<>v>>vvv>^^><^vvv>><>>>^<<^<v<>>>v^^><v<v>>^><>v<^^v^<<v><>^<>>><^v^v>>>^vvvv^<><<<v<^>>v>^v^<v<v<<^<<v^vv^v>v<v<>>v<v^<<<><v^>><^<<^>^^><v>v<^v^<^>v>^<<v>v^<>v^<>vv^<>^>^>v^>^vv<>^^<<>>v<>^v<><v^><><<<vv>v>v^>vv^><<<<v>^v<><>^^<vv>v^^v^^^<v<^^><v^v<>><v<vv>^<>>><vv<^v<<>>^><>>v<v^v^>>>v<<>v<<<<<<<^v<<^^^v<^v<>v^^<<<^<>>v^vv<v>^<^^<^^<<^>vv><^<^^v<<<^><^v<^><>v<vv^>^v^^>>><<vv^^v><^<<^<>>^>>^<<<<v^vv<>>>v>^v>><>v>>v>><>v>><^^><v>^^vv<^^<^>vv><<^>><<><v>^vvv><^v^>vvv^>>^<><^>^<<>>v^v>v<<>^>>^>v<^^<^<<>^^v<vvvvv^^^<^<>^^v>v<>^<^^<<v>v^^vvv^^v>^vv<v^>^<>v<^v^>^<v><v<<<^v<v<v^^<vvv>vv<<vv>v^<<v<^<vv><^>^><^^<^^<<v^^<v^v<v^^^^>^>vv^<>^<>^>^^<^v><<<^>vv^vv>v^v<>^^v^<^^^vvv^><v^<v^^<v<>v^<><>v>vv<^v^>>^v<^^vv>vv>^>><<<<v^^<^><>^><>>v<>>v>^v<^vv>^^>^<^<<v^>>v^v<^^v<vv<^<><^^>^^<>^^^<vv<v<<^^>^>^vv<^>><^<vvv^<>>vv^><v>v^>^vv>^>v^^<>>^v<>>v<^>^v>vv^<vv<^^>>^<v>>>>vvv>vv>^><^v<<<>^^v>v^v<^^^v^^>^><<^^>^<v>><^^^^^<v<vv<v<^<>^^<^v<^>>vv>>^v^vv<>><>^>>>^<v>^^^^><^<<<v<>^v<><vvv^<^^>vv^>>v<vvvv><v^v><^vv<^v<><vvv<vv>v<>^v^<<>>>>v^^>^vv<<vvv<^^><v><><<>v^v<^<^>><vv>^^><^>^><<><v<^v^><^<><>vv>>>>^><<^^^<^v^>^>^^>^<^><v><^^<^^<>><><v>><<<>^>^^v<>^<<<v>>vv>^>>^>^<>>vv<^^vv<>v<>^^>^v<v^^^^v<>^<v>v^v>^^^<v>v<<<^vv^><>^<v>>^^vv>v^<<^><>>vv^^^^^>v>>v<<<>^<vvv<<><><^v<^v<^>^<>^vvv>^>v><<<vv<>v>vv<v<<v>^<^^>v^v>^<^v^<<vvv^^<>^v<<^>^<><>^^<>>^^<^v^<^<v<><<^><v<>v^^>v^v^^^<^v<<^v>^>>^^^^^><<<vv^>>v^><v^^vv><>v^^<^v<^<v^^><<v>v^^^><^^^><<<<<>^<<^<>>v<<v^v^^v<<>^<vv>>><^^^<>>>>vvv>v<>>>v^v^v<^<<^>^<<>v>>^>^^><^><<^v^^<^<>v^v>vv<>>>>>>v<<><v^<v<>>^^>v<<<>^<<v><^><<^v>vv>>>><><>v^<^v><v^<<<<^v><^>v>>^^^v<^>>^>>v<<^<<>vvv>>^v<>>^v><<<^v^v<><v>^vvv<v<v>^^^<><vv^<<>vvv<v<^^v^^><v<^v<^v^<v<^>^^^>>v>^<v^>>^<><<><vv<>vv>^v^>>^<<v<^^v>v<v<vvv>><><<><vvvvv<^v<^>^^><>^<<>^v<<>>v^vv<<>^^v^v^v><^>v>v<^<<^<^>vv>^v<<^>^>>v^<<v^>v^^v^^<v^v>>><vv><<<>^v>><><v<vv<^>v<>><^v>^^v<<<<^v^vv<<<<><><^<^<^v><<^^v^<<<<<^^><^^>vv<v<^<v>v<^><><v<>vvv^<vv>v^>^>^^^v<<^<^^>vv<v^v^v>^vv^><^v^<<>v<^^>^vv<<>^<<><^>v^<<^<>v><><>v<<^^><^^^v>>v>^vv<v^>>^v^^<><<<<<^>^v^<^<^^>^vv<^>v^^v^<>v<><v>v^v>vvv><><<><>vv<vvv^v>^^>^^^<><^>^^^>v<vvvv<>vv<v<v^^>><>v<>>v^>v^^vv^>v>>><v<<<<v<^v>><^^>^v^v<v^v^^^vvv>>>vv<^>><<<^>><^<^>^<^>^>>v^<^<>^<^^<><vvv^^<>^<>>><<v>^<^<v<<><^<<^><^^>vv<>^^><v^v<vv<^<vvv<<^>v^>>v>>>v<<^vv^<><>>>^^<^v^>>^>>><<v<<^<vv><^<>^>>^v>>><^^^<<<vv<<v<v>^vv><><<>^^^<>^<vv^<^<<v>^^><vv>><>>>^>vv>^<^<>>^<^^><v>v^><v>vv><><>>><><<^^v<<^v<v>vv<><><<^v>^v<>^<^^^v^>^<^><^v>v>^v<>><^^v^^^^^<><v<>>vvv<v^^<>v>>>>^<<><^v>vv>>^^><<><><^^^<^<^<<^v>^^^><v>>>>><<v<v>v^^^<>>v<vv<^<>v^^^v<><^>v>><<><>v<^><<>>><>v>^<>>^>v^v<<<<>^<v^vv^>vv<<><v^vv<v<v<<>>>>>vv<><>^<^v>vv^<<v<^v^^<<^<<^^v^>>><<>^<>><^>>><v<>><<>^^>><<<^^^^^v>>^<<>>vvvv<^v<v^^<^>^vv<vv<>v<<<^><>>>>vv^<^v>v<^<>^v>>^<^^v^>>><>^^<^v>>v<<>vv<vvvv<>vv>^><>v^<>^<<^vv<v^^v<vvvv><^>>^v^>^^<<<^>>^^>^<^^<^<<<v^<^^v<<vv^<<^^^vv><v<vv^>v^^v<v>^^<^v<^>>><<>vv<<^><<v^v^^^v<vv>^>vv<^>>^<v<>vv>>>^>>><<v<^<>^<<<>>^<<>><^<<^^^>>v^^>v<<<>v>v>v<v<^>^<>>>^vvv><<^^<<><v<><^<v<vvv>v>>>>vv^^v<v<^<^><v>^v<<v<vv>>v>v<<<<><<>vv<><^^^<>>v<v<vvv><v^<vv^>>><v^^<>>>^^<><^<^v^><vv>>^^v>^<<v^>v>^^>^v^<v<^<v^v><>>v^^<^v^^<<>^^>v^^>><<<<^<^^v>^^v>v<<vv^^vv>^>v^<v<v><>vv>>^<v^v^<v<^>^v>v^^>vvvvv<v><<>vv>vvvvvv>>v>>^^^<v>vv^^><<v>>v^^^^v>vv>v<^v>>>>^>^><v^>^<v<vv>v>^>><v>><<>>^vv<vv^^<^^>>>>><><<^<v<><<v>^><^vv^v>>>>>v>^>^<vv>^v^>v<^v^<^<<vv<<>v<>>^vv<<>^v^v>><><<>>v^^<<>^^<v><>v<<^^<^^>^^>^<^><>>v<>>^^<^>><<<v<>>>^v^>v>v<<^^<<^>v<v^>>v^^v^^<<>^v>v><v^>v<^^>^<vv><vv^<>v<><^<<<vv<<v>v<^<<<<^^>v^v^^><<><^^^<v>v^^>>>vvv><>vv<>>^^v^v<<^>v^^v^>vv>^<<v<^<v^>^^<<v<^^>^v^^<^^v<<>>vv<^>>^><><>v>>v<>^<v^^><<>>>`;\r\nexport default data","import { Day } from \"util/Day\";\r\nimport day1 from \"./2015/day1\";\r\nimport day2 from \"./2015/day2\";\r\nimport day3 from \"./2015/day3\";\r\n\r\n// eslint-disable-next-line\r\nconst days: Map<number, Day<string> | Day<any>> = new Map();\r\n\r\ndays.set(1, { ...day1 });\r\ndays.set(2, { ...day2 });\r\ndays.set(3, { ...day3 });\r\n\r\nexport default days;\r\n","export const count = (haystack: string, needle: string): number => {\n  let score = 0;\n\n  haystack.split(\"\").forEach((step) => {\n    score += step === needle ? 1 : 0;\n  });\n  return score;\n};\n\nexport const range = (start: number, end: number) =>\n  Array.from(Array(end + 1).keys()).slice(start);\n\nexport const findTwo = (data: number[], target: number): number => {\n  let second = -1;\n\n  const first = data.find((a) =>\n    data.find((b) => {\n      if (a + b === target) {\n        second = b;\n        return true;\n      }\n      return false;\n    })\n  );\n  return first !== undefined ? first * second : -1;\n};\n","import { findTwo } from \"util/collections\";\nimport { Day } from \"util/Day\";\nimport day1data from \"./data/day01\";\n\nconst makeData = (data: string) => {\n  return data.split(\"\\n\").map((raw: string) => Number(raw));\n};\n\nconst findThree = (data: number[]): number => {\n  let second = -1;\n  let third = -1;\n\n  const first = data.find((apple) =>\n    data.find((orange) =>\n      data.find((pear) => {\n        if (apple + orange + pear === 2020) {\n          second = orange;\n          third = pear;\n          return true;\n        }\n        return false;\n      })\n    )\n  );\n  return first !== undefined ? first * second * third : -1;\n};\n\nconst day1: Day<number[]> = {\n  title: \"Report Repair\",\n  description: `\nBefore you leave for vacation, the Elves in accounting need you to fix your expense report.\n`,\n  data: day1data,\n  dataConv: makeData,\n  parts: [\n    {\n      title: \"Part 1\",\n      description: `\n* Find the two values in a list that add up to 2020\n* Return the product of those two values\n`,\n      func: (data) => findTwo(data, 2020),\n      tests: [{ data: \"1721\\n979\\n366\\n299\\n675\\n1456\", result: 1721 * 299 }],\n    },\n    {\n      title: \"Part 2\",\n      description: `\n* Find the **three** values in a list that add up to 2020\n* Return the product of those three values\n`,\n      func: (data) => findThree(data),\n      tests: [\n        { data: \"1721\\n979\\n366\\n299\\n675\\n1456\", result: 979 * 366 * 675 },\n      ],\n    },\n  ],\n};\n\nexport default day1;\n","const data = `2004\n1867\n1923\n1819\n1940\n1675\n1992\n1728\n2006\n1578\n1630\n1893\n1910\n1509\n1569\n1967\n1917\n1922\n1919\n1813\n1870\n370\n1617\n1600\n1729\n503\n1856\n1842\n1990\n1605\n1931\n1827\n1618\n1727\n1920\n1802\n1523\n1797\n1816\n1962\n1748\n1946\n1714\n1863\n1559\n1866\n1894\n1646\n1720\n1787\n1519\n1765\n562\n1823\n1639\n1697\n544\n1938\n1681\n1477\n1778\n1718\n1853\n1632\n1651\n1694\n1683\n1911\n1692\n1997\n1745\n1873\n1750\n1795\n1924\n1724\n1596\n1726\n1979\n1869\n1740\n1847\n1951\n1541\n1755\n1991\n1680\n1612\n1903\n1691\n422\n1508\n1665\n1948\n1707\n1773\n1861\n1954\n2005\n1808\n1904\n543\n1678\n2001\n1688\n1855\n1258\n1695\n1877\n1554\n1568\n1771\n1857\n1597\n1738\n577\n2010\n604\n1655\n1644\n1671\n1281\n1777\n1690\n1702\n1949\n1679\n1862\n1525\n1789\n1959\n1595\n1641\n1829\n1941\n1854\n1619\n1706\n1530\n1828\n1926\n1577\n1614\n1963\n1935\n1627\n1607\n1769\n111\n1647\n1716\n1696\n1868\n1021\n1906\n1575\n1905\n1668\n1758\n1915\n1892\n1663\n2003\n1943\n1742\n1883\n1576\n1510\n1546\n1734\n814\n1367\n1902\n1698\n1912\n1818\n1615\n1851\n1564\n1719\n1952\n1616\n1988\n1768\n1957\n1744\n1858\n1705\n1794\n1944\n1973\n1960\n1887\n1804\n1913\n1770\n1825\n1737\n1799\n1532`;\n\nexport default data;\n","const count = (haystack: string, needle: string): number => {\n  let score = 0;\n\n  haystack.split(\"\").forEach((step) => {\n    score += step === needle ? 1 : 0;\n  });\n  return score;\n};\n\nexport default count;\n","import count from \"util/count\";\nimport { Day } from \"util/Day\";\nimport day2data from \"./data/day02\";\n\ntype PasswordRecord = {\n  lo: number;\n  hi: number;\n  char: string;\n  password: string;\n};\n\nconst re = /(?<lo>\\d+)-(?<hi>\\d+) (?<char>\\w): (?<pw>\\w+)/;\n\nconst makeData = (data: string) =>\n  data.split(\"\\n\").map((line) => {\n    const match = re.exec(line)?.groups;\n    return {\n      lo: Number(match?.lo),\n      hi: Number(match?.hi),\n      char: match?.char || \"\",\n      password: match?.pw || \"\",\n    };\n  });\n\nconst countChars = (record: PasswordRecord): boolean => {\n  const charCount = count(record.password, record.char);\n  return Number(record.lo) <= charCount && charCount <= Number(record.hi);\n};\n\nconst countAtPos = (record: PasswordRecord): boolean => {\n  return (\n    (record.password[record.lo - 1] === record.char) !==\n    (record.password[record.hi - 1] === record.char)\n  );\n};\n\nconst testdata = [\n  { lo: 1, hi: 3, char: \"a\", password: \"abcde\" },\n  { lo: 1, hi: 3, char: \"b\", password: \"cdefg\" },\n  { lo: 2, hi: 9, char: \"c\", password: \"ccccccccc\" },\n]\n  .map((row) => `${row.lo}-${row.hi} ${row.char}: ${row.password}`)\n  .join(\"\\n\");\n\nconst day2: Day<PasswordRecord[]> = {\n  title: \"Password Philosophy\",\n  description: `\nThe shopkeeper at the North Pole Toboggan Rental Shop is having a bad day. \n\"Something's wrong with our computers; we can't log in!\" \n\nThey have created a list of passwords and the policy for that password.\n  `,\n  data: day2data,\n  dataConv: makeData,\n  parts: [\n    {\n      title: \"Part 1\",\n      description: `\n* The first two numbers indicate the lowest and highest number of times a given letter may appear\n* Count the number of valid passwords\n    `,\n      func: (data) => data.filter((pw) => countChars(pw)).length,\n      tests: [{ data: testdata, result: 2 }],\n    },\n    {\n      title: \"Part 2\",\n      description: `\n* Actually, that's not how the password policy works\n* Each policy actually describes two positions in the password\n* Exactly one of these positions must contain the given letter\n* Count the new number of valid passwords\n`,\n      func: (data) => data.filter((pw) => countAtPos(pw)).length,\n      tests: [{ data: testdata, result: 1 }],\n    },\n  ],\n};\n\nexport default day2;\n","const data = `7-9 l: vslmtglbc\n2-3 s: hpbs\n1-3 v: pvvr\n2-8 h: hhhhvhhh\n9-10 x: xxxxxxxxzv\n2-5 q: xdqbjj\n17-19 n: nnnnnnnnnnnnnnnnrnsn\n5-7 f: fxfkffffff\n4-7 h: hrjhxlhh\n11-12 v: vvvwdvvvvvvvvv\n6-7 q: tqqqqvqqq\n2-4 b: vlmndngvbkptbb\n1-4 t: mttwt\n3-4 v: vmgdcj\n4-17 n: nwnnnnnnwqncnxxnn\n3-4 c: gscc\n3-4 w: wwwwww\n8-12 j: jdjjtjxjjjjj\n1-5 b: bmbfbbb\n5-11 k: kkkkkkdkkkkk\n1-4 m: mmmm\n5-6 z: zzzzhzzz\n8-10 z: zmqzzzzgzlzdz\n14-15 r: rrrrrrrrrrrrvnr\n11-13 q: qqqqqqqpqvpqwq\n3-7 q: qnqhqcqq\n11-17 r: vrrrrrrjrrrrrrrrrrrr\n2-5 g: srqmltncfgdg\n7-11 w: wwwwwwtwwwqj\n5-14 j: hhwjmjzmjjxjjkjgjj\n11-14 x: xffrxxxxxxzxrxxmxqlw\n14-16 c: hqcchcjwrxbcgclctx\n10-14 k: kkvkkdbqnqkkbfftxm\n10-12 c: cccccccccccc\n7-13 x: dbjtkxxfjsvvx\n9-11 d: ddddddddxdb\n4-8 h: mhbhrsvtl\n8-13 h: hbhrhjhhjhhqpthxnwhh\n10-11 s: sssksssrsssss\n6-8 m: mmfmmmmm\n4-14 h: bhhnhvhhhhhhlvhmqkh\n1-17 c: cccccccccccccccccc\n10-11 r: rsrprprrrnr\n10-13 d: dddddddddhdddd\n5-7 s: msfscsndswsl\n3-8 b: bbzzbhbwb\n9-20 b: cbbcrbwjfrddqbvzrfxb\n9-15 h: shpdthhhhhshhhhh\n5-6 n: nnnnnn\n1-7 f: dfffffffff\n10-11 f: fffffffffvf\n3-4 z: xmkkvcrqdz\n15-19 h: hhghhhhhhhmhhhhhhhh\n4-7 m: lmxkhmmm\n3-4 l: zlllkfzcldctlmhq\n2-5 j: jxjjqj\n10-11 s: sssssssjsgw\n2-4 j: vjkjp\n9-18 l: lffnlbmrmrvlkrpchj\n3-6 q: qqhqqdqq\n18-19 d: ddddddddddddddddddd\n1-8 m: mmsmzwbchmmlmljslkk\n2-6 m: tmbtmmgmmwm\n2-8 j: jrjjjjjp\n8-12 d: ddddxdbtvdnbdk\n8-13 t: tttttttxttrtr\n8-13 w: wwwwjgwzdxwwp\n3-14 j: jjkjjjrjjcjqjjj\n3-4 q: qgpx\n6-9 p: ppppppppp\n6-8 f: fdffffff\n5-10 x: xsmxxxxkxxhtxxmx\n1-4 j: dzrhcjljjv\n13-14 s: sdxcbwfsprkpss\n9-13 n: nnnnnnnnnnnnnn\n3-7 r: rrrcrkrrrrm\n4-11 f: fmfrfgphxqf\n4-13 t: tttrtptttzgttwj\n10-12 w: wwwwwwwwwfhh\n10-11 q: qvqqqqqjqptqq\n8-10 s: sssssxsssv\n12-15 c: dsmccckcccbccwcccdc\n5-7 l: nllffcmrwkdhw\n8-10 t: tttzttvttgtqt\n7-8 m: mmmbmmjmm\n7-9 c: ckccqmmcccjckdc\n3-4 w: twwwd\n11-13 g: ghgpggggwggclgfggtzm\n10-11 m: lvwmmmmmbfmm\n9-12 g: gggggnggtgdgg\n5-7 k: kkkkkkk\n11-13 g: ghgggggggbrgzgg\n3-7 z: zzzzzgzz\n7-10 z: zzzzzmszzdzzz\n15-20 w: wwwwwlwwwwwwwwwwwwwc\n7-9 z: zzzzzzzzz\n1-8 q: qqnhbczhtzg\n11-14 s: sgcssssvsssvsslvss\n2-4 w: mcztwwt\n3-7 w: wtwtdwpb\n5-8 r: rrrrrrrsr\n7-8 v: vnvvvvvv\n7-8 j: jjjjjglwj\n5-6 w: ktkvwwgqbxgckq\n7-9 f: ffffzfffff\n12-14 n: nnnnnnnnnnnnngn\n3-5 z: zzzzdz\n5-11 j: xmjjtjjbjngk\n3-5 l: llvldllllvl\n7-8 h: hhhhhhhnhh\n17-18 p: ptpppppppppppppprq\n2-6 s: sssdnlgqjxcvssh\n3-6 h: dhhthhhhch\n6-18 k: khkkkkzkmkkkvttkkkkk\n3-4 x: dxsxxx\n4-11 b: bbbbbpbbbbb\n5-7 t: ttzthtx\n3-6 k: kkrkkxkkhkkk\n2-7 b: mbzbjfnb\n9-12 l: fglllllllllkl\n11-14 l: plctdxwbmnbqnczwvjlv\n2-10 f: jfdtpsntnf\n18-19 d: dddddddpddddddddddd\n4-6 h: gkhbkhhhkhppb\n7-9 f: ffqvffffffnfr\n3-4 l: llzl\n2-12 d: dccfdbdddddndd\n12-17 b: bbbbbbbbbbbbbbbbbbbb\n2-3 k: bkkp\n5-9 h: hlhhjhhhl\n4-12 f: ffffrffffffffffflffz\n1-5 v: vvvvvwvv\n8-9 l: lllllllgb\n15-18 t: ttttttttntttltvtts\n6-7 q: zqpqcgbqqq\n5-11 w: lgrktkmkqzjvwg\n8-9 p: ppppppppp\n3-4 c: cccc\n7-15 b: bqbxzbbbdtbbbmbb\n9-11 k: kkkkkkvkdkktk\n4-6 t: bktttttt\n6-10 m: bwtpbsmmnmmlmfd\n5-12 z: zzckszrdzzpmzzzzk\n4-5 q: qqqck\n3-6 k: kkwpsbbqkntgz\n1-6 k: kkkkkk\n1-7 f: fffzffffffffffjq\n3-4 p: jqpxgn\n7-13 v: wvhzbmvvvvvvgvvv\n3-5 p: ppvdfgr\n16-18 c: ccccqcccwccgcbctsk\n5-8 p: ppgpgpjgpzqpw\n1-3 t: tspmnttttfm\n2-9 b: bmbbbhbbxbb\n2-7 n: dnnngnnnmnnnnckn\n12-14 c: cccccccccbccrm\n12-14 q: qqqqqqqqqhnmlpqqqq\n2-3 n: whnnmf\n13-15 h: hhhhhhhhhhhhchp\n4-5 k: kkcmw\n6-7 z: wfqwfkhdvd\n3-4 h: bqnhhhncph\n3-4 j: kjgkj\n16-17 s: ssssssssssssssfqx\n4-6 r: rrzbpw\n2-3 m: vzmmmm\n17-19 z: zzzxzzzzzzzzzzzzfzz\n7-12 s: nmpsssdhszssssssnhs\n4-5 l: lfqlcl\n3-5 d: fdtdb\n6-9 b: mlbbjhbbbbbbl\n1-5 g: gggggg\n4-7 x: xxbxxhxxkxsx\n3-6 j: kspjgjzxfpdclkrzk\n2-7 s: ffwpjssskscsv\n4-5 n: nnndf\n5-15 g: gtljgmrlggmghbv\n13-16 v: vvvvjvqbvvvvvvvhvvs\n6-9 b: dldbmbsmb\n5-7 f: sfvffffft\n1-3 b: ztblbcxnrmkvnfvz\n10-12 r: dljvqxnjttjvtfrcxgh\n14-16 w: hgwslvnzbhhxwwvwprww\n6-8 s: vssnsssgptshmkst\n6-8 s: scssssshs\n6-12 g: gggggfgggtnhm\n6-10 j: hlcjjlfpljpwjjrvpl\n2-8 m: zbbmxlzlrckhrcmksf\n1-7 v: vvvnmvl\n3-4 x: fxpt\n3-12 h: hhhhhhhhqhhhh\n8-9 t: tttttttftt\n12-18 r: rrrrrrrrrrrrvrrrrdr\n10-14 d: dbdddddddvddddd\n15-17 r: dvrhrrrrbnrrprrrrrr\n7-11 v: fvjgvgvvvsvz\n5-6 m: dsmjmm\n7-12 k: kkkkkkknkkpkkz\n4-7 h: fhdhmhmvwfsh\n8-9 f: ffffffffgf\n2-4 h: hhhk\n5-9 r: mdrcwmllvgnjfzfcwztt\n8-9 g: gggggggnjggg\n11-16 v: vlgfvvnvvvvvvvvv\n12-16 t: tttttttwtttptttk\n4-6 w: jfvkvwx\n12-17 w: phmrqwdwwqwwwwbwzbwr\n16-17 m: mmrmmmmmmmmmmmmdm\n9-10 z: jzhzzzzzzzz\n11-14 x: xxxxxxxjxxxcxm\n11-12 b: bbbbbbbbrbgq\n3-5 j: sxjjmxjrztjjldkpbcq\n10-16 l: lhlldlldljlllmlm\n2-10 t: szsnwnkttt\n7-9 q: ppxcslxzj\n14-15 c: ccczcccccccccnm\n2-9 l: dllppswblllkltl\n1-7 z: kcklcmt\n8-9 p: ppppppfhjp\n4-8 f: ffjkkffl\n5-11 g: hgxgggcgjglbgzcdzg\n2-4 d: ccdq\n11-14 r: rvrtrrrrrtrnrqrrr\n9-11 k: kkckkgkzsmkkkrwknkm\n7-9 x: sgmxhhjxnpgcx\n6-8 t: qhbpjtjtttttttt\n7-8 q: wqqrqqqqqn\n3-4 z: jzqgm\n4-19 g: gdgmgjggkgpghgggggg\n2-11 g: ggtgggggsgs\n3-5 j: xdtjdjpjwljmd\n1-5 h: hbnwh\n2-4 h: hhfhhzhdqzhwchql\n3-11 k: kjgjltkkmkkm\n17-20 d: ddfnglddnddpqdqwdwbd\n1-4 x: gxkpxx\n2-3 b: zbbmkb\n2-9 r: hrhphqrcr\n7-10 d: dkdvddddddn\n3-4 x: dsxbt\n18-19 p: npnnpwpppgvxwmzpszv\n14-16 v: vvgvvvvvvvvvvjvvv\n1-8 h: nhthchpdnh\n7-14 s: ssgssfsmrsssldgscfd\n8-9 h: hhhhghhpv\n4-5 g: kggslg\n3-9 g: gggglngjzgg\n11-13 h: hhhhhhhhhhhhhh\n4-7 l: lllslgll\n2-4 c: cccccnk\n1-11 l: hltwqljjlzllhq\n1-2 x: bkxtxx\n4-5 v: vvvvg\n7-8 x: xxxxxxqd\n13-14 n: nwvcqqtwttfhnn\n2-7 c: cccchcs\n2-5 p: pbpgv\n16-17 t: tttttvttttttmttlvttt\n1-2 j: fbjj\n2-5 n: knznnncnfnvn\n11-12 l: llglllcnlfllllkllr\n7-8 v: vvvvvvtr\n8-9 k: kkkkvkkkp\n6-7 q: tpxqqqr\n5-7 s: sssnssshvxs\n13-18 m: mmfmmmmmmmmwlmmmmn\n7-11 p: ppppppppppp\n6-7 s: bsssssds\n3-7 q: qmqwqqqqqqhfp\n4-5 r: tffrr\n9-11 c: ccccccccccc\n1-3 w: vvlhw\n1-8 g: vgggggghg\n5-6 p: txlxppppspkplxf\n7-13 f: fffffffffffff\n2-8 g: gggggsgggg\n2-5 w: wbwwz\n2-3 p: spsrhtmjzpmgvj\n1-4 d: vbtd\n4-5 g: ggggf\n14-16 v: dvvfhdjcvvvmvdvnm\n6-8 x: xxxxxxxxx\n5-6 j: jjnjjj\n13-15 m: mmpmmvmmmmszmdgkm\n4-16 z: zzzzzzzzzzzzzzzq\n4-10 x: xxxxxxxxxxxx\n4-5 r: rrrrr\n10-11 m: rmmdmmmmmmdnm\n2-3 q: qqqs\n7-11 m: mmmmmmmcmmmmx\n2-4 x: dcfr\n2-4 p: cpppgpp\n1-3 n: vnqgqbhn\n3-4 p: pppx\n13-14 f: fffgfpfffffffqftfn\n2-5 h: hsdhhhh\n3-6 q: pdqvtq\n6-8 l: lllllmlll\n5-6 v: vvvvld\n10-11 x: jxhxdchxjwx\n7-8 h: hhhhhhhh\n11-19 z: dtzzxcztmzzzzzzjqzzz\n3-4 h: thcchhh\n3-5 b: dbbwjbbnb\n11-12 q: qqtgqqldkqqqqqqctqq\n12-13 l: lllllllklllcxl\n2-8 s: sppbsvjfp\n10-20 g: xgswhgldgggdkxjggzzg\n2-4 n: nnnnn\n3-5 c: xmtccjj\n1-7 w: wbqwwwsc\n3-6 g: wgghgngg\n4-6 p: pppptpppwp\n1-3 j: jjjjjjjjjjjjjjjsjjjj\n2-6 r: drbwrrmtjnzrfsrxwq\n1-5 v: rcvvd\n2-3 w: dwnzf\n4-6 l: lrlbld\n3-7 h: hhhhhhkhh\n6-12 b: bktbzmzlbbmvmbpm\n1-7 n: znfnngntfsh\n2-14 z: jzzsgxsqkqmzlzhzljz\n3-8 q: qmqfzhfq\n8-9 d: ddzdddddd\n11-14 k: gkwtwksxrdwxkkh\n3-5 v: vvvvnv\n6-12 s: pksrzgvspsswsxrpsvss\n6-8 w: whpwhwjwwpkww\n8-10 w: wdwwbbwwsw\n13-19 z: zzzfzzzzzzzzwzzzzzr\n3-4 v: vkbv\n7-10 x: wxxxkjkxxxdfxx\n1-3 g: gpgsgqgb\n15-17 r: pfntnqmbtcfcsrlgprqk\n7-10 s: sjdssmsssbssssl\n3-16 p: ppnjzcppkpppmwvkp\n3-7 r: srkrvrjrgrrrr\n3-4 x: xmxx\n1-5 k: zkkhqdgrt\n1-13 c: rcncccdclcccc\n4-7 n: nxfmnnbn\n8-9 g: gngggpgfwggg\n2-5 m: smmfs\n1-12 p: snppbhspvzpppnwpwjpp\n2-6 s: rczxxsvknqcpwklsbc\n4-9 d: ddndgtdddqddddqd\n10-13 f: ffffffffftfff\n8-9 x: xxxxxxxxxx\n4-7 r: krkrsgrfvqzxpcrrgjr\n3-4 c: chdc\n13-14 k: xkkkkkkkkkkkkq\n4-8 t: tmmvccgxfbtttttttt\n14-16 l: trkllqstdlclqzlv\n1-3 x: qkxx\n2-6 s: nsfhklqbnvs\n4-5 g: rlggcgg\n10-12 l: llzlllllllll\n12-14 w: wwwwwwwwdwwtwl\n3-4 m: qmvp\n2-3 d: dddd\n2-6 j: mwqfjdjlnb\n7-9 z: zlzwzrzshd\n5-8 k: jmkjkqdcwkrtvb\n17-18 s: sssssgssssstssssxcds\n1-3 k: qfxkt\n3-11 j: tsjjvpcnsmd\n12-14 v: vfvvdvvvvvvbvjvvvvvv\n4-12 v: wvxmcvzlrvtv\n4-8 q: qqqqqqqqqqqqq\n16-17 s: sssssssssssssssvqs\n3-4 d: ddwx\n3-4 h: hhhh\n8-9 z: znbzzzzgzzz\n1-3 b: tkffshrzkxwjbrxkkv\n3-8 n: nnqnnnnbnn\n6-8 n: bnpnnhfnnnqndxncpgq\n10-16 d: sddddlddjszdddtc\n6-8 x: wwwmqxzwl\n12-16 j: jjjjjmjjjjbxjjjtpv\n15-18 z: zzzzzzzzdzzzczhzznf\n1-18 n: nvhddhnqnnrbvpnnwn\n14-17 z: lbznszzzzzzzzzzzm\n7-9 l: jfqxkllcll\n8-14 l: lllllllllnllllc\n7-13 m: ncmkkmmhwsvhmmsk\n2-5 t: ttttth\n4-5 k: kgkkkk\n4-9 d: ddddddddd\n3-6 n: nnntnnn\n9-10 h: bbjqqhhhwr\n12-16 g: ggfgsjggghcfggbpjggp\n2-3 x: dktxtxh\n1-2 x: grnz\n5-7 x: txxcgddxnwxxx\n12-15 b: bbbbbbbbbbjbbbj\n11-17 f: fffffrfffcfpfcffff\n3-9 l: lllllsvllhltll\n1-4 g: lggfg\n6-7 l: lgllltl\n10-11 c: cccxcwchchcccn\n1-2 m: mmmm\n8-10 h: hhhhdhhbhh\n5-8 d: dnddddtdd\n16-20 l: llrlllgldllllllslllt\n9-13 w: wwwwwwwwswwww\n1-5 f: fpzffwffhrnfdtl\n5-12 w: blwkbsstnvhmw\n7-13 g: ggjngkmgfkngggggg\n1-3 r: rrzr\n17-19 d: ddddnddbddddddddqdz\n9-13 v: zvvhgkvbvqvvvv\n10-14 n: vxxmbptzjnnnxnqshqq\n9-10 h: hlhhhhhqpthhhdds\n3-5 v: vvcsv\n1-5 g: dmggng\n2-8 q: pnprhcxqhmf\n6-7 z: zzstfvm\n6-15 d: ddddddddjdddddd\n2-13 c: fgqtczjthccjcc\n5-6 j: jjgwjjjjs\n11-13 b: bbbbbhbwbzwbqb\n1-4 q: jpqdqqr\n9-12 p: hpwpqppwpbhj\n7-9 l: lllllljfln\n13-14 z: zzzzzzzzzzzzzz\n10-14 w: qjgqwwzrjwpjcjp\n12-13 j: jjxrjjjjjjjsvj\n10-12 n: nrnnnnnpnnnb\n14-19 s: sszssszsssssswssssms\n6-11 z: tzcvzzzlzzmtqzzzh\n14-16 f: zfffkfffffqvffff\n3-4 f: dfzf\n3-5 g: ggsgx\n9-11 f: fffjrfffffpfdfqdff\n5-8 f: ffffvfgfm\n5-8 c: ccccccclc\n4-6 p: ppppppp\n11-16 b: bbbbbbbbbgvbbbbbbbb\n11-12 r: rrnrrrtrrrlbrr\n3-4 d: ldqdp\n11-13 s: lssnssssssssls\n3-4 v: vvvvq\n5-6 d: dkdddd\n7-17 g: ggggggbgggggggggg\n11-12 h: fhpbcfbbhlsj\n5-12 d: hdpdddftmdrhdndjfj\n2-13 m: stmmmmmmmmmmlbmm\n2-6 r: vhqlrnr\n13-18 n: dpmnnwnwgpnhnngndn\n16-18 m: mmmmmmmmmmmmmmmpmm\n13-17 h: vhmhchmthqzshhdthf\n4-12 h: hhhkhhhhhhhmhh\n2-3 p: pppppp\n4-9 g: gmfgxgsgg\n3-5 n: fnnhnn\n6-7 j: gbdjhrjh\n3-4 g: fvgggbgxgk\n4-9 v: lvkdlmhvl\n1-3 d: dddd\n3-5 j: jjjkj\n7-10 w: kzsbhmgjwdsvvqcqwlw\n1-6 v: vldvvvldvvhvx\n3-4 s: hspss\n6-7 k: gpkkkkvkpxk\n1-13 w: whwwwwzwgwdrwzfx\n3-12 k: kkvkkkkkkkkkk\n10-12 s: ssscvmsslsgsshsmss\n3-9 s: msbncdgwbqsksh\n5-9 l: kwlllnwwlhlmlqxdjn\n1-10 l: llldldlllglllj\n4-5 b: bbbbtbbbbbbbbbbbbbbb\n5-7 b: bhbmwsgdcdpbxbfbjls\n4-5 b: bbbnz\n6-8 z: zzzzzzzz\n9-16 q: qmqjqqqxqqqwqqqqpqq\n2-4 s: ssssl\n10-11 t: tlfttttktgbt\n10-11 b: bbbbbbbbbbx\n3-6 p: nvpgwlbfdvtjwzqt\n14-15 x: xxxgxxxmxxxgxwqrxxx\n13-14 w: wwwwwwwwwwwwws\n5-6 t: vprgttk\n3-4 n: hnnx\n14-20 m: vxjbmmfwdhfvmmnnhwrm\n9-10 f: ffpxfwfrjffffff\n2-10 c: cccctcccccfc\n6-10 v: vvvvgkvvvjv\n10-14 x: xxxxpsxxxxnlxvfvx\n3-4 h: gthpwdbhbmtbgsqwpht\n1-2 r: dvfgmprq\n1-4 z: hzzlnjbfgrzlzm\n4-5 x: rxgcxjxxjxsld\n2-14 j: tjmjjgbklphjjbr\n2-4 v: vbvv\n5-6 v: vvvvnw\n4-12 z: zzqzzzzxczzzzz\n1-4 l: mhllllwzd\n17-18 p: zmsrkxhwghxkfbbsgp\n3-8 k: gxvkhkkkb\n1-2 c: cctvchzgnmznck\n14-16 g: wgggmgggggggggglg\n3-8 b: zbrbpbfp\n9-10 b: bbbbbbbbwt\n1-5 t: tgtvl\n11-13 k: kkgkkkkkkkkkk\n9-10 h: hbwhjhjfrvhhhhh\n4-5 w: zdwdw\n1-4 k: kwkkx\n5-6 h: hhhhnhhhh\n2-4 q: npqxsqgqqs\n7-10 j: jjjsljjljjjj\n5-9 d: dwhddqddsdnn\n4-6 d: ddddddd\n5-6 w: wwwkzwnw\n3-4 s: rrksrs\n2-3 x: cgkg\n1-10 t: tfthtmhttz\n1-4 b: mlckbj\n5-10 t: htttjctltkf\n4-5 w: wwnwh\n2-15 j: dvqjjjjsjjmjjgb\n12-13 l: llkllllllzlggll\n3-15 h: hzrlhwcvnhhvhtztvhh\n5-7 r: krrrbrn\n1-20 d: dfddpddddddddddddddd\n2-15 h: kdhhmvshhhpghhphhhh\n4-8 k: wfbkcxkkpsktks\n3-5 v: pfnmkv\n4-5 f: fffff\n3-6 k: rnpnkkkg\n4-7 j: jjjjjjwb\n12-14 r: rrrrrprrrrrrrrrrfw\n3-5 v: vvvvv\n2-4 b: bbqbb\n1-8 j: jbjgnwzj\n4-5 s: sssxm\n1-3 g: zgggrbzjsk\n4-10 w: wgwwwwxtjwf\n2-12 p: jrpjhnpppzplk\n3-11 q: gpqqwqqqqqq\n8-13 m: nmjcmckjmqlmmmnqmmm\n7-8 x: wxxxxxxx\n11-14 s: dsssssshssnsxpsv\n16-18 s: skssssssssssssssss\n5-7 d: gzxmjddx\n3-8 k: kkkkkkkvkk\n9-12 w: wlwwwwtwfwgwnwwwh\n5-7 l: llllllnl\n1-3 h: mhhh\n7-19 w: wkfwpvlmwqcpwmqscws\n3-8 k: srtkpksf\n6-13 q: hxqqtqrqnqpqqpjqqv\n4-6 l: llkllkllllllqs\n17-18 q: qjsqqqmqqqqqqqsqqq\n5-9 l: llllvlllbll\n17-18 m: mmmmmmmmmmmmgmmmff\n2-5 z: zzzzzzz\n1-15 q: pqqqrfqkkqqbqqfqhnk\n11-12 w: wwwwwwwwwwcw\n2-11 f: sffqtlfhffdfgfwff\n5-6 l: llllll\n9-14 f: fvffffffmffffff\n1-5 j: jrjmfl\n1-11 b: wbbbbxbbbqv\n11-13 x: xxxxxxxxxxwxsxx\n9-12 p: qpppplphppppps\n3-4 k: kkvs\n10-20 f: rffqfgthxvfqwffrmmms\n13-16 x: xxxxxxxxxxwxxxxm\n6-9 z: lzzxnbzwjzgzgz\n11-14 c: qrhwwxczldwcdl\n3-7 f: fpffffff\n3-6 n: nnnnnnn\n7-8 z: zzzzzzpm\n3-7 w: wwmwwwz\n5-9 w: wfwtwjwlwddqlrw\n9-12 k: kkkkkkkkkkkk\n7-12 q: qbqwqqqqqbzrqcq\n4-7 h: hhkhkhhh\n7-10 t: fkktttttkfsrtqt\n2-3 d: tbclbd\n6-8 l: lllllhlll\n8-9 v: vlcvtvvvvvvv\n4-8 x: njcxxtpxbhv\n3-6 k: kxkkkdjxbkh\n4-7 j: xjjjfjjsjjsnfjjdd\n4-6 d: bkddhddvdsdq\n13-17 k: kkkfkkkckkkkkkkkp\n5-8 m: xrptnmpbcmfmm\n9-10 k: khkkkkkkkq\n2-3 n: nnjjn\n6-8 p: kkppdsqp\n10-11 s: sssshssssbd\n8-16 n: tnnrngnnnnnvnnsznn\n10-11 m: mdmmmmnmmmlmmm\n1-7 k: tkggrkkkkw\n7-11 h: hhvhhfrhhhfh\n3-7 g: gmggzmggrsw\n3-8 h: hwvldcwddhthsk\n4-7 f: fskfvlfdfsfs\n2-14 d: vdwsmsgjhftncg\n14-18 q: qqqfqqqqqqqqnqqqqqq\n10-12 l: jllllllllzcdllll\n1-9 k: jkpkbhkkd\n1-2 n: nnvhbn\n6-7 q: rzqsqvqqqdw\n2-5 s: wclgs\n1-17 b: tbrbbbbnbbbbbwbrp\n1-3 x: xxxx\n2-3 k: kknkkkk\n2-9 j: btjjpbjzmrjbjj\n4-8 r: rrjkqrwn\n2-5 x: vncxpjxqmsx\n1-15 c: zmfgtshnzwhqskchtc\n1-6 g: gqgkbqtz\n13-17 z: zzbdzzzzzzjzzzzzdzzz\n6-7 n: nxnnnnnn\n5-6 k: dzsrsknkkkwbk\n3-11 s: kzsljkcgkhmpfssssr\n2-3 q: pqtq\n17-20 p: pppsppkpppppppppvppl\n2-6 h: hfbhmkh\n3-13 d: qhdlvhddldnxwtvrndx\n10-12 v: vvvvvvvvmfvhv\n6-7 g: gggtlgggg\n11-14 s: ssssssspscssssshrq\n3-7 z: zdzgzqkcvzhzsb\n3-4 h: hhdkhhhhhhg\n2-4 s: sswps\n4-10 p: zpsppzppczpd\n3-14 j: jjxjjjjjjjjjjvjjjjjj\n2-3 m: fmmmm\n3-9 h: hhzbjrhhg\n2-12 c: cccccccqwcpvccpc\n5-8 h: hbhhfhhv\n1-5 p: pppprp\n3-6 z: zzzzzz\n4-5 d: dddgddd\n5-6 p: nxfhvqpqpnpmpmp\n3-8 q: qqqqqmqqqqmdqq\n6-8 b: bbbbzrbhbbbzp\n17-18 t: ttttttttttttvttflgt\n7-13 m: vsmmmjmbmmzwmmhbs\n5-11 h: bbzxzdhhhhhndtfhgv\n6-9 x: xxxtqxxxxfxxxh\n8-9 r: rrrqrrrxr\n5-6 p: ppspqp\n9-11 d: qqqddddpdddtzd\n4-6 s: sszlssk\n15-16 s: ssjssssssssssssssst\n5-6 f: ffffff\n6-7 k: kkkkkns\n10-11 h: hhmvhhhndhchhxshhhh\n14-15 w: wwwwwwwwwwwwwrx\n3-15 g: gzggggggggggglgg\n11-12 n: nnntnnnnnnnn\n4-10 r: rrrrrrrrbrcv\n2-4 r: vrxtk\n13-14 v: vvvvvvvvvvvvvc\n3-5 v: vhrvnvnvd\n2-15 f: dnfnkzbfvlfnfqfh\n1-2 j: jjfj\n3-5 w: wwwwwg\n3-5 m: bmmmlp\n5-6 w: wwwwww\n13-14 n: nnnnnhnnnnnnnj\n6-7 f: ffcffhbgzkt\n6-9 f: kzffzzffjffgfxzf\n18-19 g: gggggwgggggggggggpr\n13-15 x: xlxxxxxxxxxxcxx\n1-6 j: tjjjjhj\n3-4 h: shpqdhl\n9-15 l: rslpllllkplflqlhpzl\n2-7 r: rrvrprl\n15-18 d: gdddddddddddpddddddd\n13-19 n: nnnnmnnxnxntnnnnnkn\n10-11 x: xjxxxpxxxxxxqx\n7-10 w: wwwwwwwwww\n2-10 l: xllqjvzlwzpl\n13-15 m: mmmmmmmmqmmwmmr\n9-10 t: zptjnttktttttkvttvt\n16-17 j: jjjjfjjgjjjjjjjpjjj\n3-6 w: bnjnqwhhqpxcrgx\n7-8 z: zzzzqdzzzz\n2-4 g: dgkggk\n1-3 q: mqqq\n9-12 n: twqnnnsxlnnpnnn\n12-18 z: czzpzzzzzzztzzzzznz\n3-4 x: xglr\n8-9 n: nnnhnnnnnn\n1-2 v: vgxstl\n10-12 p: qvpwpnjpkwpp\n13-14 r: qrrrrrrrjnrrrq\n3-8 d: ddhddddpddddddd\n4-13 k: kkkkkrkckkgkpkkk\n8-9 q: qvtbqdscg\n3-6 f: fxjqfwdrqxmffhd\n6-7 g: gggggjt\n14-18 x: prxxtgxmxxhrfxtxkx\n11-15 l: lllllllllllllllll\n10-14 n: nnnnnznmnnntnn\n1-3 d: dddd\n16-17 s: sssssssssssssssss\n14-15 w: wwwwlwgwwwwswwwww\n3-9 f: dfblnfrfffrff\n6-7 g: wggfpggggg\n1-9 z: kxjqqkzczx\n3-9 q: qqqqbqqqq\n6-9 w: whwwcwqwwkxwpsbwpnw\n7-15 g: rwggggggggzssmggjx\n2-5 t: dtxbttt\n1-5 x: xxtxxjdxxn\n12-13 n: nnnnnnnnnnnznn\n2-6 b: bxrpbbq\n6-11 n: nnnnndrnnnnn\n10-11 k: kkpkkkbkkpkkjk\n6-8 c: gccccccm\n2-3 x: ptxktrxtv\n13-14 x: xxtxxxxdxxxxmhx\n10-11 v: vvvdlvvvvlvvv\n2-3 k: rtcdksdxk\n17-18 w: zmhvwnndrjbvsmnhlw\n11-12 m: dmmmmmmmmmml\n7-8 g: gvndbzzbsjkpxg\n9-16 c: cccggcqtdkcccccj\n7-10 m: mqmmmmmmmmnmgbgmmbcq\n5-13 c: pcbqcwcnjtvccccfgjx\n3-8 f: ffpffffffffffff\n9-11 n: cdndnntnnnnnnn\n10-16 n: nnnnnnncntnnnmnwnn\n6-10 r: rrrwrrrrpn\n4-8 v: vcwsvvxvwvcvvh\n4-5 g: ggghdg\n8-10 v: vmvdvlrvtvtvvjvvd\n13-16 j: vrgplxbmgwvljtjgzbw\n2-9 s: ssssssnskss\n18-20 v: vvvvvvvvvvvldvvvvfvv\n8-13 r: rrrprrrhrrrgj\n4-6 g: dgjkrhwggg\n2-3 n: nnnw\n7-11 s: sssscsgsssqs\n7-10 c: cccccctccg\n9-16 m: mmhmjwzmmgmdmnmmmm\n1-4 c: ccvcc\n11-15 m: mmmmmmmmmlvmrmmm\n10-11 l: zgcnmxlplml\n2-11 m: fmsmnmlhmmmmmbgm\n6-7 g: hqggggggg\n7-9 z: zzzzkznxzzzz\n3-5 n: ngntcnnpsdnqnnmnrj\n3-9 h: dhhhhfgkthxh\n14-15 x: zbxmkfmtznnnxjjtsr\n4-7 l: tlklltcll\n5-10 s: hffslrssgrsrcwncmqw\n5-12 f: ffffjffpfpfp\n5-6 h: hhwhhhh\n8-10 v: vvvvvzvvvfv\n1-8 n: wqnnnglnrnln\n11-15 q: qqqqqqqfgqnqqqnwql\n2-7 d: wkdwddt\n2-5 m: mxmmm\n8-15 d: ddddddddddddddxld\n6-9 s: sssssgscds\n6-8 z: zzwzzzzzz\n4-8 x: xfxxxxkxsckrwg\n1-9 b: pnlbgtsfwp\n6-10 l: dfrrklhrvp\n15-16 n: qnnnnnnnnnnnnnlh\n16-18 z: zzfczncnztzzkzzzqzz\n12-13 r: rwrrqnrrrrrrkrrr\n1-2 q: qkqqq\n4-8 f: sfpffjfgfw\n5-10 q: qqqqqqqqlqq\n13-14 q: qqqqqqqqqqqqqd\n1-6 v: vvvvtvmqfwvgjjgbtvm\n3-8 f: dfffkdjftf\n1-4 t: hgtttttttw\n5-7 k: kzmkzkmkr\n15-17 w: wwwwwwwwwwwwwwxpw\n2-14 z: mnzkfkzbzhwfzbkzzzz\n13-15 x: xtgxxqxxxxxxvpgrxx\n9-10 q: qcqqvqsqssqqq\n8-12 g: qghgrlggggggggszg\n15-20 l: llllllwllllvllllllll\n2-4 b: whhdhlzp\n6-7 t: tttxtxct\n1-9 g: bgtnvszsk\n6-8 g: gggggggg\n7-10 z: zqzzzzzszzpzkz\n4-8 x: xxxxxxxxx\n7-8 n: ztnnnknhpknvzn\n11-12 g: gggggzpgxggg\n10-13 b: bbbjbbbdbwbbrbq\n1-5 w: whzmwwzwwlwwl\n4-12 p: pbppdzcxhlllpxqxjm\n8-10 f: fzbfpfrdfzff\n6-7 v: vvvvrxh\n1-4 t: gtjt\n3-5 b: jzhpbbbwp\n1-2 t: dtttn\n3-9 r: dqrfrtvsxbrjwbrg\n4-5 p: spppxqpb\n4-12 c: sntctfrcsmwcmrlst\n1-13 n: nnnnnnnncnnncfnn\n4-5 z: zzzzz\n11-15 n: nwnnsnfnntnnsnnxnnn\n3-13 f: ffnfffffffsfffffff\n11-12 b: brfbbqtpbhzrd\n5-9 r: krrmrrrrjr\n9-10 g: gggggggksc\n6-12 m: mmmmmsmmmmth\n11-12 w: wwwwwwwwwwww\n10-11 x: xxxxxxpxxxs\n3-8 j: qgzjmkqhqjszwxjj\n4-6 g: kgggwgfg\n16-18 r: rrdgrrrrrrrrrrrrrkfl\n18-19 r: rrnrrrrrrrrrrrrrrrr\n1-7 d: dprhvrdzdjxddd\n3-4 p: ppxr\n6-13 b: bbwbbbbbbbbhbbh\n10-12 g: hrggghfkqtgswxdjcb\n8-9 p: pcppppppm\n3-4 w: vwlkwbwvp\n11-15 f: fnhfffhfdffffffffff\n2-7 c: kfccccrlc\n9-17 z: zphgvhzrzzzwjzzczxf\n3-4 v: vnxvkdrvvf\n1-11 w: xxnlwlbzmpgwcw\n10-12 v: vvvvvvxlvvvvvvvv\n12-13 t: xtrctttpwptjb\n6-7 z: zzzzzzz\n3-19 m: fmgfmmjpfxmmprmmqhsm\n18-19 m: fkmkpdrrbxzwgvdhqmm\n2-3 h: xchwlphpkhlc\n4-10 j: xrjjjjrjfjjjj\n6-9 z: zzzzzvzzz\n1-7 d: jdddddddd\n4-9 x: xxxrxxxxxx\n1-6 w: dwnwws\n9-13 l: llllllljkllhlhlvx\n4-7 t: tvsttbsqzcwzthtx\n11-13 s: sbssrssssscsdsrss\n5-6 n: bnnnncnznm\n10-15 g: ggggrggggggggwggg\n10-15 g: gggrfggxjgbgggjgs\n3-5 v: vvvbvmvzvcv\n2-5 r: rrrrrr\n4-5 k: bkjkkkkf\n4-8 z: mxddnzzjpbzm\n2-3 r: frrkfzjrncrgpwsf\n10-15 m: mmmmshmmmgmskcv\n5-8 c: ctcchhczcq\n7-8 b: skbqjbbwbncbtbb\n6-7 d: ddddjjxgdd\n6-13 v: tvcmvbvvvdvvvrzgk\n5-10 x: xgsxdxqxxsxxjx\n3-12 f: xfbqfffcftkh\n4-5 j: wmjkhjj\n7-11 n: nnnnpwpnnnrn\n8-13 l: lqnlllllmlwll\n8-12 s: sssssssssssssss\n1-8 g: lggggggwgg\n15-17 w: wwwwwwwwwwfwwwwwww\n4-17 r: qrrlfhrrlrjrrrkcrrbr\n4-5 n: rsrnplnttvxnnkhnvtxz\n4-5 n: nnhts\n5-6 x: xxxxxxn\n1-4 s: gssss\n4-6 p: qpppsgjppz\n12-16 n: zcnkhqnnnnwtqnrnknnn\n13-14 m: mmcmmmmmmmmmmn\n9-11 d: kdpdddbdpgdddhd\n3-8 k: krkbxgvq\n2-6 t: tbhtslxhtfcphkwnth\n3-8 z: gzzxzzzmjzzzz\n4-5 c: cccwp\n3-9 s: skszskstjs\n4-10 l: qljlllzqlllvhlls\n7-11 c: cccclccccccc\n1-2 v: vgfv\n14-17 m: hmmmmmmmmmmmmmmmm\n2-4 p: pppp\n2-3 c: cccs\n2-3 k: xppklhkhsfw\n5-7 m: mmmmzmqs\n3-12 n: nnnqxdvbxnhnrnzfnnp\n15-16 s: kssmjbzlwktbddltd\n8-9 j: jjjjjjjjkntjh\n3-5 g: ggvgpggggmggggg\n6-11 t: rstjsmttmkdtttmttttp\n5-6 r: rrrrbb\n7-8 q: qqqqqtbbq\n3-8 c: ccsccccbcccb\n6-10 q: qplqqlmqqqq\n5-6 v: vvvvvv\n1-3 q: sqdqqqqgqqqqqqqq\n11-12 j: lnjjjjpjjpwjjjjl\n5-7 b: bsdsbbrbqbrpb\n5-6 m: rmxmmmjdrvvmmmt\n1-4 l: llfwh\n1-2 d: hcsd\n2-5 m: mmrjmnnmmmm\n7-11 k: kkkwkbkkkkk\n15-16 g: xsmrgbbgwzqrjgfk\n7-8 x: xxxxxxxxxxx\n3-7 n: nrmnnnndj\n6-10 x: xxkzxpxxxwx\n10-14 x: pxxxxxxpxxxxxxfxb\n7-9 j: pjwjjjjjjjwp\n9-10 r: rfspfrrlrf\n1-5 r: rrrpfr\n6-11 k: qjsqjnkckqfkcvkk\n1-2 b: bbpqjnpbb\n5-11 c: kcjxmstklbcjwktcwgk\n2-3 h: phcshb\n6-18 d: dddhdddddddvpdpdddd\n3-7 t: qtkttttqtttn\n8-10 j: jfjwjjjbsjjjj\n9-11 m: mmmmmmfmmscm\n3-4 v: ldvfvvllh\n5-11 b: wbbbbvzmckbbtl\n2-4 m: msmm\n2-3 f: ffffvjff\n3-13 c: pmchdcwhdwdnchs\n7-12 s: sskdsssssssss\n1-4 x: kwqtxnhhxp\n13-14 n: nnnnnhnnnnnnnl\n11-15 f: nrffwclmlgxgdblj\n3-15 w: wvwwllsksktbbbdxmgmh\n6-7 g: gggggtgg\n12-13 r: rrrrrrrrrrjrrr\n4-5 k: lkkkkkxv\n8-10 h: hhhhhhhkhh\n17-18 q: qqqqqqqqqzqvqqqqxvdq\n3-6 w: wwvwsxj\n8-15 z: zxczhwthhhzrzzpzfzs\n3-5 q: qqqqk\n11-18 z: zzzzzzzzzzlhbzzzzzz\n6-8 m: mmmphqmt\n2-4 h: hnsrkhv\n4-9 x: xxxrxfxxvxwxx\n1-4 d: ddsxjrmdnwswd\n3-6 r: rprvrwrrnflvhnlrv\n7-10 r: rrrrrrrcrwtrh\n13-14 g: gntfgtrbgdfsgk\n12-13 c: cccnbcccccjtkccl\n2-3 f: fgsf\n2-5 f: dfftfsrkz\n6-8 p: wpppprmpp\n8-9 k: kkkxkkkkdk\n8-10 l: lrmlzpllllltlrblgcld\n3-6 z: tfqzzzpz\n4-5 r: nrrrrrj\n5-10 l: llllsrnslglllqcl\n10-17 j: jjjjhjjkjcjjjxjjhj\n10-13 h: hhnlhhhhhhhhh\n15-16 h: chrhphvhxhjphhxk\n5-18 c: cccctcccccccccccccc\n14-15 h: hhhhhhhhrhhhhxb\n5-6 w: wwwtsdq\n2-5 s: slsscz\n8-9 f: fffffffdx\n7-10 s: fdsssgkrpgssss\n16-19 n: nnnnnnnnnnnnnnnnnnnn\n8-18 d: dxdvkddjddddzddddgg\n12-13 q: qqqqqvqqqqqvq\n6-7 l: pvmnlfwzb\n3-5 c: cfnclcfrccxstc\n4-10 m: mmmjmmmmmmmm\n15-17 s: sssssssssssssshsmss\n8-10 q: qqwwktqtqsqtb\n3-4 n: nbxnn\n6-7 p: pppvpvr\n1-5 h: dmqlb\n9-15 g: gplxmjgdgjgzqlgkxhg\n7-11 l: llsltxlllmblgp\n7-8 h: hhhhhghhhw\n12-13 x: xxxxxxxxxxxxx\n2-7 m: tmxtdmmfgn\n12-14 r: wrrrrrrmrrrwrn\n10-16 t: tlttqdtttgcstttntt\n2-10 z: zzzzzzzhzpzzzzzz\n8-10 s: sssssssssss\n5-7 z: zvzzzzzczzzq\n12-13 c: scccwccccccccc\n14-18 v: vvqvvvvvxvvvvvdvvv\n14-16 v: vvvvvvvvvvvvvtvzv\n4-9 d: zddgpddqwdtdd\n7-11 l: xllvlzclflzlnhtls\n6-7 l: lllllczl\n4-12 s: slbsmstssscs\n8-11 b: xbqbtjsfbbgq\n5-15 r: frrrqwcnrrrrhrrqk\n2-3 n: nmtxqfxnnnnnh\n14-17 l: glwlzllglblwlmlll\n10-12 g: ggggggnjggggg\n9-10 b: bbbbbbbbkt\n4-9 m: mcmmmmnfmwmwfmmljxmv\n7-11 l: lxmllrqllwlhl\n9-13 p: bppxpjpmpwcpppdprpp`;\n\nexport default data;\n","export const testdata = `..##.......\n#...#...#..\n.#....#..#.\n..#.#...#.#\n.#...##..#.\n..#.##.....\n.#.#.#....#\n.#........#\n#.##...#...\n#...##....#\n.#..#...#.#`;\n\nexport const data = `.##......#.##..#..#..##....#...\n...##.....#...###........###...\n#....##....#.....#.....#..##.##\n.......#.###.#......#..#..#..#.\n##..........#....#.#...#.......\n###.#.#.#......##...#..........\n.#.##........#..............#..\n..#..........#...##..#.......##\n.........##...#...#....###.#...\n#.......#.....#.#.#...###.##.#.\n...#...#...#......#........#.##\n....#..........#.....#..#....##\n.#.#.##....#.#...#.............\n#....#..#.....#.#..............\n........#....#....#..#........#\n..#.......#...#....##.#........\n......#.........##.......#.#...\n............#.......#..........\n.....#..#.#..#........##...#...\n....#.....................###..\n..#.......#.........#..##....##\n..#........#..#...#........#...\n..............#....##..##....#.\n....#..#.#.......#....#..#...##\n.#........##......#.#..#.#.....\n............#.##...##...#...##.\n.......#........#.........##...\n...#...........#.#...#..#......\n#...#............#..####.......\n..#..#..#..#.....#...#.#.#.....\n....#.#..............#.....##..\n#.....##........#......#.......\n.....#..#................##.#..\n.###.#...................#.....\n....#....#...#.##..........#...\n.#.....#....#.......#...#......\n.....#...#.##.##............#..\n..........#..#....#...#.#..#...\n#...#..#..............###.#...#\n......#....#.#....##....#......\n............#......#......##...\n.#....#...#........#.#.#..#....\n..#.....#.......#.....#.#......\n#....#......#.......#......#...\n....#..##.....#...#........#...\n.#..#......#..#................\n.#...#...#....#.#...#.....#...#\n......#..#...#...#..#.......##.\n...#..#...#.#.......#.......#..\n..#...#.........#......#......#\n......#...#..#..........#......\n.#..#......#....#.#.#...#....#.\n.#.#....#.#.#..#..#..#........#\n....###.#...##..#.#..#....#....\n...#.#.#................#......\n.#.....#..#..........##..#....#\n..........#..#......#.........#\n.....#....#...#.#..##....#.#.#.\n........#.##......###..........\n##......#.#..#.....#..##.#.....\n.#.......#..#....##.....##.....\n.....##....#...................\n##......#....##........#.....#.\n..##...#...........##........#.\n...#....#..##.#....#......##...\n#....#...##....#..........#....\n......##....#...............#..\n...#.#.#...#...#...#...........\n....#..#...#.#....#.#......#...\n.......#...#...............#...\n.##..#....#...#....#.#........#\n.....#..##............#......#.\n...##...#.....#..........#.#..#\n..#..##.............#....#.....\n.....#.#.....#.........#......#\n........#..........#.#.#...#..#\n#........#.#...................\n......#......##..............#.\n......#..#.#.....#...#.#...#...\n.#..##.....#...##.......#......\n#.......#....#..##....#..#.#...\n#..#..#....#...........#.##....\n..##....#....##.....#...#...##.\n.#.......#.......#....#.......#\n.#..#..#...#...#...............\n.#..............#.....#........\n..........##...#....#.#......##\n..........#..........#.......#.\n..#..##....##...#.......#......\n.#......#.#........##.#........\n...#......#..#....#...#....#...\n...............#....#..#.##...#\n....#.......................#..\n#....##.#......#....#..........\n.......#.#......#........#..##.\n..#.....#...#...........##..#..\n#........#.#....#............#.\n.........##..................#.\n........#...#..#...#......#...#\n...#.......#...####.#...#......\n....#..###......###..#.........\n.....#...........#......#......\n.#.....#......#.....#.....##.##\n.#.#...##..........#........#.#\n..#....#.....##...............#\n.....##.....#...##..#..........\n.#......##.......#..##.##.#...#\n.#..#...#.##.....#.#...........\n.........#....##...#.....##....\n#..........#.............#..#.#\n...........#........#.#...#....\n........#..###...#...........#.\n#.........#...#....#..##.##....\n........#....##.......#.#....#.\n..........#..............#.....\n....##...#...##..........#.....\n...#..##.#...###..#............\n...##..#####....#.............#\n.#..#.......##.......#........#\n....##..........#.......#.#....\n......#.........####.......#...\n...............#......#..#.....\n...#...##...#.#.#.....##.#.#...\n..#....#..#..............#....#\n#..............#............#..\n.#.#..#....#.....#.#.#...#.....\n......#......#..#..#.....#.....\n.#.#..#.##.#........#..........\n..##.#......#..#.......#.......\n.##...##....#..#.#.........#.##\n.........#........#.#..###....#\n.....#...............#.........\n......##..........#.....#......\n.#.....#.#.#..#.#.....#..#.####\n.......###.##......#.....#.#..#\n..#.....#....#.#.##......#....#\n.....##..#................#..##\n.#......#.....#..#.....#..#####\n.........#.#.......#..##...#...\n.#.#..#.......##.....#....#....\n.....#...###.#...#......#....#.\n.#....#....#...#..#.#........#.\n......##........##.#...#..#..#.\n.##.##.###..#.....#........###.\n.....#..#.#.......#..#.#.......\n##.#.#..............#..##......\n....#.........#.......#.#......\n.....#..#.....#...#.#....#.#...\n...#..#.#.#..................#.\n........##.#.###...............\n..#...#.#.......#......#.......\n.......#.##....#...#....#......\n......#.#.............#........\n........#......#........##.##..\n.....#...#......##.............\n...#.#..#.....#.#...#..........\n.#.#..#.....#............#.....\n.#.#..#.#.##.#...#.##..##...#..\n.........##........#.##..#.....\n##.#.#......###..#.##.#........\n.##...#..#...#.#..#....##.....#\n#......#..........#.#...#.....#\n..........#......#...#.......#.\n.............#..........#......\n#.#....#.......##..#.....#.#...\n##......#..#......#.#..#.#....#\n..#.#..#.....#.#......#....#..#\n...#......#......##.....#..#.#.\n....#......#.....#....#.#.#..#.\n.....#..#..#.....#...........##\n....#.....#...#........##.#.#.#\n..#......#.......#........#....\n#.......##..##......#...####..#\n#..........#......#.#..#..#....\n.................##............\n...#..#..#.#.....#.##.#.....#.#\n...#....###....................\n....#.......#..#.#.............\n#......#................#......\n..........#........#..#........\n.....#......##..#......#..###..\n...#....#.......#..............\n.#....#.#.#........#.....#...#.\n.......#.....##.#.....#....#...\n.........#.#.........##..#...#.\n......#......#....#.....##.#.#.\n####...#.........#.....#......#\n...#.#..#..#.............#.....\n......#.........#....#.#..##..#\n.........#.....#.#..##..##..#..\n.#......##.............#.......\n....#...#......#...#.....#.#.##\n......#..##....#..#.....#......\n......#..............#....##...\n.........#.###..........#.##...\n#....#..........#..#.......#...\n...........#...#.....#.......#.\n..#..#........#................\n...###.........#...............\n.....#.##...#.................#\n..#.#..#...###......#........#.\n#......#......#.#.............#\n.........#.#.....#..#........#.\n........#..#......#......##....\n.....#......#...#.....##...#.##\n.##...#..#....##..........###..\n.......#............#........##\n.##.....#.......#...#..........\n..###..........#.............##\n#....#....#.#....#............#\n#...#......................#...\n....#..#..#..#.......###....#..\n#..###.#..#.....#.............#\n..........#.##.....#.........##\n...#.............#....#....##..\n#........................#..#..\n........#...#.....#.....#..##..\n#........#......#....#..#....#.\n.....#.#.#....#.#..#....#......\n.....#....#....................\n.........#..#..#....#......#...\n..........#.#.#.......#........\n.......#.#.....#..#.....##.....\n.....#....#.#.....#.......#..#.\n.#..###.......#......#..#..#...\n..##.#.....#.........##.#......\n.....#.......###.......##......\n#...#.......##.#.#......#.....#\n.##........##.#...#...#........\n....#.......#....#..#.......#..\n.#..#.......#..####..##........\n..#..#..#..#..#..#.............\n...#......#...#...#.#......##.#\n........#.#..#.#.#......#...#..\n#.......#..##.......##........#\n..##...#...............#.#....#\n.####........##..........#..#..\n..#........#...##...#........#.\n.#.#..........#...#...#........\n....###..........#....#........\n.#.#.#.###.#.##..#.#........#..\n..........#....##.#..##........\n.......#..#..##.......#........\n..#........#....#..####.#..#...\n....#.......#..##..#..........#\n.....#...........#....#....#...\n.#.##..#......##.........#.#...\n...#......##..##......#.....#..\n#........#..........#.#...#....\n.#.#........###........#..#....\n....#####.................##...\n.........##...#......#.........\n.......#....#....#.#....#...#..\n......#................#...#.#.\n....#.....#.....#.#.....#.....#\n#.........#..#........#.....#..\n....#...........#.....#.#......\n##..#....................#.#...\n#.#.##....#.....##....#.......#\n..#..#....###.......#..##......\n......##.....#.##...#....#..#..\n........#..#.#..#..#.#.........\n#...#.....##..........##.......\n....#.....#...#.###.......#....\n..........#..#...#........##..#\n##..#...#.#.####.#..#..#...#...\n................#......#..#....\n.......#...###...#........#....\n....#..##..#.#......#...#.#..##\n.##......#...........#.......##\n....#.#...#..#.#.......##......\n....#..##..#.....#........##...\n...#...#..#.#.#....#.........#.\n#....##.#....#..##.............\n.#......##......#.#.##.......#.\n.......#...#....#.##......#....\n..##..........#.....#.#......#.\n#..##.....#..........##..#.#...\n....#.#.......#.#.....#.....#..\n##.....#..#.....##...#.....#..#\n...#.#..#...#..............#...\n...............#..#............\n.#.......#......#........##....\n..#......#..##..####.....#...#.\n.#.##.#.#..#..##..##...........\n...##.............#.....#..#...\n.##.....#..#.#......##........#\n##....#.............#...#......\n......#.....###...........##...\n.#.#...#.............##..#..###\n..#.##.##...#.....#...........#\n.....#.....##...#...#........#.\n........#..##.......##.....#...\n.#........####.......#.#...#...\n...#..........#......##........\n.......#......#..##..#...#.....\n..#...........#.#.#..#.#.#.....\n#..........#....#....###.#.....\n....#.................#...##...\n#....#.###......#..#.....#...##\n.#.......##.....###.....#...#..\n....##............#...........#\n...#.#.#.........#...#..#..#..#\n.....#..###.................#..\n.#.....#.....#....###.#..#...#.\n................#...#..........\n..#....#..##....#.##........#..\n....##....#...........#..#.....\n...##......###.......#...#.....\n.......##............#......#.#\n#####.....#..#.###..#.#........\n#.##.##..#.......#....#........\n....###..#.#.#......###.#......\n....#....#.....##.#..#....#...#\n....#.....#.#...##.##.#.#....#.\n.........#.#.###.#.....#.......\n.#....#.......#..##...#....#...\n...####...##.#.....#...........\n#.....#.....#..........##..#...\n................#.#.#......#...\n.#...#.......#..#............#.\n.##.#.......#..#....#.....#....\n.#...#..#.....#..............#.\n`;\n","import { Day } from \"util/Day\";\nimport { data as day3data, testdata } from \"./data/day03\";\n\nconst makeData = (data: string) => data.split(\"\\n\").map((row) => row.split(\"\"));\n\ntype Slope = {\n  stepX: number;\n  stepY: number;\n};\n\nconst traverseSlope = (data: string[][], { stepX, stepY }: Slope): number => {\n  let trees = 0;\n  let x = 0;\n\n  for (let y = 0; y < data.length; y += stepY) {\n    if (data[y][x] === \"#\") trees += 1;\n    x = (x + stepX) % data[0].length;\n  }\n  return trees;\n};\n\nconst traverseSlopes = (data: string[][], slopes: Slope[]) => {\n  const results = slopes.map((slope) => traverseSlope(data, slope));\n  return results.reduce((a, b) => {\n    return a * b;\n  });\n};\n\nconst part2slopes = [\n  { stepX: 1, stepY: 1 },\n  { stepX: 3, stepY: 1 },\n  { stepX: 5, stepY: 1 },\n  { stepX: 7, stepY: 1 },\n  { stepX: 1, stepY: 2 },\n];\n\nconst day3: Day<string[][]> = {\n  title: \"Toboggan Trajectory\",\n  description: `\nWhile travel by toboggan might be easy, it's certainly not safe: \nthere's very minimal steering and the area is covered in trees. \nYou'll need to see which angles will take you near the fewest trees.\n`,\n  data: day3data,\n  dataConv: makeData,\n  parts: [\n    {\n      title: \"Part 1\",\n      description: `\n* Start at the top-left corner of your map\n* Follow a slope of right 3 and down 1\n* Count the number of trees you encounter\n      `,\n      func: (data) => {\n        return traverseSlope(data, { stepX: 3, stepY: 1 });\n      },\n      tests: [{ data: testdata, result: 7 }],\n    },\n    {\n      title: \"Part 2\",\n      description: `\n* Try several slopes\n* Count the number of trees for each slope\n* Multiply those counts together`,\n      func: (data) => traverseSlopes(data, part2slopes),\n      tests: [{ data: testdata, result: 2 * 7 * 3 * 4 * 2 }],\n    },\n  ],\n};\n\nexport default day3;\n","export const data = `pid:827837505 byr:1976\nhgt:187cm\niyr:2016\nhcl:#fffffd\neyr:2024\n\nhgt:189cm byr:1987 pid:572028668 iyr:2014 hcl:#623a2f\neyr:2028 ecl:amb\n\npid:#e9bf38 hcl:z iyr:2029 byr:2028 ecl:#18f71a hgt:174in eyr:2036\n\nhcl:#cfa07d byr:1982 pid:573165334 ecl:gry eyr:2022 iyr:2012 hgt:180cm\n\ncid:151 hcl:#c0946f\necl:brn hgt:66cm iyr:2013 pid:694421369\nbyr:1980 eyr:2029\n\necl:brn\npid:9337568136 eyr:2026\nhcl:#6b5442\nhgt:69cm iyr:2019 byr:2025\n\ncid:66 hcl:#efcc98 pid:791118269 iyr:2013\neyr:2020 ecl:grn hgt:183cm byr:1993\n\neyr:2022\nhgt:160cm iyr:2016 byr:1969 pid:767606888 ecl:gry hcl:#6b5442\n\nhgt:157cm eyr:2026 ecl:oth hcl:#efcc98 byr:1938 iyr:2014\n\nbyr:1931 iyr:2015\necl:gry\nhgt:76in\ncid:227 hcl:#09592c eyr:2024 pid:276365391\n\necl:gry hgt:170cm iyr:2014 cid:285 pid:870052514\nhcl:#866857 byr:1925 eyr:2025\n\neyr:2021\nbyr:1960 pid:569950896\niyr:2010 hgt:179cm hcl:#888785 cid:167\n\nhgt:154in cid:194\npid:8142023665 byr:2010 hcl:7d22ff ecl:utc iyr:2026 eyr:1976\n\necl:blu eyr:2030 hgt:192cm\npid:363860866 iyr:2019 hcl:#ceb3a1 byr:1963\n\nbyr:1947 hgt:167cm hcl:#7d3b0c ecl:amb\ncid:70 eyr:2022 iyr:2019 pid:756932371\n\nhgt:185cm pid:871945454\niyr:2020\nhcl:#866857 ecl:amb\nbyr:1989 cid:184 eyr:2030\n\nbyr:1935 pid:322117407\nhgt:153cm iyr:2011\ncid:244 eyr:2022 hcl:#efcc98 ecl:hzl\n\necl:blu hcl:#5e6c12\neyr:2029 iyr:2011 hgt:191cm byr:1992\n\nhcl:#7d3b0c eyr:2029\nhgt:163cm\npid:625292172 byr:1932 ecl:brn\niyr:2020\n\nhgt:158cm\neyr:2030 iyr:2016 byr:1969\ncid:173 pid:092921211 hcl:#602927 ecl:grn\n\nhcl:#733820\niyr:2016 eyr:2029\necl:hzl hgt:180cm pid:292904469 byr:1984\n\necl:amb pid:901224456 hgt:190cm\niyr:2013\nhcl:#733820\nbyr:1922\n\npid:262285164 iyr:2010\nbyr:2018 eyr:2026 hcl:#602927 hgt:179cm ecl:gmt cid:349\n\nbyr:1956 eyr:2027 pid:351551997 hgt:71in cid:277 hcl:#cfa07d iyr:2010 ecl:grn\n\neyr:2027 hcl:#602927 hgt:157cm ecl:gry\ncid:128 byr:1953\npid:231551549 iyr:2012\n\niyr:2011 pid:771266976\ncid:264 byr:1955 hcl:#b6652a\nhgt:189cm ecl:blu\neyr:2030\n\neyr:2026 pid:698455242\nbyr:1949 ecl:gry hgt:190cm\niyr:2013 hcl:#efcc98 cid:139\n\necl:blu hgt:181cm byr:1977 iyr:2011 eyr:2022\npid:454163967 hcl:#b6652a\n\npid:534506872 hgt:155cm iyr:2012\nbyr:1968\ncid:333 eyr:2024 hcl:#623a2f\necl:amb\n\nhgt:162cm\niyr:2020\nhcl:#733820 eyr:2027 byr:1995 ecl:gry pid:084994685\n\niyr:2016 byr:1990\necl:amb pid:185689022 eyr:2025\nhgt:184cm hcl:#866857\n\nbyr:2016 hcl:z iyr:2022 hgt:166in\neyr:2040\n\nbyr:1943 hgt:152cm hcl:#cfa07d ecl:hzl iyr:2016 cid:300 pid:376088014\n\niyr:2020 eyr:2026 hcl:#602927 ecl:gry byr:1962 pid:453907789 hgt:172cm\n\neyr:2023 hgt:185cm\nhcl:#623a2f pid:963767258 byr:1977\niyr:2019 ecl:oth\n\nhgt:159cm byr:1965 cid:349 ecl:blu pid:962908167\niyr:2013 eyr:2024\nhcl:#fffffd\n\neyr:2026\npid:912822238 hgt:66in byr:1985 iyr:2018 hcl:#c0946f ecl:hzl\n\nhgt:167cm hcl:#ceb3a1\nbyr:1990 eyr:2027 ecl:grn\niyr:2011 pid:642877667\n\nhcl:#7d3b0c byr:1921 pid:976412756 hgt:192cm\niyr:2013 ecl:gry\n\niyr:2030 pid:283599139\neyr:2039 cid:203\nhcl:f943cb\nhgt:111\n\nhgt:190cm\niyr:2027 ecl:blu hcl:z\nbyr:2004 eyr:2039\npid:734570034\n\nhcl:#6b5442 hgt:191cm\necl:oth byr:1989 pid:669414669 cid:196 iyr:2016 eyr:2023\n\necl:brn eyr:2028 byr:1965 pid:630674502 hcl:#602927 iyr:2020 hgt:61in\n\niyr:2016 eyr:2022 cid:225\nhcl:#733820 ecl:hzl hgt:166cm\nbyr:1934\npid:232742206\n\necl:amb hcl:#602927 eyr:2029\npid:897535300\nhgt:189cm byr:1952\niyr:2017\n\npid:853604345\nhgt:161cm cid:269\nhcl:#fffffd eyr:2030 iyr:2011 ecl:grn byr:1966\n\nhgt:151cm hcl:#18171d eyr:2026 ecl:grn iyr:2016 pid:176cm\nbyr:2000\n\nhcl:#341e13\neyr:2022\npid:536989527 cid:73 byr:1971\necl:hzl\n\npid:739005658 hcl:#b6652a\neyr:2026 hgt:154cm ecl:hzl\niyr:2019 byr:1935\n\npid:373465835 ecl:oth byr:1932 cid:333 hgt:165cm\nhcl:#b6652a eyr:2021 iyr:2014\n\nbyr:1967 pid:486658617 hcl:#18171d hgt:174cm\neyr:2021 iyr:2015 ecl:gry cid:53\n\neyr:2024\ncid:124 iyr:2017 hgt:152cm pid:095649305 hcl:#341e13\nbyr:1920 ecl:oth\n\nhcl:#623a2f\nbyr:1951 pid:993284548\ncid:106\nhgt:186cm\necl:amb iyr:2017 eyr:2029\n\ncid:308 pid:080673934\nhgt:193cm\nbyr:1967 hcl:#623a2f iyr:2016 ecl:hzl\neyr:2021\n\niyr:2010 eyr:2024 byr:1946 hgt:156cm\ncid:199\necl:blu hcl:#866857\n\necl:blu byr:1955 eyr:2022 cid:95 pid:139391569\niyr:2019 hgt:180cm\nhcl:#efcc98\n\necl:brn pid:579889368\neyr:2023 hgt:158cm byr:1935\niyr:2018 hcl:#cfa07d\n\nbyr:1920 pid:90919899 hcl:#18171d\nhgt:152cm\neyr:2029 ecl:oth iyr:2014\n\nbyr:1961 eyr:2024\necl:#d401e3 iyr:2011 hgt:172cm pid:919145070\ncid:100\nhcl:#efcc98\n\necl:gry\nhgt:168cm\nhcl:#888785 byr:1942 pid:731032830 iyr:2014\neyr:2028\n\nhcl:#6b5442 pid:265747619 hgt:191cm\ncid:217\neyr:2028\niyr:2019 ecl:amb\nbyr:1948\n\niyr:2011 ecl:brn\nhgt:183cm hcl:#fffffd cid:258 byr:1983\npid:835909246\n\nbyr:2030\niyr:2024 ecl:#f66808\nhcl:fd548d cid:183\npid:#fced33\nhgt:160in\n\necl:utc hgt:183in hcl:a92c31 pid:0394222041\niyr:2008\neyr:1976 byr:2020\n\npid:126195650 iyr:2019 hcl:#341e13\necl:blu\nhgt:150cm\neyr:2025\nbyr:1964\n\ncid:71 iyr:2016 hgt:157 ecl:grt\nhcl:#18171d pid:#1ab5ea eyr:2027\n\neyr:2026 hcl:#b5266f\nbyr:1971\ncid:269 hgt:192cm iyr:2012\npid:736578840 ecl:amb\n\npid:152109472 hcl:#ceb3a1 ecl:grn hgt:188cm eyr:2027\nbyr:1923\n\nhcl:#341e13 pid:535175953 hgt:63in eyr:2028 iyr:2015 byr:1999 ecl:gry\n\nhgt:183cm pid:611738968 byr:2001\neyr:2020 hcl:#a97842 iyr:2014\necl:gry\n\neyr:2038 ecl:gmt pid:113210210 iyr:2012 byr:2011\nhcl:z\nhgt:157cm\n\nhgt:157cm\npid:699449127\niyr:2014 ecl:gry byr:1980 hcl:#fffffd eyr:2029\n\niyr:2028 hcl:z pid:152cm\neyr:2039\necl:#4760fb hgt:177in\nbyr:2017\n\neyr:2026 hcl:#efcc98\niyr:2020 hgt:180cm ecl:hzl pid:747449965 byr:2016\n\nbyr:1974 iyr:2019\ncid:89 eyr:2023 pid:421418405\nhcl:#fffffd hgt:192cm\necl:gry\n\nhcl:26c2ef eyr:2029 cid:309 byr:1931 ecl:grn pid:#4eb099 iyr:2024\nhgt:174cm\n\necl:gry\nhgt:183cm\ncid:281\neyr:2022 pid:050492569\nbyr:1968 hcl:c88145\niyr:2015\n\neyr:2028\niyr:2014 pid:712984515 hgt:187cm cid:206 hcl:#866857 byr:1927\necl:brn\n\nbyr:1936 hgt:61in ecl:oth iyr:2012 pid:447813841\nhcl:#c0946f\ncid:126 eyr:2021\n\necl:gry pid:791970272\neyr:2020\nbyr:1932 hcl:#623a2f hgt:161cm\niyr:2015\n\nhcl:#c0946f\nbyr:1935 pid:721144576 eyr:2025 hgt:162cm\niyr:2017 ecl:oth\n\nbyr:1959\npid:551109135\necl:hzl hgt:68in\neyr:1977 hcl:#888785\niyr:1955 cid:100\n\nhgt:190in eyr:1993 pid:8358180772 iyr:1975\necl:oth\nbyr:2024\nhcl:3de172\n\neyr:2030 hgt:190cm hcl:#a40ef3 byr:1935 pid:484932501\necl:amb iyr:2016\n\niyr:2015\nbyr:1964\nhgt:176cm\npid:819552732 hcl:#c0946f ecl:amb cid:263\neyr:2024\n\nhgt:65cm cid:59 eyr:2027 pid:074880819 ecl:utc iyr:2023\nbyr:1954 hcl:#623a2f\n\nbyr:1954 hgt:167cm iyr:2020\neyr:2023 hcl:#602927\npid:280295309\necl:hzl cid:168\n\nhgt:168cm pid:311043701 iyr:2017 byr:1965\necl:hzl\neyr:2026 hcl:#fffffd\n\nhcl:#fffffd ecl:grn pid:672987232 iyr:2012 eyr:2022 hgt:66in\n\niyr:2012 ecl:#6f4f9f\nhgt:133 byr:1937\neyr:1953 pid:7177768428 hcl:#602927\n\niyr:2010\nbyr:1922 hcl:#c0946f\neyr:2029 ecl:gry\nhgt:165cm\npid:893045052\n\niyr:2013 eyr:2028 hcl:#866857 pid:137143403\necl:brn hgt:170cm byr:1940 cid:194\n\nhgt:161cm\neyr:2027 pid:3966920279 ecl:gry iyr:2015 byr:1997 hcl:#cfa07d\n\necl:amb\nhgt:157cm byr:1971\npid:562746894 cid:305 hcl:#0b0e1a eyr:2021 iyr:2016\n\nhcl:8b821d hgt:157cm pid:187cm cid:298 eyr:1926 iyr:2019\necl:amb\nbyr:2030\n\nhgt:155cm hcl:#341e13 byr:1924 pid:779847670\necl:hzl iyr:2015\neyr:2024\n\npid:768590475 hcl:#a97842 iyr:2014 cid:128 eyr:2029\necl:oth hgt:164cm byr:1990\n\niyr:2019 hgt:181cm cid:342\neyr:2020 ecl:gry byr:2001\nhcl:#623a2f\npid:473165431\n\nbyr:1928 eyr:2026 hcl:#42a9cb iyr:2010\necl:grn hgt:157cm pid:638074984\n\neyr:2028\nbyr:1951\npid:239781647 iyr:2020 hgt:156cm\necl:hzl cid:215 hcl:#efcc98\n\npid:636605355 ecl:hzl\niyr:2017 cid:323 eyr:2025\nbyr:1995\nhcl:#18171d hgt:187cm\n\nbyr:1933 hcl:#866857 hgt:152cm ecl:oth iyr:2014 pid:900790914 eyr:2030 cid:267\n\necl:brn byr:1999 eyr:2027 hcl:#623a2f iyr:2017\npid:853165955\nhgt:152cm\n\neyr:2030 pid:316704688 hcl:#c0946f ecl:brn iyr:2014 hgt:193cm\n\niyr:2012 byr:1928\nhgt:154cm pid:570535769 hcl:#623a2f eyr:2026 ecl:hzl\n\niyr:2016 cid:252 eyr:2030 hcl:#888785\nhgt:177cm ecl:grn byr:2002 pid:568715162\n\npid:570999226 iyr:2012 hgt:150cm\nbyr:2024\necl:brn hcl:z eyr:2029\n\npid:174002299 iyr:2019 hcl:#cfa07d ecl:brn byr:1927\ncid:77 hgt:159cm eyr:2027\n\necl:#d16191 eyr:2022 pid:166cm hgt:165cm hcl:#18171d iyr:2015\n\npid:112585759\nhcl:#341e13 eyr:2025 byr:1962 hgt:164cm ecl:hzl iyr:2018\n\npid:478415905 eyr:2025 cid:315\necl:amb hgt:91\niyr:2014 hcl:#cc9d80\nbyr:1985\n\npid:561885837 hcl:#7d3b0c\nhgt:169cm\nbyr:1921 iyr:2014 cid:178\neyr:2022 ecl:gry\n\necl:#c87497 hcl:5321a2 eyr:2020 hgt:74in\npid:#7a62c6 iyr:1976\n\neyr:2037\npid:858202391 hgt:162cm\necl:grn byr:2003\ncid:278\niyr:2010 hcl:cbf662\n\necl:blu iyr:2012 hgt:183cm hcl:#623a2f pid:848200472 byr:1997 eyr:2027\n\nbyr:1942\nhgt:164cm\npid:464257339\niyr:2016\nhcl:#7d3b0c ecl:gry\n\niyr:2012 hcl:#ceb3a1\nhgt:193cm ecl:amb\npid:667987561 eyr:2024 byr:1960\n\nhgt:187cm\npid:222340640\niyr:2018 eyr:2022\necl:oth\nbyr:1957\nhcl:#336667 cid:83\n\neyr:2025 iyr:2015 hcl:#733820\necl:brn\npid:131195653\n\nhgt:185cm eyr:2026\necl:amb byr:1998 pid:938587659 hcl:#733820\niyr:2016\n\necl:oth pid:300949722\neyr:2028 iyr:2016\nbyr:1933\nhgt:179cm\nhcl:#cfa07d\n\nbyr:1974 iyr:2019\necl:hzl hcl:#c0946f eyr:2024 pid:484547079\ncid:112\nhgt:185cm\n\neyr:2022 iyr:2018 hcl:#fffffd pid:118568279\nhgt:153cm ecl:gry byr:1941 cid:341\n\niyr:2018\neyr:2027 hcl:#888785\nbyr:1970 hgt:165cm pid:773715893\necl:amb\n\nhcl:#623a2f hgt:156cm byr:1938 iyr:2012 pid:745046822\necl:amb\neyr:2030\n\niyr:2012\npid:097961857\neyr:2023 hgt:66in hcl:#fffffd byr:1962 ecl:utc\n\nbyr:1943 hgt:150cm\niyr:2012\npid:740693353 eyr:2023\nhcl:#18171d cid:101 ecl:blu\n\niyr:2018 pid:183728523 byr:1924 hgt:154cm eyr:2030\ncid:167 ecl:blu hcl:#ceb3a1\n\nhgt:69cm\neyr:2025 hcl:z ecl:brn byr:1982 pid:250782159\niyr:2011\n\nbyr:1998 iyr:2018 hcl:#341e13 eyr:2022 hgt:157cm pid:497100444 cid:266 ecl:gry\n\neyr:2027 iyr:2011 hcl:#6b5442 hgt:156cm pid:494073085\nbyr:1998\necl:hzl\n\nbyr:1947 hcl:#b6652a\niyr:2011 pid:228986686 eyr:2030 hgt:175cm cid:70 ecl:brn\n\neyr:2026 hgt:159cm\nbyr:1946 pid:534291476\niyr:2018 ecl:gry cid:225\nhcl:#18171d\n\npid:439665905\ncid:311 ecl:amb iyr:2018\neyr:2030\nhgt:186cm byr:1950\nhcl:#cfa07d\n\npid:250175056 hcl:#efcc98\nbyr:1981 cid:262 hgt:154cm ecl:gry iyr:2020 eyr:2027\n\npid:461335515 iyr:2014 hcl:#f1cf00 hgt:180cm ecl:amb eyr:2027\nbyr:1956\n\niyr:2014 eyr:2030 cid:194\npid:234623720 hcl:#733820\nhgt:164cm byr:1929\necl:blu\n\nbyr:1992\neyr:2024 hcl:#ef8161 cid:216\necl:brn hgt:177cm iyr:2018\npid:101726770\n\nhcl:#341e13 hgt:178cm iyr:2016 eyr:2029 byr:1945 pid:045325957 ecl:grn cid:99\n\necl:gry\niyr:2012\ncid:52 hgt:168cm byr:1943\nhcl:#cfa07d\npid:899608935 eyr:2030\n\ncid:241\nbyr:1934 hgt:161cm eyr:2027 iyr:2011 hcl:#c0946f ecl:amb pid:346857644\n\niyr:2019 hgt:178cm\nhcl:#c0946f byr:1957\neyr:2026\necl:brn pid:222885240\n\necl:blu\neyr:2021 cid:312 hcl:#733820 hgt:186cm iyr:2012 byr:1969\npid:821704316\n\nhcl:#6b5442 cid:159\nhgt:180cm\niyr:2018\neyr:2028\necl:hzl byr:1966\npid:#e0238e\n\npid:622400994 eyr:2022 hcl:#5b6635 iyr:2012 byr:1980\nhgt:190cm ecl:oth\n\nbyr:1976 ecl:gry eyr:2020 iyr:2020 hgt:171cm pid:219878671 hcl:#6b5442\n\nhgt:163cm byr:1968\npid:003521394 ecl:oth\niyr:2010\ncid:61 hcl:#888785\n\ncid:115 pid:810722029 hgt:166cm byr:1955\necl:blu eyr:2030 iyr:2018\n\nhgt:176cm\neyr:2025\npid:617393532 hcl:#733820 byr:1975 iyr:2018 ecl:grn\n\nhcl:#733820 byr:1979 pid:838168666\nhgt:190cm ecl:oth cid:330\neyr:2029 iyr:2018\n\neyr:1940 hgt:67cm iyr:2009 ecl:gry pid:#e76a62 byr:2020 hcl:z\n\nhgt:190cm ecl:brn pid:396113351\nbyr:1956 iyr:2010\nhcl:#6b5442 eyr:2024\ncid:256\n\nhcl:#efcc98\nhgt:178cm byr:1984 iyr:2013 pid:752620212 eyr:2021 ecl:gry\n\niyr:2014 hcl:#a97842\nhgt:166cm ecl:blu eyr:2024\nbyr:1935\npid:836748873\n\ncid:236 ecl:amb hgt:168cm iyr:2010 hcl:#602927 byr:1950 eyr:2026 pid:404810674\n\neyr:2030 ecl:grn\nbyr:1975 pid:064596263 hgt:193cm\niyr:2019 cid:71 hcl:#a97842\n\niyr:2014\npid:298386733 hcl:#c0946f\nhgt:180cm ecl:hzl cid:115 byr:1940 eyr:2023\n\niyr:1960 hgt:139 ecl:#9db7b8 byr:1980 pid:#ef597b cid:54 eyr:2028 hcl:fdcda3\n\niyr:2015 byr:1954 ecl:blu hgt:62in hcl:#ceb3a1 pid:253593755 eyr:2028\n\neyr:2025 ecl:blu pid:216388098 iyr:2017 byr:1968 hgt:151cm hcl:#602927\n\neyr:2022 hcl:#a97842\npid:606979543 iyr:2013 ecl:grn cid:63\nhgt:186cm byr:1992\n\necl:gry\nhgt:168cm hcl:#18171d iyr:2017 pid:670898814 byr:1983\neyr:2022\n\nhgt:155cm ecl:grn iyr:2012 pid:837979074 eyr:2024 hcl:#888785 byr:1972\n\niyr:2015 pid:970743533 hcl:#866857 eyr:2027\nbyr:1921 ecl:brn\n\neyr:2022\nhgt:160cm\nbyr:1964 hcl:#efcc98 iyr:2019 ecl:oth pid:141923637\n\nbyr:2029 pid:3313111652 ecl:brn eyr:2034\niyr:2013 hgt:193cm hcl:z\n\npid:853890227 eyr:2029\nhcl:#efcc98 iyr:2021 byr:2003 ecl:#037c39 hgt:160cm\n\niyr:1927\nbyr:1992\neyr:2030\nhcl:#efcc98\necl:amb hgt:152cm pid:436765906\n\niyr:2014\nhcl:#c0946f pid:207052381\neyr:2024 ecl:hzl\nhgt:177cm\nbyr:1923\n\necl:blu\niyr:2014\neyr:2025 hgt:165cm\nhcl:#733820 pid:343011857 byr:1967\n\necl:xry\neyr:2028\niyr:2011 hgt:166in hcl:#c0946f\npid:805297331\ncid:167 byr:1926\n\nbyr:1947\npid:468012954 eyr:2026 ecl:oth iyr:2018 hgt:170cm hcl:#b6652a\n\nhcl:#6b5442 ecl:brn\nhgt:180cm cid:233\npid:029789713\nbyr:1920 iyr:2010 eyr:2024\n\niyr:2010 eyr:2027\nhgt:156cm\nhcl:#c0946f\nbyr:1960 pid:312723130 ecl:hzl\n\neyr:2023 byr:1959 iyr:2010 hgt:186cm pid:066768932 ecl:grn hcl:#602927 cid:310\n\neyr:2030 pid:460535178 hgt:171cm ecl:gry iyr:2020 byr:1934 hcl:#888785\n\nhgt:64cm eyr:2021 byr:1995 cid:336\necl:gmt pid:926714223 iyr:2017 hcl:#18171d\n\neyr:2022 iyr:2010\necl:grn pid:285994301 cid:215\nhgt:186cm byr:1978\n\nhgt:63in hcl:#866857\npid:386128445 iyr:2020 byr:1971 eyr:2021 ecl:gry\n\nhgt:183cm hcl:#733820 iyr:2015\necl:blu pid:216205626 eyr:2022 byr:1941\n\ncid:150 ecl:amb pid:872515243 byr:1926\neyr:1996\nhcl:#dedc39 hgt:67in iyr:2020\n\nbyr:1927 ecl:brn cid:153 iyr:2011\npid:165190810 hcl:#fffffd\neyr:2028 hgt:64in\n\npid:502603734\nbyr:1966 iyr:2015 hgt:176cm cid:205 ecl:brn hcl:#fffffd eyr:2021\n\nhcl:#18171d hgt:158cm byr:1943 iyr:2019\npid:058840094\neyr:2023\n\nbyr:1962 hcl:#b6652a ecl:grn\ncid:297\niyr:2010 pid:990422650\nhgt:154cm eyr:2020\n\neyr:1934 iyr:2011\necl:gry\nhcl:z byr:2004 hgt:63cm pid:6173356201\n\npid:329432364 eyr:2029\necl:grn hcl:#18171d iyr:2013\nhgt:158cm byr:1960\n\nhcl:#efcc98 iyr:2016 hgt:186cm cid:215\npid:852781253 eyr:2027 ecl:blu byr:1937\n\nhcl:#623a2f ecl:gry iyr:2020 byr:1972 hgt:182cm pid:073426952 eyr:2027\n\nhcl:#3317b9 byr:1950 pid:304511418 hgt:177cm cid:124 eyr:2020 ecl:hzl iyr:2014\n\neyr:2029\npid:034754507 byr:1936\ncid:265 ecl:#b50997 hgt:183cm\nhcl:#623a2f iyr:1924\n\neyr:2024 byr:1927 cid:243 ecl:gry hcl:#6b5442 pid:714355627 hgt:160cm\niyr:2016\n\nhgt:152cm\necl:gry hcl:#a97842\neyr:2029 byr:1952\npid:555308923 iyr:2010\n\nbyr:2008\npid:19681314 hgt:180in iyr:2030 ecl:gry cid:272\neyr:2023\nhcl:#b6652a\n\ncid:234\niyr:2014 byr:1940 ecl:hzl pid:042231105 hcl:#3bf69c hgt:172cm eyr:2029\n\nhcl:#efcc98 pid:831567586 hgt:190cm iyr:2017\nbyr:1966 eyr:2024 ecl:blu\n\nhcl:#341e13 ecl:blu\neyr:2022 cid:161 pid:197839646 iyr:2014\n\nhcl:#cfa07d\nbyr:1957\niyr:2019 hgt:181cm\npid:543775141 ecl:oth eyr:2021\n\nhcl:z\npid:#596c41 eyr:2035\nbyr:2008 iyr:1975\necl:#c66ee6\nhgt:150in\n\necl:grn\nhcl:#7d3b0c iyr:2016\npid:804255369 eyr:2028 byr:1983 hgt:69in cid:82\n\neyr:2022\niyr:2013 hgt:191cm ecl:gry\nhcl:#a97842 pid:186827268 byr:1969\n\npid:871672398 eyr:2026 byr:1946 ecl:oth\niyr:2015\nhcl:#866857 hgt:185cm\n\nbyr:1973\nhgt:150cm\npid:905076707\niyr:2017\nhcl:#2edf01 ecl:oth cid:221 eyr:2026\n\neyr:2024 ecl:grn pid:955444191 hcl:z iyr:2015 byr:2008 hgt:151cm\n\nbyr:1958 hcl:#fffffd pid:218986541 cid:203 ecl:brn hgt:154cm\niyr:2014\neyr:2026\n\nhcl:#623a2f byr:1964 ecl:oth iyr:2010 pid:525843363 hgt:164cm eyr:2025\n\necl:blu iyr:2013 hgt:193cm byr:1990 pid:612387132 hcl:#18171d cid:280 eyr:2028\n\necl:oth eyr:2022\npid:110447037 hgt:187cm byr:1967 hcl:#efcc98\n\nbyr:1930\neyr:2026 hgt:159cm\niyr:2011\necl:hzl hcl:#6b5442 pid:923471212\n\ncid:350\neyr:2029 pid:823592758 iyr:2018\necl:grn byr:1972 hgt:167cm hcl:#18171d\n\ncid:76 eyr:2027 hcl:#6b5442 pid:099579798 byr:1930\niyr:2020\necl:gry hgt:153cm\n\nbyr:1957 ecl:brn\nhcl:z iyr:2016 pid:352677969 hgt:189cm\neyr:2029\n\ncid:143 eyr:2035 pid:602952079\necl:#9b73f0 hcl:#602927\niyr:2022 byr:1975\nhgt:174cm\n\nbyr:1971 pid:741305897 hgt:192cm\necl:amb hcl:#888785 eyr:2028 iyr:2011\n\necl:oth iyr:2016\nbyr:1942 hgt:189cm hcl:#888785 eyr:2024 pid:054290182\n\nhcl:#a97842\nbyr:1945\necl:amb pid:370849304\neyr:2028\niyr:2016 hgt:168cm\n\nhgt:154cm iyr:2015 eyr:2030 byr:1952 ecl:hzl hcl:#341e13 pid:996518075\n\nbyr:1941 ecl:amb iyr:2014\nhcl:#fffffd pid:560990286 eyr:2022 hgt:173cm\n\necl:blu byr:1974\nhgt:150cm hcl:#ceb3a1 eyr:2020 iyr:2013\npid:827415351\n\nhcl:#623a2f eyr:2027 iyr:2011 pid:913199234 ecl:oth\nbyr:1990 hgt:178cm\n\necl:blu byr:1989 hcl:#b6652a\neyr:2026 pid:724881482 hgt:185cm iyr:2014\n\ncid:115 pid:255002731 eyr:2025 ecl:amb\nbyr:1934 iyr:2020 hcl:#7d3b0c\n\nhgt:150cm byr:1969 ecl:blu iyr:2023\nhcl:#866857 pid:754288625 eyr:2029\n\niyr:2011 hcl:#7d3b0c ecl:hzl\nbyr:1930\nhgt:188cm\neyr:2023\npid:256556076 cid:136\n\niyr:2025 byr:1978\necl:#fe30a9 hcl:#efcc98 eyr:2029\npid:392032459 hgt:178cm\n\neyr:2027 iyr:2017 hgt:160in\nbyr:1990 pid:131099122 hcl:#623a2f ecl:amb\n\necl:grn\nbyr:1978\neyr:2029 hcl:#18171d\nhgt:165cm pid:172369888\ncid:93\niyr:2011\n\necl:hzl\nhcl:#733820 iyr:2010 eyr:2029 pid:127253449\nhgt:156cm\nbyr:1963\n\nhcl:#6c8530\niyr:2020\nbyr:1929 eyr:2021 hgt:177cm ecl:oth pid:347925482\n\neyr:2037 iyr:2026\npid:163cm\nhgt:174in byr:2007 hcl:c1305f cid:134\necl:#0cf85c\n\niyr:2011 pid:033811215\nhcl:#a97842 byr:2002 eyr:2021 hgt:186cm\necl:brn\n\nhcl:#a97842\niyr:2020 eyr:2029 byr:1972 pid:535511110 hgt:160cm ecl:oth\n\necl:grn cid:89 hgt:193cm pid:73793987 iyr:2021 eyr:2027 byr:1939 hcl:z\n\nhcl:#623a2f\nhgt:182cm cid:154\npid:873863966 iyr:2018 byr:1999 ecl:brn eyr:2031\n\niyr:2014 eyr:2029\ncid:71 hcl:#fffffd byr:1924 hgt:63in\necl:gry pid:897972798\n\nhgt:76cm\nhcl:z eyr:1955\niyr:2012 byr:2001 pid:9425090 ecl:hzl\n\neyr:2021\npid:501861442\necl:grn hcl:#d71ae9\nbyr:1977\nhgt:167cm iyr:2015\n\niyr:2014\nhgt:170cm ecl:gry byr:1928 cid:314 hcl:#602927 eyr:2029\npid:836710987\n\neyr:2027 hcl:#efcc98 ecl:amb iyr:2016 byr:1995 pid:603705616 hgt:179cm\n\neyr:2030 hcl:#602927 cid:105 byr:1943 ecl:hzl\npid:381601507\nhgt:188cm iyr:2020\n\niyr:2011\nbyr:1993 hcl:#c0946f pid:292649640 hgt:139 ecl:hzl cid:268\neyr:1999\n\ncid:339 byr:1928\necl:brn eyr:2022 hcl:#733820 hgt:191cm pid:282733347 iyr:2019\n\nhgt:176cm\nbyr:1935 ecl:brn cid:252 eyr:2023 pid:105060622 iyr:2020 hcl:#18171d\n\necl:hzl eyr:2029\nhgt:193cm pid:770254253\nhcl:#efcc98 iyr:2020 byr:1926\n\npid:977785261 eyr:2022 iyr:2015 byr:1978\nhcl:#733820 hgt:172cm\necl:brn\n\nbyr:2021\nhgt:160in\necl:gmt\neyr:2032 cid:345 pid:179cm\nhcl:8f5c13 iyr:2029\n\niyr:2018 hgt:182cm ecl:gry\npid:897076789 eyr:2023 hcl:#866857\nbyr:1980\n\nhgt:88 eyr:2039 cid:99 byr:2007 hcl:a1bb42 ecl:#a2f6bb\npid:2264966188\niyr:2022\n\niyr:2012 cid:59 ecl:gry eyr:2021\nbyr:1931\nhgt:172cm hcl:#7d3b0c pid:862416147\n\nbyr:1962 eyr:2025\necl:grn\nhcl:#866857 hgt:180cm iyr:2014 pid:313647071\n\neyr:2030 hgt:157cm byr:1985\niyr:2020\nhcl:#7d3b0c pid:911544768\necl:grn\n\nhgt:175cm\nbyr:1938\niyr:2020 ecl:amb hcl:#602927 eyr:2026 pid:144411560\n\niyr:2019 ecl:amb hcl:#888785 eyr:2025 hgt:187cm\npid:942054361 byr:1939\n\ncid:168 pid:722146139 byr:1952 ecl:grn\niyr:2014 hgt:97\nhcl:z\neyr:2023\n\neyr:2024 pid:567528498 ecl:gry iyr:2012 byr:1990\nhcl:#733820 hgt:193cm\ncid:293\n\nhcl:#bc352c pid:321838059 byr:1930 hgt:178cm cid:213 eyr:2023 ecl:amb\niyr:2017\n\nhgt:173cm byr:1925 pid:070222017 iyr:2013 hcl:#ceb3a1 ecl:gry eyr:2024`;\n\nexport const testdata = `ecl:gry pid:860033327 eyr:2020 hcl:#fffffd\nbyr:1937 iyr:2017 cid:147 hgt:183cm\n\niyr:2013 ecl:amb cid:350 eyr:2023 pid:028048884\nhcl:#cfa07d byr:1929\n\nhcl:#ae17e1 iyr:2013\neyr:2024\necl:brn pid:760753108 byr:1931\nhgt:179cm\n\nhcl:#cfa07d eyr:2025 pid:166559648\niyr:2011 ecl:brn hgt:59in`;\n\nexport const testdata2 = `eyr:1972 cid:100\nhcl:#18171d ecl:amb hgt:170 pid:186cm iyr:2018 byr:1926\n\niyr:2019\nhcl:#602927 eyr:1967 hgt:170cm\necl:grn pid:012533040 byr:1946\n\nhcl:dab227 iyr:2012\necl:brn hgt:182cm pid:021572410 eyr:2020 byr:1992 cid:277\n\nhgt:59cm ecl:zzz\neyr:2038 hcl:74454a iyr:2023\npid:3556412378 byr:2007\n\npid:087499704 hgt:74in ecl:grn iyr:2012 eyr:2030 byr:1980\nhcl:#623a2f\n\neyr:2029 ecl:blu cid:129 byr:1989\niyr:2014 pid:896056539 hcl:#a97842 hgt:165cm\n\nhcl:#888785\nhgt:164cm byr:2001 iyr:2015 cid:88\npid:545766238 ecl:hzl\neyr:2022\n\niyr:2010 hgt:158cm hcl:#b6652a ecl:blu byr:1944 eyr:2021 pid:093154719`;\n","import { Day } from \"util/Day\";\nimport { data as day4data, testdata, testdata2 } from \"./data/day04\";\n\nconst makeData = (data: string) => data.split(\"\\n\\n\");\n\nconst isCompletePassport = (passport: string) => {\n  const splits = passport.split(/[ \\n]/);\n  return (\n    splits.length === 8 ||\n    (splits.length === 7 && passport.indexOf(\"cid\") === -1)\n  );\n};\n\nconst inRange = (val: number, min: number, max: number) =>\n  val >= min && val <= max;\n\nconst validators: Record<string, (data: string) => boolean> = {\n  byr: (data) => inRange(Number(data), 1920, 2002),\n  iyr: (data) => inRange(Number(data), 2010, 2020),\n  eyr: (data) => inRange(Number(data), 2020, 2030),\n\n  hgt: (data) =>\n    (data.indexOf(\"cm\") > -1 &&\n      inRange(Number(data.replace(\"cm\", \"\")), 150, 193)) ||\n    (data.indexOf(\"in\") > -1 &&\n      inRange(Number(data.replace(\"in\", \"\")), 59, 76)),\n\n  hcl: (data) => /^#[0-9a-f]{6}$/.exec(data) !== null,\n  ecl: (data) =>\n    [\"amb\", \"blu\", \"brn\", \"gry\", \"grn\", \"hzl\", \"oth\"].includes(data),\n\n  pid: (data) => data.length === 9 && !Number.isNaN(Number(data)),\n  cid: () => true,\n};\n\nconst validatePasswordFields = (data: string[]) => {\n  const validPassports = data.filter((passport) => {\n    const fields = passport.split(/[ \\n]/);\n    const validFields = fields.filter((field) => {\n      const [name, value] = field.split(\":\");\n      return validators[name](value);\n    });\n    return validFields.length === fields.length && isCompletePassport(passport);\n  });\n  return validPassports.length;\n};\n\nconst day4: Day<string[]> = {\n  title: \"Passport Processing\",\n  description: `\nYou arrive at the airport. A very long line has formed for the automatic passport \nscanners, because they're having trouble detecting which passports have all required fields.`,\n  data: day4data,\n  dataConv: makeData,\n  parts: [\n    {\n      title: \"Part 1\",\n      description: `* Count the number of passports that have all required fields \n* Treat cid as optional`,\n      func: (data) => {\n        return data.filter((passport: string) => isCompletePassport(passport))\n          .length;\n      },\n      tests: [{ data: testdata, result: 2 }],\n    },\n    {\n      title: \"Part 2\",\n      description: `* Count the number passports that have all required fields **and valid values**\n* Continue to treat cid as optional`,\n      func: (data) => validatePasswordFields(data),\n      tests: [\n        { data: testdata2.split(\"\\n\\n\")[0], result: 0 },\n        { data: testdata2.split(\"\\n\\n\")[1], result: 0 },\n        { data: testdata2.split(\"\\n\\n\")[2], result: 0 },\n        { data: testdata2.split(\"\\n\\n\")[3], result: 0 },\n        { data: testdata2.split(\"\\n\\n\")[4], result: 1 },\n        { data: testdata2.split(\"\\n\\n\")[5], result: 1 },\n        { data: testdata2.split(\"\\n\\n\")[6], result: 1 },\n        { data: testdata2.split(\"\\n\\n\")[7], result: 1 },\n      ],\n    },\n  ],\n};\n\nexport default day4;\n","import { Day } from \"util/Day\";\nimport day5data from \"./data/day05\";\n\ntype BoardingPass = {\n  row: number;\n  seat: number;\n};\n\nconst substMap = {\n  row: [\n    { char: \"F\", val: 0 },\n    { char: \"B\", val: 1 },\n  ],\n  seat: [\n    { char: \"L\", val: 0 },\n    { char: \"R\", val: 1 },\n  ],\n};\n\nconst decodeRow = (data: string, decoder: keyof typeof substMap): number => {\n  let decodedData = data;\n  substMap[decoder].forEach(({ char, val }) => {\n    decodedData = decodedData.replaceAll(char, val.toString());\n  });\n  return parseInt(decodedData, 2);\n};\n\nconst makePass = (data: string) => {\n  const row = data.slice(0, 7);\n  const seat = data.slice(7);\n  return {\n    row: decodeRow(row, \"row\"),\n    seat: decodeRow(seat, \"seat\"),\n  };\n};\n\nconst makeData = (data: string) => data.split(\"\\n\").map((row) => makePass(row));\n\nconst calcId = (pass: BoardingPass) => pass.row * 8 + pass.seat;\n\nconst getHighestSeatId = (passes: BoardingPass[]) => {\n  const seatIds = passes.map(calcId);\n  return Math.max(...seatIds);\n};\n\nconst findSeatIdGap = (passes: BoardingPass[]): number => {\n  const seatIds = passes.map(calcId).sort((a, b) => a - b);\n  return (\n    (seatIds.find((val, index, arr) => val - arr[index - 1] > 1) || -1) - 1\n  );\n};\n\nconst day5: Day<BoardingPass[]> = {\n  title: \"Binary Boarding\",\n  description: `You dropped your boarding pass! Find your seat through process of elimination.`,\n  data: day5data,\n  dataConv: makeData,\n  parts: [\n    {\n      title: \"Part 1\",\n      description: `* Find the boarding pass with the highest seat ID`,\n      func: (passes: BoardingPass[]) => getHighestSeatId(passes),\n      tests: [\n        { data: \"FBFBBFFRLR\", result: 44 * 8 + 5 },\n        { data: \"BFFFBBFRRR\", result: 70 * 8 + 7 },\n        { data: \"FFFBBBFRRR\", result: 14 * 8 + 7 },\n        { data: \"BBFFBBFRLL\", result: 102 * 8 + 4 },\n      ],\n    },\n    {\n      title: \"Part 2\",\n      description: `* Find the ID of your seat\n* The seats with IDs +1 and -1 from yours will be in your list\n* Some of the seats at the very front and back of the plane don't exist on this aircraft\n* Your seat wasn't at the very front or back\n      `,\n      func: (passes: BoardingPass[]) => findSeatIdGap(passes),\n    },\n  ],\n};\n\nexport default day5;\n","const data = `BFBFBBBRLL\nBFFBBBBRRR\nFFBBFBFLLL\nFFBBBBBRLR\nBFFBFBFRRL\nBFFBFFBRLL\nFBBFBFBRLL\nFFBFFBBLLR\nBFBBBFFRRR\nFBFFFFBLLL\nFFFFFFBRRR\nFBBFBFFRRR\nFFBBBBFRLL\nBFFBBFBLRR\nBFFFFBFRRL\nFFFFFBFRLL\nFBFFBFFRRR\nBFBFBBBLLR\nFBFFBBBLRR\nFBBBBBFRLR\nFFBFFBBRLR\nFBBFFFFRRL\nFFFFFBBRRL\nFFBBFBFRLL\nBFFBBBBLLL\nFFFFBFFRRL\nFBBFFFFLLR\nFFBBBBBLLR\nFBFBBFBRRR\nFBFFBBFRRL\nBFBFBFBRLL\nBFFBBBBLLR\nFBBBBFFLLR\nFFBFBBFRLL\nBBFFFFBRRL\nFBFFFBBLLL\nFFFFBBBLLR\nFFBBFFFRLL\nBFBFFBBRLL\nFFBBBFBLLR\nFFBBFFFRRR\nBFFFBBBRLL\nFBFBBFFRLR\nFBBFBBBRRR\nFBBBBBBRRR\nBFFBFFFRRR\nBFFBBBFLLL\nBFBFFFBLLL\nBFFBFBFLLR\nFBFFFFBLRL\nBFFBBFFLRR\nBFBFBFFLLL\nBBFFFBFLRL\nBFFFBBBLLL\nFFBBBBBLLL\nBFFFFFFRLL\nFFBBBBBLRL\nFBFBBBBLLR\nFFBBFBBLRL\nFBBFBFBLRL\nFBBFBBBLRR\nBFFBFBBRRR\nBFFBBFFLRL\nFBFBBFFLLR\nBFBBBFFLRR\nFBBBFFBLRL\nFBFBBBBRLL\nFFFFBFFLLL\nBBFFFBFRRR\nBFBFBBFLRR\nFBBFBFFLLL\nFBBBBFBRRR\nFFFFBBFRRR\nFBBFFBFLLL\nFBBBFFBRRR\nBFFBBBBLRL\nFFFFBFBRLL\nFBBFFFBRRR\nFBFBBFFRLL\nBFFFFBFRRR\nFFBBBFFLRR\nFBBFBBFLLR\nBBFFFFBRRR\nBFFBFBFLLL\nFFFBBBFLLR\nFFBFFBFLRL\nFFBFBBBLRL\nFBFFFBBRRL\nBFFBFBBLLR\nBFBBFBBRLR\nBFBBFFFRRL\nFBFBFFFLLR\nFFBBBFFLLR\nBFBBBFFLLR\nBFBFBFBLLR\nBBFFFBFLLL\nFFBBFBFRRR\nBFFFBBFRRR\nFBFFBBFRLR\nBFBBBBFRLL\nBBFFFFBLLR\nFFFBFBBLLR\nFBFFBFBRRR\nFFBFBFBRRR\nFFFFFBBRLL\nBFFFFBFLLR\nFBBFBBFLRR\nFBFFFFFRRL\nFBBFBFBLLR\nBFFFFBBLLL\nFBBBBBFLLL\nFBBFFBFRRR\nBBFFBFBLRL\nBFFFBFFRRL\nBFFFFFBLLR\nFFFBBFBRLR\nFBFFBFFRLR\nBFBFBFFLLR\nBFFFBBFLRL\nFFFFBFFLLR\nBFFBFFFRLR\nFBFBFBFLRR\nFBBBBBBRLR\nBFBFBFFLRL\nBFFFBFBLLR\nBBFFBFFLLR\nBFFBBBBLRR\nFFFBBFFRRR\nFBBFBBBLRL\nFFBBBFBRLR\nFBBBFBFRLR\nFBBBBFFLRL\nFFBFBFFRLR\nBBFFFFFLRL\nFFFBBBBLRL\nFBFBBBFLRL\nBFFBFFFRRL\nFFBFFBFRLR\nFBFBFFFLRR\nFBFBFFBRRL\nFBFBBBBLRL\nBFBBBBBLLL\nBBFFFFBLRR\nBFFFBFFLRR\nFBBBBBFRRR\nFBFFBBBLRL\nBBFFFBBRLL\nBFBFBFBRRR\nBFFBFBBLRR\nFFBBFBBRLL\nFFFFFBBRLR\nBFFFBFBRRL\nFFFBFBBLLL\nFFFFBFBRRR\nFBBFFBBLRR\nBFFFFBBLRR\nFFBFFFBLRL\nFFBFBFBLRR\nFBBBBFFRRR\nFBFFBFBLRL\nBFBFFBBLLL\nFBBFFFFLLL\nFBBFFBBLLR\nFFBFBFFRLL\nFBFBBBFRRR\nBFFFBFFRLL\nFFBFBFBRLL\nFFBBFBFLRL\nFFBBFBBLLR\nFBFBBFBLRL\nBBFFFFFRRR\nFBBFFBBLRL\nBFBFFBBLLR\nFFFFFBBLLL\nFFBBBBFRRL\nFFBBFFFLLL\nFFFBFFBRLL\nFFBFBBFLLR\nBFFFBBBRLR\nFBFFBBFRRR\nFBBFFFFRLL\nFFFBBBFRLR\nFFBBFFBRRR\nBFBFFFFLRR\nBBFFBBFLLR\nBFFBFFBLRL\nBBFFBFFLRR\nFFFBFFBRRR\nBFFFBBBLRR\nBFBFFBFRLR\nFFFBFFFRRR\nFFBFBBBRLR\nBFBFBBFRLR\nBBFFBFFRRL\nBFBFBFFRLR\nFBBFFFFRLR\nFBFBFBBRLL\nFFBBBFBRLL\nFFBFFFFRRR\nBFFBFBBLRL\nFFFBFBFRLR\nFBBFFFBLRL\nFFBFFFFLRL\nBBFFBBFRLL\nFFFFFFBRRL\nBFFBFFBLRR\nBFFFFFFRRL\nBFFBBFBLRL\nFBBFFFFLRL\nFFFBBFFRLR\nBFBBFFFRLR\nFFBBFBBLRR\nFFBFBBBLLR\nFFBBBBFLRR\nFFBFBFFLLL\nFFFBFFFLLL\nFFBFBFFLRL\nBFBFFFBLRL\nFBFFFFFLRR\nBFBBBBFRRR\nFBBFBBFLLL\nFFFBBFFLLR\nFFBFBBBLLL\nBBFFBFFLLL\nFBFFBFBRLR\nBFBBBBFLRR\nFBBBFBFRRL\nBFFBBBBRRL\nBFBBFFFLLL\nBFBBFBFRRR\nBFFBFBBLLL\nFBBBBBFRRL\nFFFBFBFRRL\nFFBBBBFLLL\nFBBFBBBLLL\nFBFFBFFLLR\nBFBBBBBLRR\nFBFFFFFLLL\nBFFFBBBRRL\nFBFFFBBRLL\nBFBBFBBLRR\nFBBBFBBRLR\nBBFFBFBLLR\nBBFFFFBRLL\nBFBBFBFLLR\nFBBFFBFLRL\nBBFFFBFRRL\nBFFFBBBLRL\nFBBBBFBRRL\nBFBFBFBRRL\nFFBFFBBRRR\nFBBFFBBLLL\nBFFBFFFRLL\nFFFFBFFRLR\nFFBFFBBRLL\nFBBBFFFLRL\nFFBFBFBRRL\nBFBBBFFLLL\nFBBBBFBLLL\nFFFBBBBLRR\nFBFFFFBRLR\nFFBBBBFLRL\nBFBBBBFRRL\nFFFFBBFLLL\nBFFFBBBLLR\nFFFBBBBRRL\nFBBBFBFLLL\nBFFFFFBLRL\nFFFBFBBRRL\nBFFBBFBRLL\nFBFBBFBLRR\nFBBBFFFLLL\nBFBFFFFRRL\nFBBBBFFRLL\nBFBFFBBLRL\nFBBBBFBRLL\nFBBFFBBRLR\nFFBBBFBRRL\nFFFBBFFLRL\nBFBBFBFRLL\nFBBFBBFRLL\nFBFBBBFLLR\nFBFFBFBRLL\nBFFFBFFRRR\nBFBFBBFLRL\nFBBBBBFLRR\nFFFFBBFRRL\nBFBBFFBRRR\nFBBFFFBLRR\nBFBBBFBLLR\nFBBBBFBRLR\nBFBFFFFRLL\nFFFBBBFLLL\nBFFFBFFLLL\nFBFBFFBRLL\nBBFFFFFLLL\nFFFFFBBLRR\nBFFFFFFLRR\nBFFBFBFLRR\nFFFBFFBLLR\nBFFFFFFLLR\nFBFFBBBRRR\nFFFFBFBLLR\nBFFBBFFLLL\nFFFFFBBLLR\nBFBBBFBRRL\nFBFFBBBRLR\nBBFFFFBLRL\nFFBFFBFLLL\nFBFFFFBLRR\nFFFBFBFLLR\nFFBFFFFLLR\nFFFFFBFLRL\nBBFFFBBLLL\nBFFBFBFRRR\nFBBBFFFLLR\nBFBBBFBLLL\nFBFFFFFRRR\nFBFFBBFLRL\nBFFBBFBLLR\nFBBFFBFRLR\nFFFFFBFRRL\nFFBFFBBLLL\nBFBFFBFRLL\nBFBBFFFRLL\nFBBBFBFRLL\nFBFBFFFLLL\nBBFFFBBLRR\nFFFBFBFLLL\nBBFFBFBLRR\nFFBBFBFLRR\nBFFBBFFRLR\nFBFBFBBRLR\nFBBFFBBRRR\nFFBFFFBRRR\nBFBBFBBLRL\nFFFBFFFRLL\nBFBBFBFLRL\nBFBFBBBLLL\nFBFBBFFLRL\nFFBFBBBRRL\nFFFBFFBRRL\nFFBFFFFRLR\nFFFFBBBRRR\nFFFFBFBLLL\nFFBFFBFRRR\nFFBFFBFLRR\nFFFBBFFRLL\nFBBBFFFRLR\nFFBFFFBRLL\nFBBBFBFRRR\nFBFFFBFLRR\nFBBBFBFLRL\nFBFBFFFRRL\nBFBFFFFLRL\nFFBBFFBLRL\nBBFFBFBLLL\nFBFBBBBRRR\nFBBFFFBLLR\nFBBFBFFRRL\nFFBFBFBLLR\nBFFBBBFLRR\nFBFBFFBLRL\nFBFFBBBLLL\nFFBFBBFRRL\nBFFBFFFLLR\nFBBBFBBLRL\nBFFBBFBRLR\nBFFFBFBRLL\nBFFFFBBRRR\nFBFFBBFLLR\nFFBFFFBRRL\nFFBBBBBRRL\nBFFBBBBRLR\nBFFFBFBRLR\nFBBBBBBLLL\nBFFFBFBRRR\nFFBBBFFRLR\nFBBBFBFLLR\nFBFBFBFRRR\nFBFBBBBLLL\nBFBFBFBRLR\nFFFFBFFLRR\nBFFBFBBRLL\nBFBFFFBLLR\nBFBBFBBLLL\nFBFFBBBLLR\nFBBFBBFRRR\nFFFBFFFLLR\nFFFBFBBRLL\nBFBFFBFLLR\nBFFFFBBLRL\nFBFBBFBLLL\nFBBFFBFRLL\nBFBBBBFRLR\nBFBFFFBRLL\nBBFFFBFRLR\nFFFFBBBLRL\nBFBBFFBLRL\nBBFFBBFRRL\nFFBBBFBLLL\nFBFBFBFLRL\nFBBBBBBRRL\nFFFFFBBRRR\nFFFFFBFRRR\nFBFFFBBRRR\nBFFBBFBRRL\nBBFFFFFRLL\nFFFBFFBRLR\nFFBBFFFRRL\nFBFBFFFRLR\nBFFBBBFRLR\nBFBBBBFLRL\nFBFFBFBRRL\nFFBFBBBRRR\nFFFFBBFRLL\nFFFFBBBRLL\nFBBFFFBLLL\nBFBBFBBRRR\nBFFBBBFRLL\nBFFFBFFRLR\nFBFBFFBLLL\nBFFFFBBRLL\nBBFFBFFLRL\nBFBBBBBLRL\nBFFFFBBRRL\nBFFBFFFLRL\nBBFFBBFRLR\nBFBBFBFLLL\nBBFFBFFRLR\nFBBFBBBRLL\nFFFBFBFLRR\nBFBFFBFLLL\nFFFFBBFLRR\nFFFBBBBLLL\nBFBFFFFRRR\nFBFBBBFRLL\nFFBBFFFLRR\nFBFBBBFRLR\nBFFFBBFLLR\nBFBBBBBLLR\nBFFBFFBRRR\nFBBBFFBRLR\nBFBFBBFLLL\nFBFFFFFRLR\nBFFFFFFLLL\nBFFBFFBRLR\nBBFFFFBRLR\nBBFFBFBRLR\nFBFBFBBLRR\nBFFFBBFLRR\nFBFFBBBRLL\nFFFFBBFLRL\nFFBFFBBLRL\nFBFFBBFLLL\nFBFBBFFLLL\nFFBBFFBRLR\nBFFFBBBRRR\nBBFFFBBLLR\nBFFBBBFLRL\nBBFFFBBRLR\nFBBBBBBLLR\nFBFBBFFRRR\nFBFFBBFRLL\nFFFBBFBRLL\nFFFBFBBRLR\nFBFFBFFLLL\nFFBBBBBLRR\nFBFFFFFLLR\nFBFFFBBLRL\nFBFFBFBLRR\nFFBBBBFRRR\nFBBBFFFRRL\nFFFFBBFLLR\nFFFFFBFLRR\nBBFFBBFLLL\nFBFBFBBLLL\nFBFBFFBRRR\nFBFFBFFLRR\nFBBFFFFLRR\nFBBFBFFLLR\nBFFBBBFRRR\nFFBBBBBRRR\nBFFFFFBRLR\nBFFBFBFRLR\nFFFFBFFRLL\nBFBFFBBRLR\nBFBBFFFLRL\nFBFFFFBLLR\nFFBFFBFRLL\nBBFFFBBLRL\nFBBFFBFLRR\nBFFFFBBRLR\nBFBBFBBRRL\nFBBFBFBRRR\nBFFFBFFLRL\nFFBBFBBRRL\nFFFBFFBLRR\nFBBFBFBRRL\nBFBFBBFLLR\nBBFFFBBRRL\nFFBFBBFLRL\nFFBFFFBLRR\nFBFFBFBLLR\nBFBFFBBRRL\nBFFBFFFLRR\nBFBBBFBRRR\nFFBFBBBLRR\nBFFFFFBRRL\nBFBFBFFRRL\nFFBFFBBRRL\nFBBBBFBLRL\nBFBFFFFRLR\nFBBBFFFRRR\nBBFFBBFLRR\nFFBFBFBRLR\nFBBBFBBLRR\nFFBFBBBRLL\nBFFBBFFRRL\nBBFFBFBRLL\nFBBBFBBRRR\nFBFFFFFLRL\nFFBBFFBLLR\nFBBFBBBRRL\nFFFFBBBRLR\nFBBFBBBRLR\nFBBBBFBLLR\nFFBFBFBLLL\nBFFFBBFRRL\nFBFFFBFRRL\nBFBFBBBRRR\nFBFBFBBLRL\nBFBFBFFRRR\nFFBBBBBRLL\nFFFBBBFRRL\nFFBBFFBLRR\nBFBBBFBLRR\nFBBBBBBLRR\nFBFFFBBLLR\nFBBFBFFLRL\nFFBBBFFLRL\nFFBFFBFLLR\nFFFBBFFRRL\nFFFFBFBRRL\nFBFBBFBRRL\nBFBBFFBLLL\nBFFBFBBRRL\nFFFFBBBRRL\nBBFFFFFRRL\nBFFBFFBRRL\nFFFBBBFRLL\nFFBFBBFRLR\nBBFFFBFRLL\nBFBBFBBRLL\nFFFBFBBRRR\nFBBFFFBRRL\nFBFBFBFRLL\nFBBFFFFRRR\nBFBFFBFRRL\nFBBBFBFLRR\nFFBFBFBLRL\nFFBBBBFLLR\nFFFFFBFLLR\nFFBFFFBLLL\nBBFFBFFRLL\nFFFBBBBRRR\nFFBFFBBLRR\nBFFFFFFLRL\nFFFBBBFLRL\nFBFFFBFLLR\nBBFFFBFLRR\nBFBFFFBRLR\nBFFFBBFRLR\nBFBFBBFRRL\nBFBFFBBRRR\nFFBFBBFLLL\nFFFBBFBLLL\nFFBBFFBRRL\nFBFBBBFLLL\nBFFFFFFRLR\nBBFFFBFLLR\nFBBFBFFRLL\nFBFBFFBLRR\nFBBFBFBRLR\nFBFFBBBRRL\nBFFBBFFRLL\nBFFBFFBLLL\nBFBBFBFRRL\nFFFBFBFLRL\nFFBBFBBRLR\nFBBBBBFLRL\nBBFFBFBRRL\nFFFFBFBLRR\nFFBFBFFRRL\nFBFBBBBLRR\nFFFFBFFRRR\nBBFFBBFLRL\nBFBBBBFLLL\nFBBFBFBLRR\nFBBBBBBRLL\nFFFBBBBRLR\nBBFFFFFRLR\nFBFFFFFRLL\nBFBBFFBLLR\nBFFFFBFRLR\nFFBBBFFRRL\nFFBBBFFRLL\nBFFBBFBLLL\nFFFBBBFRRR\nBFFFFFBRRR\nFBFFFBFRLL\nFBBFBFFLRR\nBFFFFFBLRR\nBFBFBFBLRL\nBFBBBFFLRL\nFFBFFFFRLL\nFBFBFBFRLR\nBFFFBBFRLL\nFFBBFBFRLR\nFBFBBFBLLR\nFBFFBFFRRL\nFBBBBFFLRR\nBFBFBBBRLR\nBFBBBFFRRL\nFFFBFBBLRL\nFBBBFFBLRR\nBFBFFBFLRL\nBFFFFFBRLL\nBFFFBFFLLR\nBFBBBFBRLR\nFFFBFFFLRR\nFBFBFBFRRL\nFBFBFFFLRL\nFBBFBBBLLR\nBFBFFFFLLR\nFBFFFBFLLL\nFBBFBBFRLR\nFBBFFFBRLL\nFFFBFFBLRL\nFBFBBFBRLR\nBFBBFFFRRR\nBFBFBFFRLL\nFBFBFBBRRL\nFFFBFBFRLL\nFBBFFBBRLL\nBFFBFBFLRL\nBFFFFBBLLR\nBFFFFFFRRR\nBFBBBFBLRL\nFFFBBFFLLL\nFBBBFBBRLL\nFFFBFFBLLL\nFBFFFBFRRR\nBFBFFBFLRR\nFFBFFFFLRR\nBFBBBFFRLR\nFBFBFFBLLR\nFFBFBBFRRR\nFFBBFFBLLL\nFFBFFFFLLL\nBFFBBFBRRR\nFFFBBBFLRR\nFFBBFFBRLL\nFFBBFBBLLL\nBFFFFBFLLL\nFFFBBFBRRR\nFFBFFFFRRL\nFFFBBFBRRL\nBFFBBBFRRL\nFBBBFFBRLL\nFBFBFBBLLR\nFBBBFBBRRL\nBFBFBBBRRL\nBFBFBFFLRR\nBFFFFFBLLL\nBFBFBBFRLL\nFBBBBBFRLL\nBFFFBFBLRL\nFBFBBBBRLR\nFBFFFBFLRL\nFFBFBFFRRR\nBFBFBFBLLL\nBFBBFFBRLL\nFBBBBBBLRL\nBFFFBBFLLL\nFBBFBBFLRL\nFFFFBBFRLR\nBFBFFFBRRR\nFFBFBFFLRR\nFFFFFBFLLL\nFBFBFFFRRR\nFBFFFBFRLR\nFBFBBFBRLL\nBFBFFBFRRR\nBFBBFFBRLR\nFBBBBFFRRL\nBFBFFFFLLL\nBFBFFFBLRR\nFBFBBBBRRL\nBFFFBFBLRR\nFFBBFBFLLR\nFBBBFFBRRL\nFFFFFBFRLR\nFFFBBFBLLR\nFBFFBFFLRL\nFFFBFBFRRR\nBBFFBFBRRR\nBFBBBBFLLR\nBFBBBBBRLR\nFFBBFFFLRL\nFBBBFFBLLR\nBFBFBFBLRR\nFFBFBFFLLR\nFBFFBFFRLL\nFFBFFFBLLR\nBFBBFBFRLR\nFBBBFBBLLL\nBFBBBBBRLL\nFBFBFFBRLR\nFFBBBFBLRR\nFBBFFBFLLR\nFFFBBFBLRL\nFBFBBBFLRR\nFBBBFFFLRR\nFBFFFFBRRR\nFFFFFBBLRL\nFFBBBBFRLR\nBFFBFBFRLL\nBFFFFBFRLL\nBFFFBFBLLL\nBFBBBFBRLL\nFFFBFFFRLR\nFBBBFFBLLL\nFBFBBFFLRR\nFFFBFBBLRR\nBFBFFFBRRL\nFFBBBFFRRR\nFBFFFFBRLL\nFFFBBFBLRR\nFFFFFFBRLR\nFFFBBBBLLR\nFFFBFFFRRL\nFBBFFBBRRL\nFBBBBFBLRR\nFBFFBFBLLL\nFFBFFFBRLR\nBFFBBBFLLR\nFFFBBBBRLL\nFFFFBBBLRR\nFFFBBFFLRR\nBBFFFFFLLR\nFFFFBFBLRL\nBFBFBBBLRR\nFBBFFFBRLR\nFBFFFBBRLR\nFBFFBBFLRR\nBFBBFBFLRR\nFBFBFFFRLL\nBBFFBFFRRR\nBFFBBBBRLL\nBFBBFFBRRL\nBFFBBFFLLR\nBFBFBBFRRR\nFBFBFBFLLL\nFBBBFFFRLL\nFFBBFBBRRR\nFFBBBFFLLL\nBFFBFFFLLL\nBFBFFBBLRR\nFFFFBFBRLR\nFBFBBBFRRL\nFFFFBBBLLL\nFBBBBBFLLR\nBFBFBBBLRL\nBBFFFFFLRR\nBFFBFFBLLR\nBFBBFFBLRR\nFBBBFBBLLR\nFFBFBBFLRR\nFBFBFBFLLR\nFBFBFBBRRR\nBFFFFBFLRL\nFFFBFFFLRL\nBBFFFBBRRR\nBFBBFFFLRR\nFFFFBFFLRL\nBFFBBFFRRR\nBFFBFBBRLR\nFFBBBFBRRR\nFFBBFBFRRL\nFBBFFBFRRL\nFBBFBBFRRL\nFBBFBFBLLL\nBFBBBBBRRL\nFFBBFFFLLR\nFFBBBFBLRL\nFFBBFFFRLR\nBFBBFBBLLR\nFFBFFBFRRL\nFBBBBFFLLL\nBFFFFBFLRR\nBFBBBFFRLL\nBFBBBBBRRR\nBBFFFFBLLL\nFBFFFBBLRR\nFBBBBFFRLR\nFBBFBFFRLR\nFBFBBFFRRL\nFBFFFFBRRL`;\n\nexport default data;\n","export const data = `fekdcbayqxnwvh\nfycwqktvxandeb\nkqbafvcxyewrdn\nakwqcvenxfydbs\newbaxdcvnkyfq\n\ntimjneyhbvxkfagdpzrous\ngsumijvxoheptbafnkyzrd\nyxtbnupramvdezhkfojsig\nsoaruhxnpiemjvytzbfdkg\nvfanlgjoiskzmubtxhceyprd\n\ndhgabzfspkltq\npflzsbtaxhqdkg\nkzpbfgasthldq\n\nxeu\nuoe\ntnpeox\ne\nvrdzwglecbk\n\nnucwl\nhnmx\nfqv\n\nkfubtzpovrdlw\nvdjmblrztpkosfg\nkavpdbgfzreol\nqpdzfrvokibcy\n\nyhknrqpubeolzixtvsj\ntlysdjzovxhnuqreimk\n\nbclpmatw\nbtqmcw\ncvwtbm\nbmwct\nctmwb\n\nqmo\noqm\n\nsu\ns\ns\ns\ns\n\nztfmocgiesxdq\nfpjmthksidlbo\n\nsmzbn\nbmnzes\nskzmnb\nmbszn\n\nkibmrznqcyladupv\numnbkdpievlqcyar\nidavpbmnrklqucy\n\nfavynhqocijkmtbzsrulp\nycbzrmkuvlhnpfqsitjao\nujbomprktafvliqhycnzs\nnymjkczihqbpfvutosalr\n\ntdev\nvh\nwva\nva\ngzv\n\nd\nd\nd\n\nejrmqwg\nmerjguw\njmreugw\nmjrgwtie\n\nwxiqgpu\nguxqiwp\npuigxqw\npugqwxi\n\nealugrzsvhpxfmjdbqknoy\ndoyhvplkjqarnbeutxsgfmz\nuhvxjaklmzoyqdbegrpfsn\n\niv\nos\n\no\namtle\nn\nnpz\n\nvbfxystq\nknsxyqubtvf\n\nt\np\np\no\n\nxtz\nptz\nftx\nujt\ntp\n\nrs\nqdfan\nmkpz\n\nidewynukmzac\nyacfmdwuizke\nieuamdczkywf\niczwymuekad\nadwekumyciz\n\nagnq\ngn\ngno\ngni\nvkmnxug\n\nftlyhuvaj\nxsribwknlgmt\n\na\nnay\na\na\n\nleq\nq\nqj\n\nsxrwi\nisrwx\nwrsix\niwsvxjr\nrixwbs\n\np\np\np\np\np\n\nunvlyxripzbmaedwjsfqth\nuvefyibspxrzjdlwtqhnam\nhnbapqzflsvxreiutmydwj\nnwdefhtzrxuqpsvljabyim\nrazbwymsdfpnlutqxveijh\n\nzfihqcvwdbsm\nsufwpahczlbvd\n\ntqjanyicszeodpmk\nljmtwvkrcfghdqbu\n\nydxnthpazbskufcq\ntxymsjdfhwuqbz\nvhyuqsfjbxdrtzg\n\nsmyvegtwiu\nimyqtuesv\nidrluzhjatkvpc\n\npzacglju\npzulcagj\njcalgupz\n\nrgzbvefacsw\nvafbrezcw\nwegjvrczfqba\nzwrvabpfce\nrlhekwzyfbacovm\n\nhfqu\nfq\n\nkywvrsxgiojp\nxosvigpkwyjr\nirwkjfvmxpsyog\npvxyrwiksjgo\n\nynebghqmrkcjlpiuftdoaz\nreaqjoyngdbiltkmuphcf\nynobfdgluriphskejcqtam\n\nuac\nca\n\nfmxawgkrin\nxfrnbigok\nsfighjeckrux\ngirxkfl\ngaxirnfk\n\nsmoyaxbku\nuobkxysam\nkyszxumojba\n\nuocvgjr\nhjponwcuzg\n\nfobhkeascqluwrzm\nhzcolfipysnrjaguwkeq\nezwlhkcfsoxqrua\n\nblnosjgezuqcrvxwm\ncmeznoglqxubwjrsv\nzxnqvwoubpremsjcgl\numxrlsgqoczwbvnej\ncuxanesjkivzrmlboqgw\n\ndewtyuqjlv\nucvazfm\n\nkbm\nimltbj\n\nydqnxlmbouvaztcg\nvhrkwxjzfnpisye\n\njqeadkcibtgflsz\nltbxqifjedsawkzcg\nzdfqgkijestcl\njczfqdektlsig\nscdgufyjeizlkqt\n\nw\nw\nw\nw\ns\n\nwygptc\nygctpw\ngcptyw\ntpycgw\n\nxaqicwhtdpvk\naixdcpkzhvqwt\nqkcdhxpwaivt\n\nwt\nxtrowm\nwt\nwt\ntw\n\nsncq\ncus\n\nzehxb\ntxe\nexuma\nexz\n\nepjgfknhvuwmr\nnkwrmfhjegp\nrjkpynefgmwh\nehfprjkgndmw\nmewkfdnrgjhp\n\nhgyc\nkgc\nghc\ncgxjzl\n\nevsloum\nleosvmu\nmejvuzoxdsl\nevmolsu\n\nfugckqhymrxbtvdpnose\nbeyorulcqxgdkzafh\n\ns\ns\nsq\n\nwtjfgezdhsxckibrqyunvpo\nuaonrpkmidbgftwlsjz\n\nmrylewxsgvfodhu\nsfdxoyghwlrvmu\ndungfohvlwrxsym\nulmsoghvxfrwdy\nuoifgdlwrsvymhx\n\ntbg\nbtdg\ntbg\ntgb\nbtg\n\npukht\nhuk\nfhkqu\nhykcfu\nhedvmgubsk\n\ndxycvosnr\nxcsdyrgmapf\nqoyrsxdc\nuedsxtyrc\nucdrsbxy\n\nm\nxz\nm\n\ngcjsybuhrotm\ndojcsubhprt\n\nopmgsudhej\nmjceogdsuhp\ndjpgmoushe\njgeptsluhfomakdvyq\n\njugocetyrzwfbhp\nipvqwcozxbsdu\ngybprkmznowultcaj\n\nipcau\nn\n\njuzmidp\niudjp\ndigjups\npajiud\n\nzxnugrosjvlcphwmqbdyt\nbvtlmqnudzrjwysxcohagp\ntdxhyuwemcvbrpzgnoqfjls\n\nhoefmguvxyiazwcpbrjk\numlbagzxeowthjfpik\nhmxeziglfbwjup\njgxbspifzwqhneum\n\nmgvupsk\nezwcui\n\nadczjnguyq\nygnujdacqz\n\nohricgqjfu\nrqgucfhoji\n\nvygwkszidxqa\nonxkejczsguywqv\nstvzbqypwmxkg\n\nydjm\nfpbustykx\nyrq\nry\n\nvjphn\nnpvhj\nphvnj\n\nbryndzmekui\noathqpcv\n\nyczewurklaxnfdhoqbt\nrlyhawcdunqeofxkzbt\nlhbsqfkxctyonwrdzuea\nzltnhdkqybaxufoerwc\n\ncjwarkog\njoawgrkc\nwcjgkrao\nwrcjogak\ncoerwgsajk\n\numwjqsetdg\nsjwmet\njbteyhownvsaxm\ndmuspcztjrew\n\nxtswpc\neahncvzqxkgmo\nlcixybdrsuft\n\npcrfwszodmqnj\nvrcylgb\niruc\n\nbqigzouxryndpa\njaixybnro\noabixhnjry\n\npbznr\nxrb\nbdntx\nqecbyi\n\nzbvhxyfm\nvxmbyfpz\nvbxzmyfh\n\nnfcqwuhsrxojk\njrqvokfscnxuh\nnxqiaulkrojszchyf\n\ndkwqfb\nwd\nhwd\nnhwd\ndnw\n\nvjtpxorsdyzbwhqi\nkirdlmofpnectxqwuz\n\nynzxtvqogrdhwl\nyhdjomktn\n\nhqwn\nhnwq\nhnqw\nhwnq\n\ngosxz\nxog\ngfomxa\nogxd\n\nwctesuhxonyl\noxwhtecynusl\ncslwxehupyton\n\npr\nspr\npr\npr\n\nmaqfseovdhzj\nsqodparevimfzjl\ndxosqmafejvz\ndqzojehfasvm\n\nawsicurgfmxeqjylnvktbd\ndywmreaitvjgcnbklxs\n\nwmvbnqtxuriz\nhbuwefypzlkadq\n\nasjcpwml\nlcasmjpw\najspcmwl\ncmslwjap\n\nunkrl\nn\nny\nyan\nnv\n\nzrjwsxduie\njswxrziunde\nxrujwhsidze\n\nqnl\nunc\nxhtdjbvf\nomauis\n\nwxvoqihatseg\nsetwqgi\newgstqci\nfetwqgis\nwqtfgkiesd\n\nvmpikgfsarbnxqudwjtoh\nbdovpatjgnxkqufsihmrw\nbjhnrtaokxudmfqpigwvsc\nkaqbvihwmsnxjpgrtoufd\nfmabtdgkuhxpwrivsoqnj\n\neazsitkjronml\notmrenjakzsi\nsamrojenitzfk\ntkzenmrjoais\ntszkioaejrnm\n\nr\nrbq\nr\nr\n\nlwbrfsuahoq\nyjawifugdtrvs\nrfbaswu\ncfsarlknupw\n\nist\nay\nkc\ncu\nkd\n\nmbku\nbkva\n\nsxktwmyfaldbn\nymkbnfpdltx\nxbyftnmkdl\ndlkfetbimxycn\n\ncjru\nrcju\nrjucl\nkcjrum\nauzcjrtn\n\nvkinfzqbrled\nrinldvbqfze\nrqizebfvldn\naciqrfbsnelvxdz\n\nig\nig\ngi\ngi\n\nrskzxocuq\nkcovqsnztur\nskzocrnyuq\nvourxysqzkc\nopescqukrhjz\n\ni\nu\n\nxqfviycpuzjbwkn\nlnxbfkpcyqdawm\nxofypnwkbcqv\nwbvxcfkqtnpry\nbnoixpfqgkcwy\n\nziwlofkdgpc\nqzayrwjvks\n\nkrybec\nryk\nyrk\nkyr\nyrk\n\nxkhdreqfbyipmzalco\nwiepqtyhxflvcomabjdsz\n\njpgankzcvbtw\nkxzugtvnbjp\ngknqpjxzvtb\nkbtjpvzgmn\nbptzvmjkng\n\nhdaxwiypslz\nndbylw\nxdkwtflpyqsz\nwlrvcdyjg\nmlfewsqodyu\n\nc\nc\no\nc\n\nmah\na\ngwa\n\nheczudoqwmvtyab\nacevwozyqtdumhb\n\nv\ne\n\nrom\nmor\nromi\nrom\n\nuxdj\nd\n\np\np\nm\ndb\nt\n\ndtpzeykh\npkdhryzetu\nzdkhtpyac\n\nqanetkhrc\nndlhkceqof\n\nkhbfjlnacvz\ncmavfjlkn\naynljofvqkgc\ntlkjcnavfm\n\nejcbnl\nmbgcoiuhsfl\nqblyc\nblyjevc\n\nvgqlcfhnx\nxwgonuc\npystigbca\ncnqlgmdk\nrlfcwg\n\nnazyhitgcjr\nnytgizahwprjc\nzjcgrinmahyt\nnrcdhzgjyati\n\nxtljebqpg\nbpjewtgn\ngjtpebx\ngmoipkebtcsj\nptwejlbng\n\ne\nexa\n\nh\nnohegc\nh\n\nivbgpd\nisfglyvbdo\ndgvbi\nbdivug\ngvikbd\n\nwyjmpxghiqfeoctdnbuar\nqetnaimxlgsfcbrpj\nkbcrhxgjnqpadefzimwt\n\nkindbwqlusyh\ntpzryjgehaucfmov\n\nwzgou\nugo\nguo\nvoug\n\nndwhzsrugpjmltxiqofvkbyc\nlgirqyotwjbmvuspfnxhdzck\njbqzgwcvhxofkrmsdlytpuni\nxrqzfjolsywtcghdbmukpivn\noqryngdmhljvctxwkbfusipz\n\nsaw\nas\nsa\nmsajv\nsfa\n\noxtrnhvfqyswldb\ntmzwgrakc\n\ncoqyrbzjhsmwivanep\nxkshzgft\nhsz\nslzh\n\nz\nglh\n\ndtusogw\nfmpkzvbxnjwh\neaqdciyw\n\nbgcyqhrztvdxwn\nvqtanbyurxczowdg\nkmjxyvnbqztfgcrwd\n\nvospejybinm\nfiosvkbnjep\njohqpznbeisv\niysbokmjvepn\n\nnxsrfohagwb\nagblosrxwnhf\nxgircuhsaobfw\nhfxpgosarnbw\n\nbgqurk\neumkrnvxqg\ngkrqhspafuoc\nqtogubkr\n\nbxlapnm\nnptix\noqxpn\nnpx\n\nrytbpswaezlufdqxo\nimazhtjqnglc\n\nencpqudzigamorv\nvamkeznqirdcgp\nopvrglqsmcindzae\nmpvncrisdezaqg\n\nikxqemun\nzadbkqjtxney\nkenmpxuoq\n\nvjdqxfyhckrpton\nhmngcfpytkdxqvo\nohdvuywpstzkcaqf\n\ntepj\nte\necvty\n\njqotiphkmsexvfugd\ngwpyfuhlevkdiotjqx\ntjkfvghibocaqxeudp\nonexjzpgthuidfkvqs\n\nltfq\nlqts\noqtl\n\nnqsyglepwzhmtiojbuvxf\nwihkgaoydpzvfxclsenqjmt\n\nfqxmt\nbsgtmxqyrjfdv\ntfqmx\nitmhqwfx\nqtmxf\n\nrgv\nvjwo\nnlekpa\n\nldytkguwhazeqpb\npqzaytglhbmfuedki\ndqbatkpyezhglu\nztgyqjebhkdvpual\nkpalzeytqghudb\n\nxsynhr\nhsnury\n\nqyjukdtmnwhrczvolsb\nymsutqrchdblznowvj\n\nmpw\nwmq\ntdwm\nwmd\n\nn\nn\nn\nno\n\nvnutqbxrygmjwhks\nrhoalixstfyuq\n\njeyfhsotc\nsetchyoj\nhcyoejst\n\nylhpvfiawoekjbq\npkroabqvljiyefhw\n\nakqbyjpziglmfedw\nwjdbyeaqpzligmkf\nlfikyqwzbmadjegp\naswgkzdyfrqpmnlibje\nfqpmyedjklgzibaw\n\nqe\neqo\n\njbxoe\nqoikde\n\nc\nn\nj\nj\nj\n\nrfh\nrhf\nrfyh\nrhbf\nqfrh\n\nhokvgpxyunam\nbmpyogvhunlw\nmorevjuznhydgit\n\nohns\nnhos\nohns\nhons\nhsno\n\nkxclzyqpan\naexnyqzkpc\npakcqnxzy\n\ngkytw\nmgtw\ngptmw\n\nfixsozjwykhupqmvtbrc\nsyimxhzbpwcktrofuvjq\nxuiwfjvzcpykqhbrosmt\nmwrbvqjtkcsipxfolyhzu\n\nbzhxpyfmk\nyfzxmakphb\nmkzpxbhyof\nhbmzfkxpwyu\npxzhkoybmf\n\nosdyp\ndbsroy\nsydoj\n\nyterzphvxdm\nvtxrmyhzedp\nvymperdhxtz\nmpxrvyhedzt\n\nesakn\ncseak\nhxasge\nenksta\n\nu\ngfzua\n\njsymd\ndmxjy\njmdy\nxymjd\n\nsezfhlvxmaqtd\najvtmqsecyghfixzwl\nksbhxzvafqpmuet\nzfeqytxhadmsvc\nnextsvazhmyfq\n\nrucla\nauclyr\nuticrapl\n\nakizsuwdmnhpxbgyceft\ngwxpfeoyihcklbndasz\nzwhsbigdynkpxceaf\n\nzag\nvmisa\nyphkcant\njdma\nbia\n\nnplydbkoq\noasptkqgldnbey\ndoypnqklbc\nyblkodncpuq\nlqkynpdob\n\nhmj\njm\n\ngniearxpdbjlkfm\nqdvjlute\n\nomsihqlnwzbt\nblzmhisnqoftw\nonqlmwsetzbphi\n\njzoxcwdf\nwdcjzifxq\n\nykdshgzwjfecimnp\njhipmsaftezkoc\nziaspcjfmkhve\n\nt\nt\nt\nf\n\nzmevcjhbsainxoquwpftkydlr\ncygwbtvxemnzfjhrqkdspaolu\nefdtnrlwczymxqvpsoukjbah\n\noujkhnlzydsirva\ndxgzjsuptaohqvnkic\naoiujdlnkzehvs\nuriadhksjyoznv\niydmovnzakhfusj\n\nycajzrtie\nzctyriesap\npxiacrztehby\nqaenyxtzirc\nsaecrytzi\n\nxrnjkgdpuzqvcm\nndqkvuxczjpgrm\nucgmzjpqrnxkvd\nnpqxkumdcezvgrj\n\nthymlxwaoz\nylhowtmazx\n\nnwaisrejbtqfmh\nmbwhqnrfjesa\nhfnrqebjasmw\njecwhfgrsqodanmb\nqasbhnjwferm\n\nny\nny\nyne\n\nlgkmfbthwaouscxpznvyrdi\nnhlmtpwyrojfvbuaczxkgds\naskbuvdozmnxhfygrlwctp\nfytznqhlbmxgrwcdoupavks\nwcplxyvsrdjnfgkmuzbtaho\n\nfklceui\nkclfiue\nklefiuc\nclfekiu\niklcufe\n\nyavcmhwbp\ncapvymhbw\nwhypmabcv\npbzmcywvhja\n\nlbevjz\ngnvefbu\nwebvd\n\newzcqndmjhvy\njevrqnym\nguqpiotaevsbmynlj\nvqmekjynf\nnefqmjxvy\n\nakgwyjfi\ngiwfyljak\n\npdejr\njerd\nredj\n\nliwtk\nkiwl\nwikl\n\nrbwvox\nbxvnor\nvbwxro\nvkrxob\nxbvirwo\n\nntsbkwqefjphro\nnqdvgxihopwc\n\ndn\nnd\nnd\n\nj\nf\ng\nk\nj\n\ntfsul\nusftl\n\nov\nv\nw\ntj\nsl\n\ngdlufaesv\nuagvd\nvudag\n\ncbegxmuiwkzo\nokrmgbfwvnecp\nuybxehawmgqkoc\nyloqmbwgtczke\n\njms\nymsfjo\nlmsuiwhe\nydsmk\n\nwgckujsd\nirp\n\nzgeulsjvimptdaxrqnk\nzbxtefdmvganulqprikjs\nptslznrjqkxemagiudv\n\nfqtb\nqp\naq\nq\nq\n\nhrkzci\nbhwkpidxtflcue\nhkic\nchki\nkcjhiv\n\ngi\ns\n\nrakewmostbfvjzgi\nbegtioavfrkzjm\nzoeikjtbfagrvm\n\nxnbhdlctm\nbgfhwlxsaqnkov\npelmnhuxryb\n\ne\nqr\njh\n\nvhtwuokdqpa\njfaniksczbeymr\n\nngedtljsvybxkmhfuzw\ntbzedwsjgknvhlmfu\nlzbgdsuhkjtvermwfn\nsmizqluwdetfavbnhjg\nblwtngusvdjzhefm\n\nlxaiqvkoh\nfeioxvwbsrl\n\nfy\nyfbqlm\nfy\nyf\nyf\n\ncuygpzd\nkv\nk\nv\n\nantp\nnat\n\nuk\nku\nuk\n\ntdjbri\nrdwezgjtlck\nstvfhapyx\n\npsu\nspy\nps\npksy\nbpsq\n\ndb\no\no\n\nyi\niq\npmxi\ni\n\noxt\natox\ntxo\n\nwn\nsgzth\nb\nm\nynq\n\nayxvhzu\nvhyzxu\nhvzuyx\n\ncxoygklt\ntoky\novkpyt\nvoystpk\n\nyqtjwifbvsn\nvstyfbxjqwin\nvsjtinqfwby\nqxysnitjwfvb\nbjfynsthqiwv\n\nzobny\nzynob\nozbyn\nnoybz\nonyzb\n\ninpdmtkblgqrvaowzxu\nzhrbpuwiqdomgvlnt\ntopveguwzrcbndmqli\n\neapmtqrski\nislukrmpe\nsevcbzfngx\n\npcbl\nvxqwe\n\nky\nt\np\nqzfo\n\nbkhdlpnrxezivu\nlztsfxpgknho\nknwlxmzjhpy\n\nt\nita\noqt\nsbt\n\nomwk\neowm\nwmo\nwmo\nosbtmxwd\n\ndwgpvjemitbcnuhr\nvyjlitenkbpmuhqwxd\niedvbwjczstunpmhg\n\nyfakujntsriwgxm\nrfatigyjkxusnm\nuyxitmkagnjfs\nisjafytxumgnek\ntiknjmugxsyaf\n\npahkyfojrv\nenxmd\n\nsehnkcr\nshkrc\nhcwxilkru\nskgchrfpjt\n\nzdcvpant\nnizclpmtgbv\njtcpnzv\nphtnscvza\nazcntrowvpd\n\nativhgmyedozw\nnvztmiahewg\nuhaimgzventw\ntxiqfmzglphvwae\nehmgiwtzav\n\nqdpreikohtyjc\nihtydekrocpqj\ndjkoticqhpery\njcorkdepqyiht\n\nkgwunqm\nqgjunwk\noinqruwzyk\n\nwtkqceimludr\nmkhpwdcqleurzt\nmqweldutkcr\nkdtmwceulrq\nrqlutcidwmke\n\nk\nh\nk\nk\nk\n\nirb\narbi\nbri\nirb\nfbxvri\n\numpkng\nqmnugpk\n\nsbdxmlzacj\nsbzlcamjxd\ncajmslzxdb\n\nfwndcxr\nxbmusn\n\nt\nt\ngh\np\nt\n\nzovqiwdhuaslkjxrbcnt\nflhnkoxvadiqrwpzbjs\ngqkisrxodznabjwvlhp\nkoqlswdahnzjvbrmyxie\n\napecofvgshiyqbj\nicegjhasytobfpvq\nocsheqagjfpyivb\npewjncobqiysgzrfahv\n\nwzomnlgyxj\nthazprgi\n\nrywgaemsubhvkqcozpnxl\navehbwolxnzmqyprgu\nqyrgpxhazluvenobmw\njhtrzywlnmbeoxvgpiaqu\ngavmwzrponyxhduqble\n\ntw\nwt\ntw\n\nqpzxrctf\n\niqpunlsawtcykmxbdvgfzjr\nvnwdruyptakbgqxjimlzcfs\nfgizdmcblparnsvtuqwxkjy\npxwylavndgqtjbicfksmzru\nxtpdfrbkcglzvqjuminaysw\n\nxkyvhtdwpjnulig\nhvegnyitdwxjz\nvthsnxjaywdig\nwhdagyqvxjtni\nwjvgytdaxnhi\n\nygduev\nclqoa\nqxc\nxaz\nfc\n\nrzeqvofasyhjgxwkmtcudn\nvkuogexmwhznrycdqft\nzupwcondeklthrbvxgmyfqi\n\nmtredzn\nxcnozebtrmd\nelzrmwtund\nemtdnrz\ntedmzorn\n\ntlbunpqygz\nxmehasrifvwj\n\nhoskgitlw\nowrailhtfkg\nwigbjvhtolk\ntbhivwgsuklo\n\nfxnachtsdmiwvuzkg\nhacwldskfgvuixmtzn\nxghufdizawvnmsctk\n\ngnauvfizjdortq\nrinjautyqdzvg\ngiunqazvtdrjmc\nwndhjzuqviatgr\n\nvtpsy\nsptvy\nsvpty\nptksyv\n\nyaskce\nxdtvyjnqma\nfaoyb\npsyfa\n\nlbxounj\nlijrmoxnb\nmioybjnx\nafbjnvopxsch\nbjlzoknx\n\nvqmsgwjfkzdbthal\njszvlwthkmqfgdba\nakmfjzgldswvqth\ntuswfahjmdqkgvlcz\njvatqgfmnwzhdksl\n\nuqyfkzdwta\nhctzeiywabpgvlqonmuf\nzyurtaqwsxf\nwyruzjaqft\n\nrwltyhqdecxagbov\nazthexlkoqmvrdngcwfs\ncorjvwqhutexadlg\nlecogwrhavqdtx\nqpdvrgctyaohwlex\n\negsilhd\nhxmijg\n\ntzdmnvsyiwjrhakbgp\nwmzhsctpdrbnagvyei\nbvwtaylgdnzhsmipr\nrhmlswzvpandgtybi\n\nqriopbacexhnlwfvsmdk\nwblaondrszhcfpei\npdnahlrjseiwfcob\ncerwaoshjldbfnipzu\noalsrdienwcfhpb\n\nxcpe\npcx\ncxpl\nnbpyzixc\nlpecx\n\nxyfcgdaew\njdlcopnaixqbv\nehkcdrax\ndcytarmuhgxews\n\nbqozpsd\npqzosd\nzgqdop\nocqzdfp\n\nuxy\nszj\njzl\nfhvk\n\nmuz\nm\nomycvi\nim\n\nt\nu\n\nxslkmbzarnfeo\naxmndjpsqzelrbkfo\neykroszbaxlmhfn\n\nrsz\nrzq\nkzrit\n\nhkmqiydpzlosuanvwj\nczsjklbvwaidhnxpu\nejvwqmatlkziundhps\nudgjnfoepkwilrhsvaz\n\nczlnqtdy\nbcv\ncvga\nhvcb\nac\n\nlcmytwdeqifzakjhuon\nmdqxhfgpzykvteajn\nemfpxqnhbykzdatj\n\nrtgmujlen\neguclrkmtnj\nnpjgemtrlu\nuntmegrjl\n\nolykiz\norxyswdtka\n\nqelnh\nyijmfxtvbs\ngweh\nwrc\n\nvjcediawtnrmoh\nlvnhmabrxcjwet\najmkbntrvchlegw\n\nyicrxeztbdpjuqlfgnvksmah\nrayjtgdsfhexiqvpcznlkubm\ncrxijflabsgkhtqmdeunpvyz\n\ngpbklvxy\npybxg\nypwgxbd\ngpxyb\n\nvos\nsv\nvs\n\nhqiktnmezpvacby\nuekhv\negskvh\nkvehog\n\nmyhoetiwlqrpdk\npgfkbqleywmhtic\ntezpslhymwkiq\n\nt\nvxh\ng\nt\n\ngjimn\nijugmn\nnjmgi\n\ndrojlynvs\nnrysdjvlo\nlydosnjvr\nsjylnrodv\nnyjrdvols\n\nvjrclek\nvuljbckqfteds\ncihklevgj\n\nrqbvni\nflxuv\n\ngpywjntefcm\ncnoaetmyjpgd\nmpeynjcg\nrbnpymcgexzhqji\ncjumnegpwy\n\nh\nc\nh\nh\nh\n\nhzrqoybi\nwynqkcmlduae\nzqybh\n\nitnoq\nrtinoq\ntqhlin\nimtbq\n\nmoetialxhyqkznjwscgdpv\nqwcagyzjvtoednmixlsphk\nkxqajsiotvnlhcgwdzympe\nynejvlhsopakcmzdtxgiqw\nyaxdpiqktjsozmgvncewlh\n\nqyrlgevbzsutwmxjhindcaokp\nvtdjrqaocngwehspylbukmz\n\naev\nve\na\nbyqg\n\nycfvpamkhliot\nwmckyrthxusfqiedjlaz\natcmhkboiylf\n\nsfqkmlhdc\nmlhkscqdf\nfcqsdhmlk\nkqfhcdmsl\nkqslzfdmhoc\n\ndgveoupsmhabyfkrztclj\nvedwkmptusfhzaygqolcr\n\ntfoaevgbi\nyfu\nsfwqh\nkpfxlj\ndufl\n\nmlwhb\njvgtzp\n\njzp\nszwipyj\n\nlarkxcqsbpeuiv\nfharycntpzi\n\nlsympnqboj\nnlpjmobqys\nnjoslbqpym\nqsnodjtlmbyp\nlnosbmpjyq\n\njpovmflgikracyqunwthe\nhawgrlcyvpnmkjeofuit\npltojwgrcfkhaneuivmy\nklaoumwtfgejnhcripvy\n\nhmvxakwrtundglz\nmkacvnhwrlxbzdug\n\nasvoizlprxjefycmthugnqw\nzohmwpxdaiyvrfnulecgjtq\n\nnatmhjdg\nzctmdalg\nvbiamufq\n\nvhxbajdokyn\ndkvxonyhmab\nhnexvbdaoyk\n\ngyjfnm\ngmfnyj\njfygmn\n\nbjqn\nbnqj\nnqbj\nqbnj\n\nhawjpsxeolr\nrwlqenjhpsobgamx\n\ntovhgbwjdckpqn\nifzl\nmleysuzrax\n\nsky\nky\nmgfpwk\n\nzx\nh\nict\ngz\n\nzsjitm\nlijor\njmwabyit\n\nnbzmj\nabvfwrdn\ncsnbm\n\nhdqyski\nywvclhdsq\nhsqbyxd\n\njmt\nmtsuhxjzkla\n\nfijlt\npsjbtfieg\nzqcohan\n\ngwnfpqb\npnwf\nwpnf\nwfnp\nnwpf\n\nirgkabh\nkhgibar\nakgirhb\n\nemonkbuycsz\nnoyzscmuk\n\nejsqzftblax\nscomdrxgibw\n\nafdjtiyvgqorsmnhubweplkxzc\nfmznscjliqbyevhxwoktdugrap\n\ncgyxhiubmptdokesrjzlafq\npmdqvjuygbeslzatokxfr\n\nhyawt\nwh\nwh\nwh\n\nvojux\nei\nnq\n\npvnjgmxksluctq\nzfrdoa\n\nd\nz\nx\nxd\nd\n\ndwpscgknx\nkwxc\nxcwk\nwxkci\n\nqipb\nildp\nziacpr\npbdi\n\nx\nxb\nx\nx\nx\n\nfenqcuwi\nniczkhxeq\nmcejqnxit\niycrngpqel\n\nuyj\nyju\nyuj\nujy\n\nb\nbd\n\ne\ne\ne\ne\nfei\n\ntncbizahupsdwlog\noclbqdskwnaymx\natloswndebjcriv\n\nmsojaeqnphzylgdbc\nebmzlphcgyjoadq\n\napehlz\ntozlmeba\nekyflaz\n\nqpnhfgjdzymlctkrb\nslmbhkqpfyngzj\nmlpqjyzbghnkf\nnmzghjyblkfpq\nbngqfhymkzpjl\n\napgvczsfuybdiklq\ngmhxdubftesavzlpjcqyi\naswyzugkicpfvqldb\noylsvgbcnuqzdafpi\n\nncrkh\nnhkrc\nkncrh\nhkrnc\nhcknr\n\nnvrjtzamfuhqxp\nebdigavktsywflmco\n\nevrabhcmxkonl\nvlcxmbnkrheo\ncxloknrmeb\npkclmerbonx\nlbkoryunexmc\n\nzdmhgatfpqcwrsu\nberavdksgly\n\nwfo\nfw\nbfwh\n\nkpzlhbtjfiw\nfjwpzhkbli\nbfhpkjzwil\npjwoikhzlbf\n\nyworad\nadsyr\n\natqhenzlswmufgkojrb\nlfoanzusbhgtjkyeqwm\nnsgajlhqeobkfztwmu\nmlcisaozwkhetnqfjgbdu\n\nxhqkmdutfzasylbw\nhqubgdwxlztkmsyfae\npfhuacyitsqxmbwlzkd\n\ntqbpnosumlj\njdtpqbyoli\nulobptqjn\ntfqlvwzopbajc\njxpeobqtulis\n\nawg\nwag\nawgk\n\nczbledy\navgwqu\n\nkf\nf\n\nbh\ngm\ntj\n\nl\ndm\nlspg\nzfeauxn\nqt\n\nzwep\npwze\nwpze\newzp\n\njptngbzhk\ntgnkrpzxdjh\nghjznktp\n\nofrbuieszcakqt\nsnomauqcerdpbt\n\nnbjxhyvtpl\ntbxzgovhjy\nyhbtxjovizk\nbytvxhj\n\npibogfjn\nfogbinjl\nbonqgfji\nbanjisugcmwfvoe\niobghfjn\n\ntz\nt\nta\n\nqnraf\nqrxf\nqfr\nezroqf\n\niachtzfemxwbs\ngzsfycehaqwkm\ntwmhzcsbrafe\nzmafhcewxs\n\ngqoznmrlxvudwehf\nuvzrohmlgdnwqxef\nfrgvqedxohmlnuwz\nfqledmnvwghruzxo\n\nrxcvnyjbqgm\ncjygxmrvbqn\nvuybxmkcrnqg\nipgrxvnobcmeyq\nyvqnbmrgcx\n\nay\nay\nay\nya\nay\n\nnp\nxa\nba\n\nibrcmtxqvyaed\nvycdaeitmbxqr\ndvqiytmcxabre\ndvbaicqeyxrtm\n\nhgzd\nzdlho\nzhd\nzdh\nzdh\n\nhcipn\nzchnipb\n\nrwptzv\nymoedzaltsc\n\nubdwmjecyqxltipzfn\nmvfulhydqewjtzpnci\n\nnajhotpuyrsxdlqbk\nwxetrjaobduqpznklsyc\n\njwcgbxoipeyfmkvhr\ncmblwpoudxteyfvnhkrg\nqzseparbjxvykfocghwm\neqvwroycibpxmfghk\n\nxwedaqgiznj\nkhubyeatir\navgncxeljzmsoif\n\nzf\nf\nf\nhtbcr\n\nst\nkmr\nrm\ntvebzs\ncig\n\ngdij\ngvi\njhgies\n\nfduipkhlz\nizdplfu\n\npdculaojmwsqebvgh\nzmhjsdwlefgoucrpvy\n\nbzwagcde\nuhsqpmloni\n\nmf\nf\nltfn\n\nxlhmpdyieob\nmlxpyhideo\nmixkldhpoye\n\nlwthjcvgnmxuypos\nvixqojmy\nevrxmoyj\nymkajoxv\nzfvjdymaxo\n\nvoh\nh\n\nonqdyf\nqmnf\nwiktfqsajgn\n\npoaheifqcl\nplqcoifaeh\npaegritwhnvlofzucjd\nipeohaflc\noielhpafcs\n\ntzvenpcqxisbjhmgkrw\nxvnckipbhszegfwm\npkchgoxbavsmewizn\ncsvzekmhyngipxbaw\n\nwgim\nixaw\nwixka\niyownrps\niwk\n\ncaofbkuznsiqrtvpjyg\npyroglzcjtfub\npcfjryzgtubmo\n\njunoecpfwmhtxkayziqvgrl\nzqigynpcvufwohjlemtkxar\noeavkrhizljumtgfpxwcqny\ntyizfjnoqcbgxarepklvwsudmh\n\nitvqcxburwo\nidtvacoqbex\nbtvifjxcqyo\nojikvqcltbx\n\nbromkxwdfq\ndkfrbwqamxo\nkorxywiqfdmb\n\nsmyfvkg\nxmkgvsf\nkgnsfvem\nmkfvgs\n\npdxa\nmqgx\nlxsezkbjic\nxy\nwfprx\n\nynhepftgslro\nwytlefgosarn\nysgtndocwlrf\nlrgnfoswtya\nzlibfutmrkxsvjnqgyo\n\nkht\ntkh\nhtk\nhkt\n\npcdxhjnovlusitq\ndbtrjizv\n\nbjhnkitaegvrsx\nnxghvbestra\nbwetgsarvhxdn\n\noleswygxbnfmtzkjuar\nxuaezbtcwlgmnrofsjy\n\nhdrgyowbfktavjuqlzm\ngtkvfdulwqjzhymabro\nrzojgmltbyhafvwdqku\n\nuxpwqbyr\nxpquwyrb\nrwxyqubp\nrwbyquxp\nqxrbyuwp\n\nkqlwz\nrkve\nklnf\nucqk\n\nirqgpjmdk\nctqmvnkfbgj\n\ndv\ndv\ndv\n\nfariyqplzoetb\nzykjphxcg\n\npytmwqvx\ntxvpqmdwy\nxtyqvwmp\nwvqmxypt\n\noekfrmuatwl\naxsvpcjkgqdzhiby\n\nfnyuqsihvmatgwxlr\nufjmioapebxnqydhtk\n\ntpskxdqc\nkxsqcdtp\nytqsdkxcp\ncxpqdtks\ntcxpsdqk\n\nsoivtnhezljymw\nmhcyptneuvob\nnfetymhgdavo\nvnbhmxetaoy\n\nsqruavzncixgbpof\nvioanzfgreuxqc\nacetqngfrxoziuv\ngqcfmxvrnzaoliju\n\nearxh\ngmizfq\n\ntejlcvwgxpdbhsorufmiz\noftmijdscxlvzbuwpehgry\ncvnksdzamhgbporwtufiljxe\n\nwdmgbxyihk\nkhmxyidwg\nhikxwdlpygm\n\nnzcf\ncz\n\nvhfecblgmowtqxpaskyi\nxwgztblrjiacpfmheksvy\n\npemi\ne\ne\nze\ne\n\nfxwy\nxyfw\nyzxfw\n\nkshfqrlmyea\nxsqboukan\n\nvknp\nlevn\npknv\n\nvqsdyhzwei\npoijeyhscazl\n\nryf\nofit\ntxw\njqvlhmbgeuznps\n\nqhzycdugf\ncuhqdzfg\nfghuqzcd\n\nemqngdv\nmeaqh\nezqmax\nexqm\nqmaze\n\njgrnahfyvotupkxziqsdmceblw\nntughqlksexifdraozvmbcpwy\n\nimt\ntim\n\npthzw\ntpnwhz\npiztlw\ntzpw\n\nxpuh\nxbqrvys\nlxw\n\ncpidsmqk\nrkpcdmisq\npcdkqsmi\npmskqdic\n\nthxqby\nbqxohty\nqybhxt\nyqtbxh\nyqbxth\n\nqkplixrshe\njndbsraivm\nzrgelsyit\nlfsri\n\nzqr\nzrtc\nrz\n\ndeabt\nueatgs\nhwiqknj\nulxb\ntdm\n\nsfpwq\nphsqw\nkpsqw\n\nguhmbl\ngmuhb\nmhndpub\nyuihmgcb\nuismhby\n\nqioblnp\nolnqbip\nloqbinp\n\nrqc\nqcr\ncrqay\nrqc\n\nz\nz\nz\nz\nzp\n\nljo\nlcbajeorg\njlox\noljx\n\nloasmqxdy\nmqld\nlvmdqb\n\niq\nqi\n\nfiljwt\nfwitlj\nfliwtj\nwtljif\ntjwfil\n\ndx\nxd\ndx\nxnd\nxd\n\nvzo\nzov\n\nogbwntefukpch\nebwnsfkgupocht\nnoctepwgfhkub\nwfqkugnpodjthbce\n\ngenbzqkvspy\nbrkwjevpqsczn\nfdxnvtzsobqiekau\n\nnxwb\nwnj\n\nimfvncxbhlrdzgok\nvbfdakgnhlcrixmo\ncnzbholrkvdifmxg\nucoklqmbdxnvigrhf\nblndpvmhkirgcxfo\n\nhquykcmexvza\nevnayxkchmzq\njfyxamhqpiwzeokgcvs\nekzdruqamhlbtvxyc\n\nnk\nknwct\npbykwan\ndzsegnfqrom\nlinuwk\n\ntbc\ntqbe\ntcub\n\nlzxybkftrhis\nylrxhdasutjzncipgbfw\nxktyhfizlrobqsmv\n\nsjb\npdkaowvu\n\nbnhcaqjprkx\nncdrqxbolaijkt\nzaxrnksqchybj\ncbnaxejqrk\n\nbteqziwsumofxpvchr\nchoiepzjxuwtvfrsm\nirtuwcsemlpvfzhox\ntwhximepcsfzorlvgu\n\nta\nat\n\nxjdybasehgpm\nedaosjpgxhmby\nxybgpdjemsha\ndmexjpbaslhywg\nxpmedyahjbsg\n\ncbjxvynghstrfluoempdk\nidhbtapleufcsrgywnvmox\nxohdljfecvupmsgrbytkn\nrvleksucfbdymxgotqpnh\n\nklfewtsaihpxnmogudy\nseqdufxypnlikwtogah\newpohdiknstxugayfl\nxwenydkuhfasotlgpij\nfignpyousdtkwexalh\n\noudzygfimh\nxvj\n\nqbpviwoadmfr\ndimbswlpqnh\nyzgxbqidwuj\n\nismkdvnyzajbuowlpqfr\nvjqwufylscopgmkrdabi\nrhbwefvqiykupsajolmd\nmsdqtukoipvfxlyjrabw\n\nlho\nhol\njfolhv`;\n\nexport const testdata1a = `abcx\nabcy\nabcz`;\n\nexport const testdata1b = `abc\n\na\nb\nc\n\nab\nac\n\na\na\na\na\n\nb`;\n","import { Day } from \"util/Day\";\nimport { data as day6data, testdata1a, testdata1b } from \"./data/day06\";\n\nconst makeData = (data: string) => data.split(\"\\n\\n\");\n\nconst countUniqueAnswers = (group: string): number => {\n  const people = group.split(\"\\n\");\n  const groupAnswers = new Set<string>();\n  people.forEach((person) =>\n    person.split(\"\").forEach((answer) => groupAnswers.add(answer))\n  );\n  return groupAnswers.size;\n};\n\nconst countCommonAnswers = (group: string): number => {\n  const people = group.split(\"\\n\");\n  const commonGroupAnswers = people.reduce((acc, person) => {\n    const groupAnswers = acc\n      .split(\"\")\n      .map((answer) => (person.split(\"\").includes(answer) ? answer : \"\"))\n      .join(\"\");\n    return groupAnswers;\n  });\n  return commonGroupAnswers.length;\n};\n\nconst day6: Day<string[]> = {\n  title: \"Custom Customs\",\n  description: `\nAs your flight approaches the airport, customs declaration forms are distributed to the passengers.\n`,\n  data: day6data,\n  dataConv: makeData,\n  parts: [\n    {\n      title: \"Part 1\",\n      description: `\n* For each group, count the number of questions to which anyone answered \"yes\"\n* Calculate the sum of those counts\n`,\n      func: (data) =>\n        data.map(countUniqueAnswers).reduce((acc, value) => acc + value),\n      tests: [\n        { data: testdata1a, result: 6 },\n        { data: testdata1b, result: 11 },\n      ],\n    },\n    {\n      title: \"Part 2\",\n      description: `\n* For each group, count the number of questions to which *everyone* answered \"yes\"\n* Calculate the sum of those counts\n`,\n      func: (data) =>\n        data.map(countCommonAnswers).reduce((acc, value) => acc + value),\n      tests: [{ data: testdata1b, result: 6 }],\n    },\n  ],\n};\n\nexport default day6;\n","import { Day } from \"util/Day\";\nimport day7data, { test1data, test2data } from \"./data/day07\";\n\ntype Bag = {\n  mod: string;\n  color: string;\n  children?: SubBag[];\n};\n\ntype SubBag = Bag & {\n  quantity: number;\n};\n\nconst makeData = (data: string) => {\n  const bags = data.split(\"\\n\");\n  const bagDescs: Bag[] = [];\n\n  const findOrCreateBag = (bagdesc: string): Bag => {\n    const [mod, color] = bagdesc.split(\" \");\n    return (\n      bagDescs.find((desc) => desc.mod === mod && desc.color === color) || {\n        mod,\n        color,\n        children: [],\n      }\n    );\n  };\n\n  bags.forEach((row) => {\n    const [bagname, contents] = row.split(\" bags contain \");\n    const bag = findOrCreateBag(bagname);\n    bagDescs.push(bag);\n\n    contents.split(\", \").forEach((childBagName) => {\n      const [qty, mod, color] = childBagName.split(/[ .]/);\n      if (!Number.isNaN(Number(qty))) {\n        const subBag = findOrCreateBag(`${mod} ${color}`);\n        bag.children?.push({ quantity: Number(qty), ...subBag });\n      }\n    });\n  });\n\n  return bagDescs;\n};\n\nconst findBagParents = (bags: Bag[], bag: Bag): Bag[] => {\n  const parents = new Set(\n    bags.filter(\n      (candidate) =>\n        candidate.children?.find(\n          (child) => child.mod === bag.mod && child.color === bag.color\n        ) !== undefined\n    )\n  );\n  parents.forEach((parent) =>\n    findBagParents(bags, parent).forEach((found) => parents.add(found))\n  );\n\n  return Array.from(parents);\n};\n\nconst findBagChildren = (bags: Bag[], bag: Bag): number => {\n  const srcBag = bags.find((b) => b.mod === bag.mod && b.color === bag.color);\n\n  const bagChildrenCount = srcBag?.children?.map((child) => {\n    return child.quantity + findBagChildren(bags, child) * child.quantity;\n  });\n  const accum = bagChildrenCount?.reduce((acc, cur) => acc + cur, 0) || 0;\n  return accum;\n};\n\nconst day7: Day<Bag[]> = {\n  title: \"Handy Haversacks\",\n  description: `\n  You land at the regional airport, but all flights are currently delayed due to issues in luggage processing.\n`,\n  data: day7data,\n  dataConv: makeData,\n  parts: [\n    {\n      title: \"Part 1\",\n      description: `\n* Bags must be color-coded and must contain specific quantities of other color-coded bags.\n* Count the number of bag colors that can eventually contain at least one **shiny gold bag**\n`,\n      func: (bagDescs) =>\n        findBagParents(bagDescs, { mod: \"shiny\", color: \"gold\" }).length,\n      tests: [{ data: test1data, result: 4 }],\n    },\n    {\n      title: \"Part 2\",\n      description: `\n* Count how many individual bags are required inside your single shiny gold bag\n`,\n      func: (bagDescs) =>\n        findBagChildren(bagDescs, { mod: \"shiny\", color: \"gold\" }),\n      tests: [{ data: test2data, result: 126 }],\n    },\n  ],\n};\n\nexport default day7;\n","const data = `clear maroon bags contain 1 dull lavender bag.\nwavy turquoise bags contain 4 vibrant magenta bags, 4 light violet bags, 5 bright gold bags, 2 faded black bags.\nwavy beige bags contain 3 plaid magenta bags, 3 wavy lime bags, 2 clear turquoise bags, 3 muted cyan bags.\nmirrored black bags contain 1 plaid red bag, 3 light gold bags, 3 wavy violet bags.\nvibrant fuchsia bags contain 2 dark lime bags, 2 mirrored black bags, 2 light magenta bags, 2 drab chartreuse bags.\nvibrant plum bags contain 4 dim cyan bags, 3 pale maroon bags.\ndark tan bags contain 3 faded white bags, 3 wavy tan bags, 4 pale indigo bags.\nfaded green bags contain 2 dim cyan bags, 5 dim magenta bags, 2 wavy maroon bags, 2 faded white bags.\nclear black bags contain 4 striped green bags, 2 dim violet bags, 1 dull tan bag.\nlight olive bags contain 5 striped indigo bags, 3 dim coral bags, 1 drab bronze bag, 3 mirrored beige bags.\ndim black bags contain 1 faded tan bag, 5 shiny crimson bags.\nstriped fuchsia bags contain 3 dim cyan bags.\npale plum bags contain 1 light lavender bag, 3 dim aqua bags, 1 shiny blue bag, 5 dark orange bags.\nwavy crimson bags contain 2 pale crimson bags, 1 muted teal bag, 2 drab olive bags, 4 faded green bags.\nmirrored aqua bags contain 4 shiny red bags, 4 light maroon bags, 4 light violet bags, 5 clear salmon bags.\nlight orange bags contain 4 dim crimson bags, 3 dim red bags, 3 mirrored orange bags.\nshiny bronze bags contain 3 mirrored violet bags, 1 dull blue bag.\nvibrant red bags contain 1 drab beige bag.\nlight violet bags contain 4 dim cyan bags.\ndotted aqua bags contain 1 dotted crimson bag, 3 dark red bags, 4 dark fuchsia bags.\ndrab teal bags contain 2 mirrored violet bags, 2 mirrored beige bags, 2 shiny crimson bags.\nclear coral bags contain 5 striped fuchsia bags, 2 shiny indigo bags.\ndim gray bags contain 4 plaid salmon bags, 4 faded purple bags, 4 dull violet bags, 3 clear coral bags.\ndotted cyan bags contain 1 shiny turquoise bag.\ndim red bags contain 2 wavy magenta bags, 2 faded maroon bags, 5 striped fuchsia bags.\ndull magenta bags contain 4 clear teal bags.\nvibrant coral bags contain 3 pale indigo bags, 5 wavy red bags, 1 clear lime bag, 1 bright red bag.\nstriped silver bags contain 3 posh chartreuse bags.\nposh coral bags contain 1 mirrored orange bag, 2 plaid lavender bags.\ndull brown bags contain 1 light salmon bag.\ndotted bronze bags contain 2 clear teal bags, 2 muted orange bags, 3 dark cyan bags, 2 muted maroon bags.\nposh red bags contain 2 posh gray bags, 1 wavy blue bag.\nfaded violet bags contain 4 light purple bags.\nfaded red bags contain 3 drab brown bags.\nmirrored tomato bags contain 5 muted maroon bags, 1 wavy lavender bag.\nvibrant beige bags contain 4 muted maroon bags, 2 plaid violet bags, 1 dim cyan bag.\nshiny turquoise bags contain 2 faded turquoise bags, 1 bright olive bag, 1 striped aqua bag, 2 mirrored blue bags.\nplaid black bags contain 1 shiny teal bag.\ndull fuchsia bags contain 3 posh tan bags, 4 dotted coral bags.\nwavy tomato bags contain 3 light lavender bags.\nposh salmon bags contain 5 plaid chartreuse bags.\nstriped green bags contain 3 dim cyan bags, 1 dark cyan bag, 3 shiny coral bags.\ndim brown bags contain 4 dotted tan bags, 2 dark white bags, 1 plaid coral bag.\nwavy plum bags contain 5 muted crimson bags.\nstriped turquoise bags contain 2 bright plum bags, 1 muted salmon bag, 2 vibrant white bags, 3 pale coral bags.\nposh white bags contain 5 mirrored plum bags, 1 drab lavender bag, 4 drab brown bags.\nwavy purple bags contain 4 striped fuchsia bags, 4 shiny indigo bags, 1 wavy violet bag.\nmuted coral bags contain 1 vibrant plum bag, 4 plaid salmon bags, 2 bright indigo bags.\nlight salmon bags contain 5 wavy olive bags, 2 dull violet bags, 3 vibrant orange bags.\nlight indigo bags contain 3 mirrored fuchsia bags.\ndrab white bags contain 1 pale green bag, 1 shiny teal bag, 4 bright yellow bags.\nvibrant teal bags contain 4 drab turquoise bags, 3 shiny coral bags, 4 posh tan bags.\nmuted yellow bags contain 2 faded lavender bags.\npale silver bags contain 4 dotted green bags.\nfaded gold bags contain 1 faded orange bag, 2 drab chartreuse bags.\nmirrored teal bags contain 2 dim tan bags, 2 plaid violet bags, 4 pale brown bags.\nmuted chartreuse bags contain 4 shiny yellow bags, 1 posh beige bag.\nclear yellow bags contain 3 faded maroon bags, 5 striped blue bags, 3 dull silver bags, 5 striped gold bags.\nvibrant black bags contain 2 dull green bags, 3 vibrant white bags, 1 mirrored gold bag.\nstriped indigo bags contain 1 vibrant orange bag, 3 striped black bags, 2 pale aqua bags, 3 light crimson bags.\nposh lime bags contain 1 clear lime bag, 1 pale aqua bag, 3 plaid white bags.\ndrab silver bags contain 3 wavy aqua bags, 2 plaid yellow bags, 1 posh black bag, 2 plaid beige bags.\nmirrored chartreuse bags contain 1 drab teal bag, 5 posh maroon bags.\nfaded brown bags contain 5 mirrored blue bags, 2 pale aqua bags, 3 dim black bags.\nvibrant orange bags contain 3 bright tan bags, 5 shiny teal bags, 4 dotted crimson bags, 2 posh cyan bags.\ndrab blue bags contain 4 dark aqua bags.\nplaid beige bags contain 2 plaid salmon bags, 4 dull maroon bags.\nfaded white bags contain 1 dim aqua bag.\nbright lime bags contain 3 drab gray bags, 1 striped lime bag.\ndim maroon bags contain 1 dotted salmon bag.\nclear fuchsia bags contain 2 pale plum bags.\nplaid violet bags contain 3 light magenta bags, 1 bright indigo bag, 1 pale tan bag.\ndrab maroon bags contain 4 light gray bags, 1 striped orange bag, 5 drab salmon bags.\nlight turquoise bags contain 4 plaid red bags, 5 drab plum bags.\npale magenta bags contain 3 wavy red bags, 2 muted orange bags.\nstriped plum bags contain 3 dark violet bags, 5 striped aqua bags, 1 posh chartreuse bag.\nmuted silver bags contain 1 striped lavender bag, 4 dotted salmon bags.\ndark olive bags contain 1 mirrored cyan bag, 4 dull tan bags.\ndotted brown bags contain 4 bright lavender bags.\nbright salmon bags contain 4 drab blue bags.\nclear orange bags contain 1 posh cyan bag.\nclear tomato bags contain 1 clear red bag, 2 shiny yellow bags.\nwavy black bags contain 1 mirrored bronze bag.\nvibrant gold bags contain 2 posh olive bags, 4 shiny red bags.\nmuted tomato bags contain 5 dotted indigo bags, 2 dark magenta bags, 1 faded indigo bag, 1 shiny indigo bag.\ndim tan bags contain 2 drab brown bags.\nposh purple bags contain 4 light violet bags, 5 drab chartreuse bags, 4 striped fuchsia bags.\ndrab turquoise bags contain 3 bright indigo bags.\nclear gold bags contain 2 wavy magenta bags, 1 bright olive bag.\ndim crimson bags contain 2 drab gold bags, 1 dull tomato bag, 1 posh indigo bag.\ndark lime bags contain 5 wavy magenta bags, 3 mirrored fuchsia bags, 5 dotted chartreuse bags, 1 dull bronze bag.\nposh orange bags contain 2 mirrored aqua bags, 1 shiny green bag, 5 plaid teal bags.\ndotted chartreuse bags contain 3 wavy violet bags, 5 pale white bags, 1 posh violet bag, 2 dark aqua bags.\nwavy green bags contain 3 dim olive bags, 4 light lavender bags, 3 light olive bags.\ndark beige bags contain 4 shiny orange bags.\ndark orange bags contain 5 clear orange bags.\nvibrant white bags contain 2 dotted purple bags, 4 dark fuchsia bags, 3 dull bronze bags.\nshiny fuchsia bags contain 2 shiny gold bags.\nplaid teal bags contain 4 light maroon bags.\nfaded beige bags contain 4 dark aqua bags, 4 mirrored black bags, 1 vibrant orange bag.\nwavy lime bags contain 4 dull cyan bags, 1 striped aqua bag, 2 plaid brown bags, 5 vibrant teal bags.\nwavy silver bags contain 3 drab lime bags.\nposh lavender bags contain 1 dotted purple bag.\ndark crimson bags contain 3 posh green bags, 3 dark green bags.\ndull teal bags contain 5 plaid salmon bags.\nclear brown bags contain 5 mirrored purple bags, 5 vibrant orange bags.\nstriped white bags contain 3 dull maroon bags.\nclear violet bags contain 4 bright red bags, 1 dark orange bag, 3 dull maroon bags, 3 muted maroon bags.\nfaded magenta bags contain 1 shiny yellow bag.\ndim beige bags contain 5 striped salmon bags.\ndull white bags contain 1 shiny tan bag.\nposh crimson bags contain 1 mirrored green bag, 4 dark orange bags.\nlight teal bags contain 5 bright tan bags, 5 light indigo bags.\nwavy orange bags contain 2 pale maroon bags, 2 clear maroon bags.\nlight lime bags contain 3 dim silver bags, 1 dim purple bag, 1 striped cyan bag.\nmuted gray bags contain 2 light green bags, 4 dark aqua bags, 4 plaid coral bags, 2 mirrored lime bags.\nbright fuchsia bags contain 1 striped crimson bag, 5 faded purple bags, 2 plaid violet bags, 2 vibrant magenta bags.\nlight chartreuse bags contain 4 bright bronze bags, 3 wavy teal bags, 5 muted tan bags, 4 light bronze bags.\nplaid gold bags contain 5 wavy teal bags, 4 clear magenta bags.\ndull silver bags contain 5 dim aqua bags, 3 muted silver bags, 3 mirrored blue bags, 4 clear orange bags.\nshiny maroon bags contain 3 dark olive bags, 3 muted turquoise bags.\nfaded turquoise bags contain 1 light gold bag, 3 pale fuchsia bags, 4 shiny silver bags.\nposh indigo bags contain 4 muted salmon bags, 2 pale green bags.\ndotted violet bags contain 4 shiny lime bags, 4 muted violet bags, 1 muted yellow bag, 4 shiny red bags.\nfaded salmon bags contain 5 muted lime bags.\ndotted white bags contain 5 dotted indigo bags, 3 wavy brown bags, 5 pale aqua bags.\ndark brown bags contain 5 wavy maroon bags, 3 plaid beige bags, 5 drab white bags.\nshiny white bags contain 1 dotted bronze bag, 5 dull black bags, 3 muted white bags, 4 wavy maroon bags.\nbright chartreuse bags contain 1 striped green bag.\nplaid indigo bags contain 4 dull bronze bags.\nbright violet bags contain 1 shiny yellow bag.\npale maroon bags contain 3 striped fuchsia bags, 5 plaid silver bags, 4 shiny teal bags.\nshiny plum bags contain 4 wavy plum bags, 5 faded tomato bags.\nwavy tan bags contain 3 dim black bags, 4 posh black bags.\nplaid lavender bags contain 4 dull tan bags, 2 vibrant beige bags.\nfaded aqua bags contain 1 dull lavender bag, 4 vibrant orange bags, 4 posh black bags.\nfaded lavender bags contain 1 shiny coral bag, 1 plaid black bag, 1 wavy bronze bag, 5 dark coral bags.\nshiny indigo bags contain 4 dotted green bags.\ndark bronze bags contain 5 faded crimson bags, 3 dim lavender bags, 2 wavy white bags.\nmuted olive bags contain 5 light yellow bags, 1 dull chartreuse bag, 4 dim lime bags.\nwavy olive bags contain 3 dotted orange bags.\nvibrant purple bags contain 3 faded maroon bags, 1 clear bronze bag, 5 striped black bags, 5 muted indigo bags.\nstriped coral bags contain 1 mirrored black bag.\ndull violet bags contain 1 dotted purple bag.\ndim blue bags contain 1 shiny indigo bag, 5 striped cyan bags.\ndrab aqua bags contain 5 clear chartreuse bags.\nstriped bronze bags contain 5 wavy lavender bags, 5 shiny silver bags, 2 posh crimson bags.\nstriped orange bags contain 1 muted salmon bag.\nclear white bags contain 2 dark coral bags, 1 plaid silver bag, 2 drab gold bags, 4 dark red bags.\ndotted tan bags contain 4 mirrored silver bags.\nstriped crimson bags contain 2 dim olive bags, 3 dotted purple bags.\nmuted bronze bags contain 5 dotted gray bags.\nstriped tomato bags contain 4 mirrored aqua bags.\ndrab tan bags contain 1 dotted white bag, 3 dotted coral bags, 5 muted olive bags.\nlight maroon bags contain 1 dim olive bag.\ndark blue bags contain 1 mirrored maroon bag, 1 shiny salmon bag, 3 dull cyan bags.\nvibrant maroon bags contain 5 dull fuchsia bags.\nbright gray bags contain 1 wavy red bag.\nposh brown bags contain 2 dim beige bags, 2 shiny teal bags.\nstriped blue bags contain 1 dotted chartreuse bag, 2 clear violet bags, 1 drab teal bag.\ndim indigo bags contain 3 clear purple bags.\nstriped teal bags contain 2 dotted teal bags.\nplaid orange bags contain 5 dim black bags, 2 wavy bronze bags, 4 drab bronze bags, 2 shiny salmon bags.\npale salmon bags contain 2 dotted plum bags.\nvibrant aqua bags contain 2 wavy orange bags.\nfaded coral bags contain 5 dark fuchsia bags, 3 vibrant orange bags, 4 posh lavender bags, 5 dotted purple bags.\nbright tomato bags contain 3 plaid plum bags, 5 faded maroon bags, 4 bright green bags.\nwavy gray bags contain 5 pale silver bags, 2 clear cyan bags, 1 dim yellow bag, 1 clear aqua bag.\ndark aqua bags contain 1 pale maroon bag, 1 dotted gray bag, 2 muted plum bags, 4 muted orange bags.\nplaid maroon bags contain 4 muted plum bags, 1 plaid beige bag, 4 bright indigo bags, 5 vibrant orange bags.\nlight gray bags contain 1 faded crimson bag.\nshiny silver bags contain 4 striped cyan bags, 4 mirrored fuchsia bags, 2 plaid salmon bags.\nplaid blue bags contain 2 dim olive bags, 2 posh purple bags, 1 dotted bronze bag, 2 shiny fuchsia bags.\nshiny olive bags contain 1 posh indigo bag.\ndotted plum bags contain 4 shiny coral bags, 2 drab beige bags, 3 dim gray bags.\npale beige bags contain 4 drab orange bags.\nmuted white bags contain 1 faded orange bag, 2 mirrored red bags, 3 wavy fuchsia bags, 2 drab blue bags.\ndark gold bags contain 1 mirrored beige bag, 3 plaid violet bags, 2 dotted bronze bags, 1 wavy bronze bag.\nclear cyan bags contain 1 striped fuchsia bag, 4 dotted lime bags, 3 drab olive bags, 3 dull blue bags.\nbright black bags contain 2 posh lavender bags, 3 wavy brown bags.\nbright olive bags contain 4 dark chartreuse bags, 3 plaid salmon bags, 2 muted orange bags, 5 pale aqua bags.\nlight silver bags contain 3 plaid maroon bags.\ndrab indigo bags contain 1 muted cyan bag, 1 clear magenta bag, 1 dark brown bag.\ndull gold bags contain 2 posh beige bags, 1 vibrant magenta bag.\nmuted purple bags contain 2 dark salmon bags, 4 faded brown bags, 5 faded black bags.\npale violet bags contain 2 dull bronze bags, 3 dull aqua bags.\ndark green bags contain 3 mirrored white bags, 2 striped cyan bags, 4 muted chartreuse bags, 2 faded white bags.\ndark indigo bags contain 4 dotted green bags, 4 dotted cyan bags, 5 bright bronze bags, 5 faded bronze bags.\nposh plum bags contain 1 light crimson bag.\ndark yellow bags contain 1 faded purple bag, 2 muted olive bags.\nbright crimson bags contain 2 striped tan bags.\ndim plum bags contain 2 bright silver bags, 1 shiny beige bag, 2 posh teal bags.\ndull blue bags contain 1 faded purple bag.\ndrab violet bags contain 1 dim white bag, 4 vibrant lavender bags, 3 dull magenta bags.\nmirrored yellow bags contain 3 wavy lavender bags.\nclear plum bags contain 3 vibrant cyan bags, 4 plaid chartreuse bags, 5 light violet bags.\ndim coral bags contain 3 mirrored red bags, 1 pale maroon bag, 3 dark chartreuse bags.\nstriped purple bags contain 1 mirrored tomato bag, 4 dotted green bags.\nwavy magenta bags contain 4 mirrored bronze bags, 5 bright fuchsia bags, 3 mirrored violet bags, 3 drab aqua bags.\nfaded crimson bags contain 5 posh black bags.\ndotted maroon bags contain 1 muted salmon bag, 5 striped salmon bags.\ndark violet bags contain 1 plaid black bag, 3 dim gray bags, 3 bright lavender bags.\nbright lavender bags contain 4 mirrored blue bags, 2 mirrored black bags, 3 wavy red bags.\nlight white bags contain 1 striped salmon bag, 3 plaid white bags, 5 clear lime bags, 5 dim aqua bags.\nwavy lavender bags contain 2 dull tan bags.\nvibrant violet bags contain 1 drab olive bag, 2 faded indigo bags, 2 posh black bags.\nbright silver bags contain 5 posh black bags, 3 posh lavender bags, 4 clear lime bags, 2 dim aqua bags.\nmuted cyan bags contain 2 clear red bags, 2 plaid black bags.\ndull coral bags contain 5 dotted tan bags.\ndull purple bags contain 1 dotted lavender bag.\nmuted gold bags contain 4 dim aqua bags.\nwavy maroon bags contain 4 light aqua bags, 5 bright black bags, 3 dull black bags.\nposh violet bags contain 2 dark chartreuse bags, 3 striped fuchsia bags.\ndull olive bags contain 1 dark chartreuse bag, 1 plaid tomato bag, 5 muted coral bags, 5 light gold bags.\nshiny coral bags contain 5 dull violet bags, 3 bright tan bags, 3 muted orange bags, 3 shiny indigo bags.\ndotted green bags contain 4 wavy bronze bags, 3 dull violet bags, 2 striped beige bags.\ndull tan bags contain 2 light maroon bags, 5 posh tan bags, 4 pale tan bags.\nmirrored gold bags contain 4 wavy lime bags.\nfaded lime bags contain 5 dotted salmon bags, 1 plaid brown bag, 5 posh tan bags.\nplaid tan bags contain 5 drab plum bags, 2 dotted salmon bags.\nshiny cyan bags contain 2 dark coral bags, 4 posh yellow bags, 5 dotted brown bags, 5 dull maroon bags.\nposh aqua bags contain 2 light bronze bags, 4 light green bags.\nclear crimson bags contain 1 faded crimson bag, 2 posh tan bags, 2 dotted orange bags.\ndrab black bags contain 2 dull tomato bags, 4 muted red bags, 4 dotted turquoise bags, 1 mirrored red bag.\nvibrant blue bags contain 2 posh coral bags, 3 wavy teal bags.\nlight gold bags contain 5 posh gray bags, 5 shiny brown bags, 3 dark coral bags.\nwavy teal bags contain 5 bright tan bags, 5 clear coral bags.\nclear blue bags contain 1 striped green bag, 3 mirrored green bags.\ndark tomato bags contain 4 wavy yellow bags, 4 striped magenta bags, 1 wavy bronze bag, 1 dotted salmon bag.\ndull black bags contain 2 posh lavender bags, 5 pale aqua bags.\nmirrored crimson bags contain 4 dim turquoise bags, 2 mirrored aqua bags, 1 drab tan bag.\ndark chartreuse bags contain 1 dotted green bag.\nshiny salmon bags contain 5 light yellow bags, 4 pale fuchsia bags, 5 muted olive bags.\nlight magenta bags contain 1 clear teal bag.\ndim orange bags contain 3 dark plum bags.\nstriped black bags contain 5 shiny coral bags, 2 dull violet bags, 3 drab olive bags, 1 mirrored red bag.\ndotted gold bags contain 3 pale indigo bags, 2 wavy salmon bags, 1 light plum bag.\nshiny chartreuse bags contain 2 plaid green bags.\nlight cyan bags contain 3 posh chartreuse bags, 5 striped lime bags, 4 wavy red bags.\nposh chartreuse bags contain 2 wavy violet bags.\nplaid fuchsia bags contain 4 mirrored blue bags, 5 pale tan bags.\nmuted black bags contain 2 striped lime bags, 2 light olive bags, 2 plaid tan bags, 2 light lavender bags.\nstriped aqua bags contain 5 mirrored red bags.\nshiny lime bags contain 2 faded white bags, 4 clear silver bags, 1 wavy fuchsia bag, 5 plaid lavender bags.\ndrab magenta bags contain 5 dim purple bags, 2 dim silver bags, 3 clear brown bags, 4 wavy turquoise bags.\nmirrored silver bags contain 5 mirrored cyan bags, 5 dull silver bags, 5 drab violet bags.\nstriped cyan bags contain 5 bright indigo bags.\nwavy violet bags contain 2 dim cyan bags, 2 plaid silver bags.\npale teal bags contain 1 light maroon bag, 1 clear lime bag, 4 dark turquoise bags.\nwavy fuchsia bags contain 3 drab plum bags, 1 dotted white bag.\nmuted green bags contain 5 bright orange bags.\nlight yellow bags contain 4 shiny bronze bags, 4 wavy white bags, 3 drab turquoise bags.\nplaid purple bags contain 5 dotted purple bags, 3 plaid magenta bags, 1 wavy magenta bag.\nposh bronze bags contain 1 vibrant coral bag.\nvibrant green bags contain 3 plaid orange bags, 1 posh fuchsia bag, 1 faded brown bag.\ndim yellow bags contain 4 shiny gold bags, 5 mirrored magenta bags.\ndrab lavender bags contain 3 muted coral bags, 5 drab aqua bags.\ndull chartreuse bags contain 1 vibrant white bag.\nplaid bronze bags contain 4 posh indigo bags.\nmirrored brown bags contain 2 wavy violet bags, 1 shiny crimson bag.\nclear silver bags contain 5 dim green bags, 2 vibrant gray bags, 3 pale white bags.\ndrab salmon bags contain 5 shiny teal bags, 2 plaid teal bags, 4 striped magenta bags.\ndotted tomato bags contain 4 shiny tan bags, 3 dotted bronze bags, 4 clear lime bags.\nlight tan bags contain 4 dotted silver bags, 1 mirrored violet bag, 3 dim lime bags.\nshiny tan bags contain 4 dotted gray bags, 5 striped cyan bags, 2 dull violet bags, 5 pale maroon bags.\npale tomato bags contain 4 bright orange bags, 2 posh chartreuse bags.\nfaded silver bags contain 4 dark turquoise bags, 4 faded gray bags, 5 wavy bronze bags.\nplaid gray bags contain 1 bright red bag.\npale olive bags contain 3 posh beige bags, 4 faded coral bags.\nplaid yellow bags contain 5 dim blue bags, 1 drab plum bag, 1 dark coral bag, 2 faded purple bags.\ndim green bags contain 1 muted orange bag.\nwavy cyan bags contain 4 clear brown bags, 5 vibrant tan bags.\nclear teal bags contain 4 dark chartreuse bags.\nvibrant bronze bags contain 2 dim cyan bags, 4 shiny lime bags.\nmuted salmon bags contain 4 clear coral bags, 2 posh lavender bags, 2 pale aqua bags.\nshiny gray bags contain 5 drab blue bags, 2 dull chartreuse bags, 5 wavy bronze bags, 2 dull salmon bags.\nmuted blue bags contain 4 faded black bags, 3 dim lavender bags, 5 light violet bags, 2 mirrored maroon bags.\ndotted blue bags contain 4 light bronze bags.\ndark teal bags contain 4 dim lavender bags, 4 shiny gray bags, 4 wavy salmon bags, 2 pale white bags.\nlight purple bags contain 1 clear salmon bag, 1 plaid brown bag.\nlight tomato bags contain 4 striped lavender bags, 1 muted bronze bag.\nmuted lime bags contain 4 mirrored olive bags, 1 dark aqua bag.\npale bronze bags contain 1 mirrored brown bag.\ndotted black bags contain 4 vibrant magenta bags.\nshiny brown bags contain 2 bright tan bags.\nfaded cyan bags contain 4 dotted lavender bags, 2 vibrant fuchsia bags, 3 light green bags.\ndrab cyan bags contain 5 shiny lime bags.\nfaded tan bags contain 5 shiny silver bags.\ndim fuchsia bags contain 5 dim orange bags, 3 mirrored fuchsia bags.\ndrab fuchsia bags contain 4 plaid silver bags.\nstriped beige bags contain no other bags.\nmuted fuchsia bags contain 1 plaid silver bag, 5 shiny silver bags, 3 dark orange bags, 5 posh silver bags.\nbright beige bags contain 2 light crimson bags, 4 posh violet bags, 5 dotted purple bags.\nmuted crimson bags contain 2 wavy salmon bags, 1 clear tomato bag, 1 pale bronze bag.\ndrab olive bags contain 1 dull violet bag, 5 dotted crimson bags, 1 bright gold bag, 4 muted orange bags.\ndotted silver bags contain 2 dim indigo bags, 2 clear gray bags.\npale blue bags contain 3 dotted teal bags, 5 muted tomato bags, 1 clear tan bag.\ndark fuchsia bags contain 2 dark plum bags, 5 posh tan bags.\ndull plum bags contain 3 pale green bags.\nfaded indigo bags contain 4 plaid white bags.\nposh teal bags contain 5 drab maroon bags, 4 striped purple bags, 4 clear tan bags.\nlight beige bags contain 1 dull orange bag.\npale turquoise bags contain 1 bright olive bag, 5 drab tomato bags, 5 faded turquoise bags, 1 mirrored brown bag.\nshiny orange bags contain 4 plaid silver bags, 2 wavy brown bags, 5 clear teal bags.\npale lavender bags contain 4 light plum bags.\nclear olive bags contain 2 wavy fuchsia bags, 4 dim black bags.\nfaded blue bags contain 5 pale white bags, 5 plaid tomato bags, 3 muted orange bags, 5 clear red bags.\ndotted salmon bags contain 5 light gold bags, 1 muted green bag, 3 light black bags, 1 mirrored green bag.\nvibrant yellow bags contain 1 clear purple bag, 5 dotted coral bags.\nlight blue bags contain 4 dark tan bags, 1 mirrored aqua bag, 5 clear lime bags, 5 drab coral bags.\nbright blue bags contain 4 dim maroon bags.\nmirrored orange bags contain 4 dotted plum bags, 2 dotted yellow bags, 4 dull cyan bags, 2 shiny tan bags.\ndotted teal bags contain 3 light crimson bags, 1 mirrored black bag, 3 wavy olive bags.\nwavy chartreuse bags contain 5 drab bronze bags, 1 muted salmon bag.\nstriped brown bags contain 1 vibrant violet bag, 3 dull plum bags, 1 faded brown bag.\nplaid aqua bags contain 4 striped black bags, 5 muted white bags.\ndark purple bags contain 3 mirrored orange bags, 5 wavy lavender bags.\nmirrored tan bags contain 4 wavy indigo bags.\nposh silver bags contain 3 striped magenta bags, 1 dark chartreuse bag, 5 dotted white bags, 4 wavy tan bags.\nfaded yellow bags contain 4 plaid magenta bags.\nbright brown bags contain 4 drab tomato bags.\nmirrored turquoise bags contain 5 plaid purple bags, 1 mirrored red bag, 4 striped green bags.\nplaid green bags contain 2 drab chartreuse bags.\ndotted olive bags contain 2 dull white bags.\nshiny teal bags contain no other bags.\nshiny red bags contain 5 striped cyan bags.\ndotted orange bags contain 2 clear teal bags, 5 striped cyan bags.\nshiny violet bags contain 5 posh violet bags.\nbright indigo bags contain no other bags.\nplaid white bags contain 2 bright indigo bags.\ndrab plum bags contain no other bags.\nclear gray bags contain 1 mirrored gold bag, 1 dark beige bag, 2 drab silver bags, 4 striped green bags.\ndim magenta bags contain 1 posh cyan bag.\ndull cyan bags contain 5 pale fuchsia bags, 4 plaid fuchsia bags, 4 clear orange bags, 1 dark gold bag.\nlight brown bags contain 1 dull violet bag.\ndotted fuchsia bags contain 3 striped crimson bags, 3 dim lime bags.\ndark magenta bags contain 5 dark plum bags, 3 mirrored fuchsia bags.\ndull tomato bags contain 2 shiny orange bags, 2 dark fuchsia bags.\ndull crimson bags contain 2 muted turquoise bags.\nmirrored salmon bags contain 4 mirrored bronze bags, 1 clear white bag, 3 dark red bags, 3 dim olive bags.\nshiny aqua bags contain 3 shiny green bags, 1 light lavender bag, 3 drab salmon bags, 1 dark tan bag.\nbright plum bags contain 4 dull lavender bags, 4 muted maroon bags, 2 bright coral bags, 4 dull maroon bags.\ndark red bags contain 1 bright olive bag.\npale crimson bags contain 3 dotted green bags, 2 plaid tomato bags.\ndim bronze bags contain 4 plaid cyan bags.\nvibrant indigo bags contain 1 dark blue bag, 5 dotted orange bags.\nmirrored lavender bags contain 4 dark cyan bags, 1 shiny green bag, 1 mirrored gold bag, 1 shiny silver bag.\nbright magenta bags contain 2 faded indigo bags, 5 pale aqua bags, 4 dark magenta bags.\ndrab orange bags contain 3 dull turquoise bags, 1 light magenta bag.\nvibrant salmon bags contain 3 striped blue bags, 3 vibrant teal bags.\ndrab beige bags contain 1 drab plum bag, 2 wavy violet bags, 3 mirrored brown bags.\nmuted beige bags contain 2 wavy tan bags, 5 wavy red bags.\nbright aqua bags contain 1 dark fuchsia bag, 5 dull black bags, 2 plaid red bags, 2 bright blue bags.\nshiny tomato bags contain 4 faded brown bags.\ndim lavender bags contain 2 dotted purple bags.\nposh fuchsia bags contain 5 plaid crimson bags, 3 dark orange bags, 1 vibrant red bag.\nmuted brown bags contain 5 posh cyan bags, 4 wavy tan bags.\nlight crimson bags contain 1 shiny red bag.\nwavy coral bags contain 5 muted magenta bags, 1 dull silver bag, 4 faded olive bags.\nmirrored bronze bags contain 1 bright lavender bag, 5 muted indigo bags, 1 wavy olive bag.\nwavy salmon bags contain 4 dotted bronze bags, 3 drab plum bags.\nvibrant brown bags contain 1 posh coral bag, 2 posh green bags, 3 faded olive bags.\ndim cyan bags contain no other bags.\ndull lavender bags contain 5 striped cyan bags, 5 dim cyan bags.\npale orange bags contain 3 vibrant tan bags.\ndrab chartreuse bags contain 4 wavy teal bags, 3 plaid black bags, 1 dim blue bag.\ndrab gray bags contain 1 pale chartreuse bag.\ndim lime bags contain 3 clear teal bags, 4 posh chartreuse bags, 3 bright black bags, 5 muted red bags.\nplaid cyan bags contain 3 wavy purple bags.\ndotted lime bags contain 5 bright olive bags, 3 vibrant violet bags, 4 bright tomato bags, 3 dark magenta bags.\ndark lavender bags contain 5 light silver bags, 3 striped brown bags.\ndotted coral bags contain 2 dotted green bags, 2 wavy brown bags.\nbright orange bags contain 2 dull black bags, 5 posh purple bags, 2 muted indigo bags, 5 shiny gold bags.\nwavy white bags contain 3 plaid salmon bags, 1 muted plum bag, 3 plaid indigo bags, 3 dull aqua bags.\ndark white bags contain 5 mirrored teal bags, 3 dark lime bags.\nvibrant magenta bags contain 2 mirrored fuchsia bags, 1 clear lime bag.\nlight plum bags contain 4 dull aqua bags.\npale indigo bags contain 1 dotted coral bag, 5 drab beige bags, 3 dim green bags.\ndull yellow bags contain 3 dotted silver bags.\ndim white bags contain 3 clear chartreuse bags, 1 clear tomato bag.\nbright maroon bags contain 2 dark bronze bags.\ndotted crimson bags contain 2 plaid silver bags, 5 drab plum bags.\ndull turquoise bags contain 3 faded coral bags.\nmirrored maroon bags contain 5 shiny fuchsia bags.\nposh beige bags contain 4 plaid aqua bags, 3 muted red bags.\nshiny lavender bags contain 5 striped brown bags, 4 bright red bags.\ndrab purple bags contain 1 posh plum bag, 3 pale salmon bags, 5 striped coral bags, 1 muted bronze bag.\nposh turquoise bags contain 3 drab tan bags.\nfaded purple bags contain 4 striped fuchsia bags, 3 mirrored fuchsia bags, 2 dotted gray bags, 4 muted coral bags.\nfaded bronze bags contain 4 striped bronze bags.\nmirrored lime bags contain 1 muted lavender bag.\nposh gold bags contain 1 mirrored purple bag.\nposh maroon bags contain 1 striped beige bag, 1 wavy red bag, 1 wavy tan bag.\nclear beige bags contain 5 posh turquoise bags, 4 drab tan bags, 2 striped olive bags, 3 plaid olive bags.\ndim purple bags contain 1 striped lime bag.\nvibrant olive bags contain 2 muted yellow bags, 2 plaid aqua bags, 3 dark silver bags, 2 pale green bags.\nbright tan bags contain 5 faded purple bags, 3 dotted gray bags.\nvibrant tomato bags contain 2 pale salmon bags, 2 drab teal bags.\nplaid red bags contain 4 vibrant white bags, 1 posh tan bag.\nmirrored magenta bags contain 3 wavy blue bags, 1 muted tomato bag, 1 striped salmon bag, 1 shiny red bag.\ndrab tomato bags contain 2 wavy violet bags, 5 muted aqua bags.\nshiny magenta bags contain 4 mirrored brown bags.\ndull red bags contain 4 plaid green bags.\ndim aqua bags contain 3 mirrored blue bags, 2 bright indigo bags, 4 shiny coral bags.\nfaded gray bags contain 4 light lavender bags, 5 clear lime bags, 5 vibrant violet bags.\ndotted lavender bags contain 4 faded crimson bags.\ndull salmon bags contain 2 light plum bags.\nposh yellow bags contain 2 light yellow bags, 2 dim cyan bags, 1 clear crimson bag, 4 posh lavender bags.\nposh tomato bags contain 4 shiny lime bags, 4 bright turquoise bags, 5 shiny tan bags, 4 bright yellow bags.\nplaid lime bags contain 3 shiny salmon bags, 3 plaid crimson bags.\ndim silver bags contain 2 plaid black bags, 3 dull bronze bags, 3 shiny red bags.\ndotted magenta bags contain 3 dotted coral bags, 3 striped blue bags, 3 vibrant tan bags, 3 plaid brown bags.\nmuted teal bags contain 3 pale maroon bags.\nvibrant silver bags contain 3 drab lime bags, 1 light aqua bag.\nclear lime bags contain 5 dark plum bags, 3 dotted gray bags.\ndull aqua bags contain 3 posh black bags.\ndark plum bags contain no other bags.\ndrab yellow bags contain 4 muted beige bags, 3 clear brown bags, 5 light crimson bags, 5 wavy lavender bags.\nmirrored fuchsia bags contain no other bags.\nposh green bags contain 5 shiny brown bags.\nstriped violet bags contain 1 shiny lime bag, 4 pale magenta bags.\nbright turquoise bags contain 1 mirrored lime bag, 1 clear gold bag, 1 muted plum bag.\ndotted beige bags contain 5 plaid aqua bags, 5 muted tomato bags, 5 striped orange bags.\npale red bags contain 3 striped white bags, 2 drab olive bags, 2 drab black bags, 4 pale chartreuse bags.\nplaid coral bags contain 1 dark beige bag, 2 wavy beige bags, 5 vibrant crimson bags.\nmuted indigo bags contain 1 plaid brown bag, 5 striped crimson bags, 5 dotted gray bags, 2 clear maroon bags.\ndrab crimson bags contain 1 dim olive bag, 4 drab maroon bags, 3 shiny indigo bags.\ndotted turquoise bags contain 1 light bronze bag.\nvibrant lime bags contain 2 dim lime bags, 5 posh green bags.\nplaid olive bags contain 4 clear black bags.\npale coral bags contain 3 faded coral bags, 1 posh black bag, 5 faded purple bags, 4 plaid white bags.\npale cyan bags contain 1 light crimson bag, 1 mirrored blue bag, 4 faded aqua bags.\nplaid salmon bags contain no other bags.\ndim teal bags contain 1 dull white bag.\nbright green bags contain 3 posh beige bags.\nstriped red bags contain 2 dotted purple bags.\nplaid silver bags contain no other bags.\npale fuchsia bags contain 4 mirrored black bags, 5 faded purple bags, 4 plaid violet bags, 3 muted maroon bags.\npale lime bags contain 2 mirrored bronze bags, 3 clear magenta bags, 4 clear silver bags, 5 plaid indigo bags.\nwavy brown bags contain 3 shiny coral bags, 2 plaid silver bags.\ndark turquoise bags contain 5 drab teal bags, 5 drab gray bags.\ndrab coral bags contain 4 shiny coral bags, 1 dull turquoise bag, 1 dotted green bag, 1 light maroon bag.\nposh blue bags contain 4 light blue bags, 2 bright black bags.\ndull lime bags contain 3 faded olive bags, 1 plaid teal bag, 1 shiny lime bag.\nmirrored olive bags contain 1 mirrored beige bag, 3 faded purple bags.\ndim salmon bags contain 5 pale yellow bags, 5 plaid teal bags, 1 posh gray bag.\nclear chartreuse bags contain 2 mirrored fuchsia bags, 5 vibrant magenta bags, 1 dark orange bag.\nvibrant lavender bags contain 5 bright fuchsia bags.\nposh olive bags contain 3 dark olive bags, 2 dotted black bags, 2 clear white bags, 5 dim orange bags.\npale tan bags contain 5 dull violet bags, 5 vibrant white bags, 2 bright indigo bags, 4 vibrant orange bags.\ndim turquoise bags contain 3 faded purple bags.\nfaded fuchsia bags contain 2 clear teal bags.\nposh gray bags contain 4 dotted purple bags, 4 dotted green bags, 5 shiny yellow bags, 1 shiny tan bag.\nposh black bags contain 4 plaid silver bags, 4 vibrant magenta bags, 2 plaid white bags, 4 striped beige bags.\nvibrant gray bags contain 3 light magenta bags.\ndotted purple bags contain 1 plaid salmon bag, 2 bright indigo bags.\nmirrored red bags contain 3 bright tan bags.\nmirrored violet bags contain 5 dark cyan bags.\nfaded plum bags contain 4 light violet bags, 3 posh brown bags, 5 dull silver bags, 5 wavy blue bags.\nstriped yellow bags contain 3 clear bronze bags.\nstriped lime bags contain 2 dark aqua bags, 1 clear lime bag, 2 drab chartreuse bags, 3 clear teal bags.\nclear green bags contain 4 drab magenta bags, 3 dim coral bags.\nbright coral bags contain 4 plaid tomato bags.\nlight black bags contain 4 faded coral bags.\nplaid plum bags contain 1 posh violet bag.\npale gold bags contain 3 clear salmon bags.\ndim tomato bags contain 3 dim indigo bags, 3 dotted turquoise bags.\nbright teal bags contain 4 pale cyan bags.\nstriped gold bags contain 1 faded turquoise bag, 1 posh indigo bag, 1 bright black bag.\npale chartreuse bags contain 1 vibrant magenta bag, 5 dull fuchsia bags, 2 bright gold bags, 4 mirrored blue bags.\nposh tan bags contain 5 light violet bags, 4 drab plum bags.\npale white bags contain 3 dim blue bags, 4 pale aqua bags, 2 vibrant plum bags.\ndark cyan bags contain 2 shiny teal bags, 3 faded purple bags, 4 shiny indigo bags, 1 striped cyan bag.\nmuted turquoise bags contain 4 wavy white bags, 2 dim black bags.\ndull orange bags contain 5 bright teal bags, 3 striped teal bags.\nlight aqua bags contain 1 dotted green bag, 4 faded lavender bags, 3 striped green bags.\nclear tan bags contain 3 dim white bags.\ndull maroon bags contain 3 shiny gold bags, 2 light gold bags, 1 dotted orange bag, 1 clear lime bag.\nmuted tan bags contain 5 dotted bronze bags, 2 shiny crimson bags.\ndotted indigo bags contain 2 drab beige bags, 5 dotted purple bags, 5 muted maroon bags.\nstriped tan bags contain 4 muted chartreuse bags.\nmirrored purple bags contain 3 muted indigo bags.\nfaded tomato bags contain 4 dull gold bags, 1 pale tan bag.\nmirrored beige bags contain 1 dark chartreuse bag, 3 dim olive bags.\npale brown bags contain 4 dull blue bags, 2 plaid tomato bags.\nlight green bags contain 3 wavy purple bags, 2 faded purple bags, 4 drab plum bags, 3 shiny yellow bags.\ndark coral bags contain 2 vibrant plum bags, 4 plaid salmon bags.\ndull bronze bags contain 1 dim cyan bag, 2 posh lavender bags, 3 mirrored beige bags.\nfaded orange bags contain 2 faded crimson bags.\nmirrored white bags contain 4 wavy crimson bags, 4 pale coral bags, 3 posh silver bags.\ndark maroon bags contain 2 posh teal bags, 4 shiny plum bags.\ndrab red bags contain 5 clear red bags, 2 posh magenta bags, 2 vibrant olive bags, 5 mirrored white bags.\nshiny green bags contain 2 mirrored beige bags, 2 wavy tomato bags, 5 striped lavender bags, 1 dim silver bag.\nwavy indigo bags contain 4 dotted white bags.\ndim violet bags contain 5 faded white bags, 3 clear salmon bags.\nstriped chartreuse bags contain 3 dim brown bags, 1 mirrored gray bag, 3 clear coral bags, 2 dull aqua bags.\nstriped gray bags contain 2 vibrant olive bags, 4 posh beige bags, 3 dull beige bags.\nplaid tomato bags contain 3 clear lime bags.\ndark black bags contain 4 pale crimson bags.\ndrab bronze bags contain 5 clear turquoise bags, 4 wavy olive bags, 3 clear purple bags, 4 faded maroon bags.\ndull green bags contain 5 pale fuchsia bags, 3 shiny coral bags, 3 wavy magenta bags.\nfaded chartreuse bags contain 2 plaid beige bags, 3 drab orange bags.\nlight red bags contain 5 striped lavender bags.\nmuted lavender bags contain 2 dark salmon bags, 1 faded indigo bag, 4 clear salmon bags.\nbright white bags contain 1 drab white bag, 3 vibrant purple bags.\nplaid magenta bags contain 5 posh coral bags, 4 plaid indigo bags, 1 plaid violet bag, 1 bright beige bag.\nfaded olive bags contain 2 wavy aqua bags.\nposh cyan bags contain 5 shiny coral bags, 5 bright indigo bags, 2 plaid silver bags.\nclear red bags contain 5 dull bronze bags, 4 shiny coral bags, 2 dotted orange bags, 1 vibrant magenta bag.\nbright bronze bags contain 4 dull blue bags.\nstriped olive bags contain 3 dim lime bags, 3 pale tan bags, 2 wavy gold bags, 5 mirrored brown bags.\nmirrored green bags contain 3 dull maroon bags, 5 faded tan bags, 5 posh tan bags.\nmuted aqua bags contain 1 bright coral bag.\ndim gold bags contain 2 dotted salmon bags.\npale yellow bags contain 2 wavy coral bags.\nbright yellow bags contain 3 striped lavender bags, 4 vibrant white bags, 3 vibrant plum bags, 1 clear purple bag.\nstriped magenta bags contain 1 plaid brown bag, 1 dull indigo bag.\nstriped maroon bags contain 2 pale chartreuse bags, 4 dim black bags, 2 muted purple bags.\nbright cyan bags contain 4 muted turquoise bags.\nposh magenta bags contain 3 light gray bags, 2 mirrored blue bags, 3 mirrored silver bags, 2 dotted purple bags.\nstriped lavender bags contain 4 bright chartreuse bags, 3 muted plum bags.\ndrab lime bags contain 4 posh beige bags, 2 dim olive bags, 4 wavy fuchsia bags, 2 shiny aqua bags.\nmirrored indigo bags contain 4 dark olive bags, 3 mirrored violet bags, 4 mirrored lime bags.\nplaid crimson bags contain 5 striped indigo bags, 2 dark plum bags, 5 dotted green bags, 3 clear salmon bags.\nbright red bags contain 1 pale maroon bag.\ndotted yellow bags contain 2 bright chartreuse bags, 1 posh black bag, 4 bright indigo bags, 1 drab blue bag.\ndrab green bags contain 5 light olive bags, 4 vibrant coral bags, 3 light magenta bags.\nshiny crimson bags contain 3 bright olive bags, 1 dotted purple bag, 2 posh cyan bags, 3 dim gray bags.\npale black bags contain 3 dull tan bags, 5 plaid beige bags, 2 dull violet bags.\nclear purple bags contain 5 muted orange bags, 3 dim gray bags, 5 dotted orange bags.\npale gray bags contain 5 plaid olive bags, 3 drab coral bags, 1 bright cyan bag.\nlight lavender bags contain 5 vibrant white bags, 1 drab plum bag, 5 faded indigo bags, 4 shiny gold bags.\ndull beige bags contain 2 dull black bags.\nclear magenta bags contain 5 posh maroon bags.\nmuted orange bags contain 2 dull violet bags, 4 striped beige bags, 1 plaid salmon bag, 3 mirrored fuchsia bags.\nwavy gold bags contain 2 drab turquoise bags.\npale purple bags contain 1 vibrant crimson bag.\ndark silver bags contain 1 dotted orange bag, 3 plaid beige bags, 5 faded white bags.\nclear lavender bags contain 2 pale violet bags, 5 clear yellow bags, 5 striped salmon bags.\nstriped salmon bags contain 4 dim crimson bags.\nshiny gold bags contain 3 vibrant orange bags, 3 plaid silver bags.\nlight coral bags contain 4 faded tomato bags, 1 dim lime bag, 1 dotted coral bag, 4 dim chartreuse bags.\nmirrored coral bags contain 2 posh purple bags, 1 dull fuchsia bag, 4 faded maroon bags, 2 plaid indigo bags.\nclear aqua bags contain 5 dim gray bags, 1 dull cyan bag, 2 dim black bags.\nclear salmon bags contain 2 posh gray bags, 5 pale maroon bags.\nmuted plum bags contain 2 shiny yellow bags, 1 plaid salmon bag, 3 shiny indigo bags, 4 clear lime bags.\nbright gold bags contain 1 dull blue bag, 2 bright indigo bags, 4 muted red bags, 4 clear maroon bags.\ndrab brown bags contain 2 dark chartreuse bags.\nplaid turquoise bags contain 4 striped red bags, 2 faded magenta bags, 1 light magenta bag.\nvibrant turquoise bags contain 2 striped yellow bags, 3 plaid fuchsia bags, 2 shiny coral bags, 1 clear yellow bag.\ndull indigo bags contain 1 drab plum bag, 4 dark fuchsia bags, 3 dotted gray bags.\nwavy aqua bags contain 4 dull tan bags, 1 shiny tan bag, 1 striped beige bag.\nmirrored plum bags contain 4 dark fuchsia bags, 5 muted white bags.\nshiny black bags contain 2 light aqua bags.\nmirrored blue bags contain 2 dim green bags, 4 vibrant white bags, 1 faded orange bag.\nplaid chartreuse bags contain 1 clear tomato bag, 4 shiny orange bags.\ndotted red bags contain 3 plaid beige bags.\nwavy red bags contain 1 striped fuchsia bag, 2 plaid brown bags, 1 shiny fuchsia bag, 2 dotted crimson bags.\nmuted violet bags contain 4 posh black bags, 5 shiny turquoise bags, 5 shiny yellow bags.\ndotted gray bags contain 5 dull violet bags, 5 dark plum bags, 2 bright indigo bags, 2 wavy bronze bags.\nfaded maroon bags contain 4 pale aqua bags, 2 clear tomato bags.\ndark gray bags contain 1 light orange bag, 1 posh brown bag.\ndull gray bags contain 5 faded violet bags, 1 dotted turquoise bag.\nmuted maroon bags contain 1 shiny tan bag, 5 light maroon bags, 2 dotted green bags.\nclear turquoise bags contain 2 clear salmon bags, 1 dark cyan bag, 1 striped green bag.\nwavy bronze bags contain no other bags.\nmuted magenta bags contain 5 striped coral bags, 4 dim lime bags, 1 posh red bag, 1 plaid blue bag.\nmirrored cyan bags contain 2 posh violet bags, 5 bright olive bags, 3 dotted green bags, 5 drab gold bags.\nwavy blue bags contain 1 dark coral bag, 1 dim olive bag, 4 dim black bags, 5 drab chartreuse bags.\nvibrant cyan bags contain 3 posh maroon bags, 5 dim beige bags, 3 dark blue bags.\ndim chartreuse bags contain 4 dull tan bags, 5 drab magenta bags.\ndark salmon bags contain 5 bright indigo bags, 4 shiny crimson bags, 3 dotted purple bags, 2 dark coral bags.\nplaid brown bags contain 2 dim olive bags.\nwavy yellow bags contain 2 drab plum bags, 3 muted orange bags, 5 pale coral bags.\nvibrant tan bags contain 5 bright bronze bags, 2 shiny lime bags.\nshiny beige bags contain 2 dull green bags.\ndrab gold bags contain 5 dotted crimson bags.\nfaded teal bags contain 5 dull tan bags, 3 dotted bronze bags, 4 bright indigo bags, 5 posh red bags.\nmirrored gray bags contain 4 muted bronze bags.\nlight fuchsia bags contain 5 pale beige bags, 1 vibrant lavender bag.\nclear indigo bags contain 1 dotted fuchsia bag, 3 dull aqua bags, 1 dark chartreuse bag.\nbright purple bags contain 4 wavy orange bags, 4 mirrored violet bags, 4 light turquoise bags.\npale green bags contain 1 light aqua bag, 3 bright yellow bags.\ndim olive bags contain 5 dotted green bags, 5 dull violet bags.\nlight bronze bags contain 1 dark aqua bag.\nvibrant chartreuse bags contain 3 dark salmon bags.\npale aqua bags contain 5 dotted purple bags, 4 dark plum bags.\nfaded black bags contain 5 mirrored fuchsia bags, 5 striped green bags.\nshiny blue bags contain 1 faded gray bag, 5 dotted indigo bags, 4 faded magenta bags.\nmuted red bags contain 1 light violet bag, 4 dim cyan bags.\nshiny yellow bags contain 2 light maroon bags, 3 wavy violet bags.\nclear bronze bags contain 1 bright indigo bag, 1 posh lavender bag, 2 dull salmon bags, 4 muted bronze bags.\nvibrant crimson bags contain 5 drab blue bags.\nshiny purple bags contain 1 shiny teal bag.`;\n\nexport const test1data = `light red bags contain 1 bright white bag, 2 muted yellow bags.\ndark orange bags contain 3 bright white bags, 4 muted yellow bags.\nbright white bags contain 1 shiny gold bag.\nmuted yellow bags contain 2 shiny gold bags, 9 faded blue bags.\nshiny gold bags contain 1 dark olive bag, 2 vibrant plum bags.\ndark olive bags contain 3 faded blue bags, 4 dotted black bags.\nvibrant plum bags contain 5 faded blue bags, 6 dotted black bags.\nfaded blue bags contain no other bags.\ndotted black bags contain no other bags.`;\n\nexport const test2data = `shiny gold bags contain 2 dark red bags.\ndark red bags contain 2 dark orange bags.\ndark orange bags contain 2 dark yellow bags.\ndark yellow bags contain 2 dark green bags.\ndark green bags contain 2 dark blue bags.\ndark blue bags contain 2 dark violet bags.\ndark violet bags contain no other bags.`;\n\nexport default data;\n","export const data = `acc +28\njmp +481\nnop +87\nacc -10\nacc +21\njmp +548\njmp +250\nacc -9\nacc +19\nacc -3\nnop +85\njmp +84\nacc +43\nacc +34\nacc -5\njmp +602\nnop +416\nacc +19\nacc +46\nacc +33\njmp +133\nacc -3\nacc +5\njmp +143\nnop -18\nacc +50\nacc +0\nacc -6\njmp +243\nacc +11\nacc -18\njmp +501\nacc +45\njmp +449\nacc +0\nacc -10\nacc +20\nnop +516\njmp +544\njmp +551\nnop +59\nnop +247\nacc -1\njmp +589\nacc +41\njmp +457\njmp +102\nacc +22\njmp +195\nacc +30\njmp -38\nacc +21\nnop -3\njmp +466\nacc +47\nacc +4\njmp +226\njmp +404\nacc -19\nacc +13\nacc +37\nacc -6\njmp +240\nnop +272\nacc +41\nacc -12\nacc +41\njmp +159\nacc +26\njmp +363\nacc +33\njmp +1\njmp +76\nacc -15\nacc -6\njmp +1\njmp +259\nnop +149\njmp +1\njmp +20\nacc +31\njmp +131\nacc +47\nacc +18\njmp +355\nacc +9\nacc +42\njmp +28\njmp +138\nacc +29\nacc +7\nnop +270\nacc +6\njmp +445\njmp +282\njmp +266\nacc +30\nnop +283\njmp +134\nacc -16\nacc +50\nacc +30\njmp +344\nacc +25\nacc +42\nacc -8\njmp +274\nacc +27\nacc +33\nacc -18\nacc +21\njmp +448\nacc -7\nnop +342\njmp -65\nacc +43\nnop +407\nnop +122\njmp +170\nacc +34\njmp +1\nacc +1\nacc +11\njmp +436\nacc -1\njmp +346\njmp +250\nacc +17\nacc +21\nnop +482\njmp -90\nacc +45\njmp +244\nacc +29\nacc +23\nnop +241\nacc +34\njmp +168\nacc +28\nacc -6\njmp +299\nnop +441\njmp +304\nnop +41\nacc +49\nacc -18\nacc +7\njmp +244\nacc +45\njmp -95\nacc -9\nacc -18\njmp +14\nacc +35\nacc +47\njmp +297\nacc +34\nacc +33\njmp +1\njmp +210\nnop +128\njmp +305\nacc +29\nacc +17\nacc +47\njmp -24\nnop -86\njmp +97\nacc -7\nacc +14\nnop +118\njmp +411\nacc +42\nacc -8\nacc -15\njmp +232\njmp +1\nacc -6\njmp +20\nacc -15\nacc +3\nacc +50\njmp +1\njmp +430\nacc -18\nacc +35\nacc +46\nacc +1\njmp +51\nacc +13\nnop +209\njmp +114\nnop +319\nacc +35\njmp +194\nacc +6\nacc +42\njmp -44\njmp +1\nnop +208\nacc -13\njmp +412\nacc -12\nnop +327\nnop -27\nacc +34\njmp +324\nacc +21\nacc +16\njmp +273\nacc -14\njmp +363\nacc +4\njmp +140\nacc +6\nacc +28\njmp +110\njmp +432\nnop -20\nacc +4\nacc +1\njmp +392\njmp -164\nacc +23\nacc +10\njmp +57\njmp +385\nacc +5\nacc +28\nacc +25\nacc +0\njmp +251\nacc -17\njmp +38\nnop -2\nacc +35\nacc -3\nacc +40\njmp +123\nacc +19\njmp +271\nacc -7\njmp +40\nacc -7\nacc +0\nacc +46\njmp -161\nacc +33\nacc +1\njmp +341\nacc -12\nacc +45\nnop -145\njmp +116\nacc +49\njmp +20\njmp -34\nacc +41\nacc +35\njmp -132\nacc +45\njmp +119\nacc +25\njmp +12\nacc +8\njmp -15\nacc +14\nacc +43\nacc +17\nacc +35\njmp -98\njmp -182\nnop +260\nnop +338\njmp +31\nacc +23\nnop -64\nacc +36\nacc +47\njmp +318\nacc +10\njmp +180\nacc +37\nacc -13\nacc -6\nnop -29\njmp -179\njmp -5\njmp +1\nacc +43\njmp -34\nnop -218\nacc -10\njmp -5\nnop +67\nacc +9\nacc +47\njmp -276\nacc +28\nnop +260\nacc +38\njmp -280\njmp +303\nacc +42\njmp -209\nacc -2\nacc +13\nacc -1\nacc +43\njmp +244\nacc -15\nacc +47\njmp +149\njmp +1\nnop +233\nacc +14\njmp -287\njmp -110\nacc -12\njmp -159\nnop -94\njmp -188\nnop +20\njmp +53\nnop -64\njmp -296\nacc +20\njmp +134\nacc +8\njmp +47\nacc -15\njmp -37\nacc -14\nacc -15\njmp +163\nnop -22\nacc -3\njmp -210\nacc +37\nacc -11\nnop +179\njmp -193\nacc +27\njmp +81\nacc +46\nacc +21\njmp +93\nacc -9\nnop -131\nnop -177\njmp -173\nacc -19\njmp +55\nnop +16\nacc +45\nacc +10\njmp +83\nacc +15\nacc +17\nacc +28\njmp -121\nnop -19\nacc +47\njmp +184\nacc +45\nacc +15\nacc +6\nacc -3\njmp +164\nacc +1\nacc +30\nnop +226\nacc +20\njmp -339\nnop +223\njmp +266\nacc +0\njmp -253\nacc -8\njmp -26\nnop -326\nnop -106\njmp +73\nacc +2\nacc -7\nacc +4\nacc -1\njmp -61\njmp +186\nacc -14\njmp +221\nnop +111\nacc -7\nacc +46\njmp -345\nacc +2\nnop -212\nacc +23\njmp -159\nnop -258\nacc +3\nacc +40\njmp -142\nacc +49\nacc +27\nacc +45\njmp -214\nacc +1\nacc +5\nacc +23\nacc -7\njmp +119\nnop +201\nnop -215\nnop -197\njmp +115\nacc -9\nacc +38\njmp -211\nacc +40\nacc -1\nacc +16\nacc +35\njmp -70\nacc -18\nacc -10\njmp +93\nacc +14\nnop -216\nacc -12\nnop -223\njmp -342\nacc -19\nacc +43\nacc -6\nacc +11\njmp -106\nacc +2\njmp +73\nacc +48\nacc +20\nacc +18\nacc +44\njmp +162\nacc -7\njmp -202\nacc -2\nacc +34\nacc -17\njmp -443\nacc +40\njmp -129\njmp -181\nacc +30\njmp -400\nacc +42\nnop -185\nacc +34\nacc -5\njmp -275\njmp -406\nacc -16\njmp -270\nacc -4\nacc +40\njmp -299\nacc -7\njmp -76\nacc +10\nacc +11\njmp -4\nacc +0\nacc +33\nacc -8\nacc +8\njmp +166\nnop +62\njmp +1\nnop +13\njmp +23\njmp -167\njmp -469\nacc +32\nnop -403\nacc +7\nacc -3\njmp -345\nacc -9\nacc -2\nacc +48\njmp +57\nacc +9\nacc +3\nnop -32\nacc +25\njmp -177\njmp -369\nnop -167\nacc -9\njmp -453\nacc -6\njmp -360\nacc +11\nnop -457\nacc +50\nnop +121\njmp -231\nnop -83\nacc -4\nnop -253\njmp +28\nacc +29\nacc +0\njmp -11\nnop -373\nacc -19\nacc +26\nacc +0\njmp -7\njmp +71\nacc +18\nacc +50\njmp -234\nnop -399\nacc -7\nacc +32\njmp -294\nnop -481\nacc +8\njmp -113\njmp -183\njmp -333\nacc -7\nacc +10\nacc +31\njmp -501\nnop +75\njmp -219\nacc +2\nacc +43\nacc +19\nacc -2\njmp -443\nacc +16\nacc +6\nacc +40\njmp -461\njmp +79\nacc +32\nacc +20\nacc -7\nnop -71\njmp -498\njmp -231\nacc +37\nnop -526\nacc +38\nacc +41\njmp -509\nacc +26\nacc +45\nacc +33\nacc +37\njmp -410\nnop -289\nacc +46\nacc +39\njmp -44\njmp -169\njmp +1\nacc +33\njmp +1\nacc +39\njmp -446\nacc -9\nnop -187\nacc +41\njmp -444\nacc +20\nacc +9\nnop -500\njmp -43\nacc +23\nacc +28\nacc +35\njmp -94\nacc +47\nnop -514\nacc +38\njmp -577\nnop -31\nnop -348\nacc -18\njmp -202\nnop -162\nnop -373\njmp +45\nacc +45\nacc -16\nacc -15\njmp -532\nacc +29\nacc -14\nacc -11\njmp -509\njmp -279\nacc -18\nacc +42\nacc +12\njmp +1\njmp -450\njmp -88\njmp -505\nacc +0\njmp -397\nnop -438\njmp -86\nacc +14\nacc +27\nnop -66\nnop -278\njmp -548\nacc +19\nnop -305\nnop -440\njmp -441\nacc +35\nacc +36\nacc +45\njmp -505\nacc -8\njmp -313\nnop -517\nacc +38\nacc +12\nnop -511\njmp -354\nacc +29\nacc -7\nacc +29\njmp -201\nacc -2\nacc -3\njmp -75\nacc +24\nacc -2\njmp +1\nacc +19\njmp -58\nnop -432\nacc +1\nacc +33\nacc +1\njmp +1`;\n\nexport const test1data = `nop +0\nacc +1\njmp +4\nacc +3\njmp -3\nacc -99\nacc +1\njmp -4\nacc +6`;\n\nexport default data;\n","type Opcode = typeof Opcodes[number];\nconst Opcodes = [\"nop\", \"acc\", \"jmp\"] as const;\n\nexport type Instruction = {\n  opcode: Opcode;\n  value: number;\n};\n\nconst MakeInstruction = (opcode: string, value: string) => {\n  if (Opcodes.includes(opcode as Opcode)) {\n    return { opcode: opcode as Opcode, value: Number(value) };\n  }\n  throw new Error(`${opcode} is an invalid opcode.`);\n};\n\nclass Handheld {\n  InstSet: Record<Opcode, (value: number) => void> = {\n    nop: (value) => {},\n    acc: (value) => {\n      this.ax += value;\n    },\n    jmp: (value) => {\n      this.pc += value - 1 || 0;\n    },\n  };\n\n  mem: Instruction[];\n  pc = 0;\n  ax = 0;\n\n  constructor(rom: Instruction[]) {\n    this.mem = rom;\n  }\n\n  step = () => {\n    const inst = this.mem[this.pc];\n    this.pc += 1;\n    this.exec(inst);\n  };\n\n  static parseImage = (image: string): Instruction[] => {\n    return image.split(\"\\n\").map((line) => {\n      const [opcode, value] = line.split(\" \");\n      return MakeInstruction(opcode, value);\n    });\n  };\n\n  exec = (inst: Instruction) => {\n    const cmd = this.InstSet[inst.opcode];\n    cmd(inst.value);\n  };\n\n  runUntilHalt = (): boolean => {\n    const trace = new Array<number>(this.mem.length).fill(0);\n    while (trace[this.pc] < 1) {\n      trace[this.pc] += 1;\n      this.step();\n      if (this.pc === this.mem.length) {\n        return true;\n      }\n    }\n    return false;\n  };\n}\n\nexport default Handheld;\n","import { Day } from \"util/Day\";\nimport day8data, { test1data } from \"./data/day08\";\nimport Handheld, { Instruction } from \"./handheld\";\n\nconst makeData = (data: string) => {\n  return Handheld.parseImage(data);\n};\n\nconst findHaltingValue = (data: Instruction[]) => {\n  const h = new Handheld(data);\n  h.runUntilHalt();\n  return h.ax;\n};\n\nconst debugProgram = (data: Instruction[]) => {\n  const noopSlots = Array<number>();\n  const jmpSlots = Array<number>();\n\n  data.forEach((instr, index) => {\n    if (instr.opcode === \"nop\") noopSlots.push(index);\n    if (instr.opcode === \"jmp\") jmpSlots.push(index);\n  });\n\n  while (true) {\n    const dataCandidate = JSON.parse(JSON.stringify(data)) as Instruction[];\n\n    const changeIds = noopSlots.length > 0 ? noopSlots : jmpSlots;\n    if (changeIds.length === 0) throw new Error(\"ran out of instructions!\");\n    const instPtr = changeIds[0];\n    changeIds.splice(0, 1);\n\n    if (dataCandidate[instPtr].opcode === \"nop\") {\n      dataCandidate[instPtr].opcode = \"jmp\";\n    } else {\n      dataCandidate[instPtr].opcode = \"nop\";\n    }\n\n    const h = new Handheld(dataCandidate);\n    const result = h.runUntilHalt();\n    if (result) return h.ax;\n  }\n};\n\nconst day8: Day<Instruction[]> = {\n  title: \"Handheld Halting\",\n  description: `\n  While you consider checking the in-flight menu for one of those drinks \n  that come with a little umbrella, you are interrupted by the kid sitting \n  next to you. Their handheld game console won't turn on!\n`,\n  data: day8data,\n  dataConv: makeData,\n  parts: [\n    {\n      title: \"Part 1\",\n      description: `\n* Find the value in the accumulator when the console goes into an endless loop\n`,\n      func: (image) => findHaltingValue(image),\n      tests: [{ data: test1data, result: 5 }],\n    },\n    {\n      title: \"Part 2\",\n      description: `\n* Fix the program so that it terminates normally\n* Change exactly one jmp (to nop) or nop (to jmp)\n`,\n      func: (image) => debugProgram(image),\n      tests: [{ data: test1data, result: 8 }],\n    },\n  ],\n};\n\nexport default day8;\n","const data = `30\n16\n33\n40\n41\n25\n2\n29\n37\n4\n11\n1\n42\n10\n21\n13\n48\n28\n19\n5\n46\n49\n24\n8\n34\n3\n6\n30\n7\n22\n9\n12\n14\n15\n16\n27\n4\n11\n60\n10\n17\n56\n13\n18\n19\n20\n21\n23\n29\n24\n25\n39\n47\n71\n34\n22\n26\n28\n30\n14\n15\n27\n31\n32\n35\n38\n37\n48\n33\n36\n40\n64\n41\n66\n49\n42\n58\n45\n83\n29\n75\n60\n44\n51\n53\n46\n68\n69\n70\n62\n113\n65\n71\n76\n95\n73\n74\n78\n139\n86\n106\n80\n82\n89\n119\n112\n90\n133\n159\n99\n127\n140\n147\n169\n135\n136\n212\n144\n149\n160\n208\n188\n222\n162\n166\n170\n179\n181\n292\n189\n268\n358\n226\n393\n243\n284\n271\n337\n302\n332\n280\n304\n293\n309\n322\n328\n336\n341\n349\n345\n415\n471\n370\n711\n432\n469\n762\n497\n514\n523\n608\n573\n582\n584\n589\n597\n602\n615\n658\n650\n669\n677\n719\n863\n954\n1179\n802\n1369\n1890\n1344\n1216\n1239\n1308\n1037\n1181\n1756\n1266\n1569\n1173\n1186\n1604\n1612\n1695\n1319\n1327\n1623\n1396\n1521\n1665\n1839\n2547\n2041\n2210\n2253\n2420\n2835\n2218\n2356\n2364\n2359\n2965\n2868\n2492\n3733\n3537\n2646\n2984\n4765\n2715\n2723\n5343\n2917\n3186\n3918\n3880\n4251\n4405\n4428\n5481\n4720\n7455\n4715\n5591\n4856\n8833\n5138\n5207\n5901\n9128\n7699\n5361\n5909\n5632\n7128\n5640\n11046\n8278\n7066\n8131\n13600\n8966\n9120\n9143\n20012\n14179\n15902\n13681\n9994\n10063\n10345\n26247\n15052\n10993\n11001\n11270\n11272\n11541\n16209\n12706\n13771\n15197\n15344\n26885\n17097\n21604\n21615\n18263\n21333\n20987\n20057\n27091\n20339\n23051\n20408\n21338\n21994\n43982\n22263\n22271\n39591\n25043\n25312\n35401\n44389\n28968\n35605\n32441\n35360\n37154\n56739\n42320\n38320\n40465\n42679\n40396\n43601\n42402\n42671\n41746\n57631\n57484\n60917\n44534\n47314\n78785\n114145\n54280\n69364\n100155\n61409\n80640\n95059\n92991\n75474\n82211\n78716\n80066\n80861\n82142\n82798\n96951\n84148\n84417\n122326\n115197\n91848\n125395\n98814\n101594\n173844\n145557\n115689\n140125\n156335\n142049\n154190\n155540\n214174\n158272\n166946\n158782\n162208\n181612\n198487\n167215\n183231\n238607\n186011\n190662\n214503\n207537\n200408\n302333\n241719\n257738\n346997\n408934\n352957\n356759\n300321\n350177\n313812\n558059\n317054\n320990\n369745\n393548\n348827\n557167\n440969\n619387\n376673\n908236\n514220\n502741\n617375\n499457\n542040\n983009\n604735\n614133\n671167\n649148\n621311\n763293\n630866\n998283\n697663\n638044\n878157\n742375\n940426\n1152264\n1041497\n943710\n1013677\n1148605\n1130323\n1002198\n1044781\n1104192\n1113590\n1146775\n1320315\n1259355\n1633064\n1252177\n1287192\n1268910\n1335707\n1328529\n1380419\n1581754\n1516201\n1620532\n1686085\n2411619\n2057300\n2576774\n1945908\n2015875\n3462109\n2106390\n2158371\n2425200\n2217782\n2372945\n2595062\n2528265\n2511532\n3631993\n2521087\n3486809\n2597439\n2664236\n4457440\n4003208\n3639054\n6059548\n5252525\n4613314\n4578387\n5544109\n5887309\n4233657\n6143525\n4583571\n4264761\n4738869\n4590727\n5261675\n4884477\n5032619\n5039797\n6153080\n6897893\n10882394\n6084248\n6236493\n10820064\n7903815\n7642262\n7872711\n8498418\n8812044\n8817228\n8972526\n8824384\n8848332\n8855488\n9630524\n9003630\n12526739\n9623346\n11116867\n10294294\n9917096\n16907445\n14012323\n13726510\n12320741\n14582666\n15546077\n13878755\n15514973\n15776526\n18889622\n22157263\n17315646\n17784570\n18626976\n17672716\n17703820\n17851962\n14144619\n19253870\n29655281\n19540442\n19917640\n23929419\n24499762\n26047251\n33628488\n36926586\n26465360\n26199496\n28023374\n29393728\n29921145\n29659592\n36330796\n31460265\n31817335\n35636532\n31848439\n31996581\n33398489\n33685061\n56844226\n34062259\n38794312\n48429181\n44417402\n50965122\n49976670\n56496343\n52246747\n52664856\n54222870\n56120641\n55593224\n63277600\n59053320\n63058081\n68148131\n63308704\n69321593\n107475483\n63845020\n65395070\n67460748\n67083550\n111706781\n72856571\n78479661\n87223493\n92846583\n111500952\n100941792\n124644474\n104911603\n117500470\n106887726\n109816094\n217291577\n136165275\n184961218\n122898340\n152618563\n127153724\n174559033\n166336862\n184563352\n129240090\n239193433\n134544298\n151336232\n179421453\n165703154\n171326244\n180070076\n197758186\n205853395\n207829518\n302502137\n263318999\n232714434\n216703820\n388030064\n259063615\n285880530\n470443882\n250052064\n263784388\n404896587\n437216762\n280576322\n294943244\n300247452\n305870542\n337029398\n604733884\n345124607\n486429717\n351396320\n377828262\n456821801\n625700929\n424533338\n449418254\n466755884\n475767435\n1092456813\n509115679\n789692001\n657266862\n544995308\n513836452\n714857660\n631972642\n575519566\n580823774\n595190696\n637276850\n932220094\n786447652\n696520927\n953185601\n1067253491\n729224582\n970658253\n942523319\n900300773\n873951592\n975871563\n980592336\n1141088321\n1022952131\n1243061034\n1058831760\n1218100624\n1310048356\n1212796416\n1844609845\n1277344701\n1156343340\n1176014470\n1232467546\n1333797777\n1425745509\n1639044246\n1603176174\n1752176713\n1671747901\n1629525355\n1774252365\n1896903723\n2703090210\n2448697640\n1956463899\n2003544467\n2081783891\n2215175100\n2234846230\n2551898401\n2445263962\n2332357810\n3727912871\n3000953185\n2433688041\n2388810886\n2658213055\n2566265323\n2936973951\n3028921683\n3232701529\n4345601363\n3381702068\n4106610175\n4131749953\n4414141701\n4316630121\n3960008366\n4038247790\n4085328358\n4218719567\n4781440423\n6029874868\n4801111553\n7782393608\n7367376876\n5417732569\n7086281543\n4999953364\n4822498927\n4955076209\n13116156411\n7114250041\n7022302309\n6261623212\n8452389491\n7341710434\n7419949858\n7998256156\n9414095065\n8401958479\n8045336724\n8123576148\n8839359343\n8304047925\n9218672931\n9582551976\n9623610480\n16709892023\n12782346972\n12114203405\n14578686689\n15872339349\n9777575136\n11084122139\n11216699421\n19486080618\n17241317822\n13283925521\n13603333646\n30313225669\n14761660292\n17620631410\n16168912872\n16884696067\n16349384649\n25568057580\n20666674115\n17143407268\n26292443999\n18801224907\n19206162456\n19401185616\n20861697275\n20994274557\n36349569724\n22300821560\n23061500657\n24539235428\n24368047660\n30702780039\n29772246518\n32382291702\n28045585813\n33970016059\n30930573164\n31111044941\n32518297521\n33053608939\n41660948672\n40262882891\n35944632175\n36544592884\n38005104543\n43162518835\n38007387363\n43923197932\n47600736085\n41855971832\n43295096117\n45362322217\n46668869220\n48907283088\n70523402064\n52413633473\n57817832331\n58976158977\n63984182103\n59156630754\n62041618105\n73316491830\n85451875972\n76012491906\n89170165979\n73949736718\n105964816037\n149962228624\n74549697427\n79861076375\n79863359195\n81930585295\n85151067949\n88524841052\n239132394603\n92031191437\n122960341080\n110948901193\n101320916561\n119859450436\n137865509445\n121017777082\n159100804667\n180514513464\n121198248859\n135358109935\n260825850525\n177333408467\n148499434145\n307600238812\n195747946286\n154410773802\n154413056622\n300293749547\n313513861289\n161793944490\n268358884581\n467926917911\n250318785542\n193352107998\n202980092630\n350161002908\n380313501097\n221180366997\n240877227518\n242216025941\n256375887017\n415476691684\n373866621462\n256556358794\n316204718292\n445692293048\n537385085289\n302912490767\n410969415416\n355146052488\n543789718285\n443670893540\n364774037120\n382974311487\n913619210959\n601493868094\n396332200628\n414532474995\n819558914510\n585954404117\n462057594515\n497253114535\n463396392938\n658058543255\n702248651842\n905728488055\n559468849561\n572761077086\n611702411282\n619117209059\n667686527887\n685886802254\n699244691395\n719920089608\n738120363975\n747748348607\n761106237748\n779306512115\n880227426022\n858389795143\n955801050189\n810864675623\n1033649684054\n1056721964096\n925453987453\n1178586058620\n1075098804220\n1149283195192\n1132229926647\n1171171260843\n1184463488368\n1286803736946\n1191878286145\n1230819620341\n1305004011313\n1353573330141\n1433635150861\n1619496032891\n1540412749863\n1558613024230\n1508854586355\n1590171187738\n1637696307258\n3023806338599\n1943094602270\n1982035936466\n2476175272156\n2380102815533\n1982175951549\n2000552791673\n2310815985267\n3610922435874\n2281513121839\n2303401187490\n2457974997789\n2422697906486\n4285437123956\n4964495766015\n2535823631654\n2658577341454\n2787208481002\n2942489737216\n4282065913512\n3619732243724\n3148784211968\n3099025774093\n4839224819144\n3619872258807\n4292991936816\n3925130538736\n3964211888015\n4661615937372\n3982728743222\n4817336753493\n4303953979163\n4584914309329\n4704211028325\n8210567662692\n4726099093976\n6091273949184\n4958521538140\n5194400973108\n5601067078670\n5323032112656\n8942764356380\n13246718335543\n6562221980940\n10559588616810\n8437209012300\n6247809986061\n6718898032900\n8651229632712\n9779315282437\n14083269261600\n8922733426155\n7946940631237\n8286682722385\n18065998004822\n8888868288492\n11570842098717\n9289125337654\n12914778691017\n14523800504825\n9684620632116\n10152922511248\n18177993626146\n10517433085764\n13974261745368\n11885254093596\n26889040436385\n13281120013840\n14509162612177\n32149267266422\n18954642098064\n40972309697985\n14665838664137\n16233623353622\n17631561263353\n16835808919729\n22402687179360\n32140723875530\n17175551010877\n18573488920608\n19041790799740\n18973745969770\n19442047848902\n19837543143364\n32155361768178\n20202053717880\n34807112274230\n33620480762201\n44025977969126\n26394416705773\n25166374107436\n31344971531906\n27790282626017\n29175001276314\n30899462017759\n44023905979639\n31501647583866\n33639584633907\n38811289113134\n34011359930606\n48520522542783\n35749039931485\n65141232217773\n36149296980647\n37547234890378\n46764028595787\n38415793818672\n69192352076562\n83327634817013\n55569417982087\n55009165992110\n63941651596151\n52956656733453\n51560790813209\n54184699331790\n54341375383750\n62244433549665`;\n\nexport const test1data = `35\n20\n15\n25\n47\n40\n62\n55\n65\n95\n102\n117\n150\n182\n127\n219\n299\n277\n309\n576`;\n\nexport default data;\n","import { findTwo } from \"util/collections\";\nimport { Day } from \"util/Day\";\nimport day9data, { test1data } from \"./data/day09\";\n\nconst makeData = (data: string) => {\n  return data.split(\"\\n\").map((row) => Number(row));\n};\n\nconst findWeakNumber = (numbers: number[], preamble: number): number => {\n  const weak = numbers.slice(preamble + 1).find((n, index) => {\n    const slice = numbers.slice(index);\n    return findTwo(slice, n) === -1;\n  });\n\n  return weak || -1;\n};\n\nconst findSumsTo = (numbers: number[], target: number) => {\n  let start = 0;\n  let end = 1;\n  while (true) {\n    const slice = numbers.slice(start, end);\n    const num = slice.reduce((acc, val) => acc + val);\n    if (num === target) {\n      return Math.min(...slice) + Math.max(...slice);\n    }\n    if (num < target) {\n      end += 1;\n    }\n    if (num > target) {\n      start += 1;\n    }\n    if (start === numbers.length || end === numbers.length) {\n      throw new Error(\"Ran out of numbers!\");\n    }\n  }\n};\n\nconst findWeakRange = (numbers: number[], preamble: number): number => {\n  const weak = findWeakNumber(numbers, preamble);\n\n  return findSumsTo(numbers, weak);\n};\n\nconst day9: Day<number[]> = {\n  title: \"Encoding Error\",\n  description: `\n  With your neighbor happily enjoying their video game, you turn your attention to \n  an open data port on the little screen in the seat in front of you.\n`,\n  data: day9data,\n  dataConv: makeData,\n  parts: [\n    {\n      title: \"Part 1\",\n      description: `\n* Find the first number in the list (after the preamble) which is not the sum of two of the 25 numbers before it\n`,\n      func: (data) => findWeakNumber(data, 25),\n      tests: [\n        {\n          data: test1data,\n          func: (data) => findWeakNumber(data as number[], 5),\n          result: 127,\n        },\n      ],\n    },\n    {\n      title: \"Part 2\",\n      description: `\n* find a contiguous set of at least two numbers in your list which sum to the invalid number from step 1\n`,\n      func: (data) => findWeakRange(data, 25),\n      tests: [\n        {\n          data: test1data,\n          func: (data) => findWeakRange(data as number[], 5),\n          result: 15 + 47,\n        },\n      ],\n    },\n  ],\n};\n\nexport default day9;\n","const data = `30\n73\n84\n136\n132\n117\n65\n161\n49\n68\n139\n46\n21\n127\n109\n153\n163\n160\n18\n22\n131\n146\n62\n113\n172\n150\n171\n98\n93\n130\n170\n59\n1\n110\n2\n55\n37\n44\n148\n102\n40\n28\n35\n43\n56\n169\n33\n5\n141\n83\n15\n105\n142\n36\n116\n11\n45\n82\n10\n17\n159\n140\n12\n108\n29\n72\n121\n52\n91\n166\n88\n97\n118\n99\n124\n149\n16\n9\n143\n104\n57\n79\n123\n58\n96\n24\n162\n23\n92\n69\n147\n156\n25\n133\n34\n8\n85\n76\n103\n122`;\n\nexport const test1dataA = `16\n10\n15\n5\n1\n11\n7\n19\n6\n12\n4`;\n\nexport const test1dataB = `28\n33\n18\n42\n31\n14\n46\n20\n48\n47\n24\n23\n49\n45\n19\n38\n39\n11\n1\n32\n25\n35\n8\n17\n7\n9\n4\n2\n34\n10\n3`;\n\nexport default data;\n","import { Day } from \"util/Day\";\nimport day10data, { test1dataA, test1dataB } from \"./data/day10\";\n\nconst makeData = (data: string) => {\n  return data.split(\"\\n\").map((row) => Number(row));\n};\n\nconst findDeviceRating = (data: number[]): number => {\n  const sorted = data.sort((a, b) => a - b);\n  const diffs = sorted.map((val, index, arr) => {\n    return val - (index > 0 ? arr[index - 1] : 0);\n  });\n\n  diffs.push(3);\n\n  return (\n    diffs.filter((diff) => diff === 1).length *\n    diffs.filter((diff) => diff === 3).length\n  );\n};\n\nconst isValid = (data: number[]) => {\n  return (\n    data.find(\n      (val, index, arr) => (index > 0 ? val - arr[index - 1] : 0) > 3\n    ) === undefined\n  );\n};\n\nconst findOptionalIndices = (data: number[]) => {\n  return data.filter((val, index, arr) => {\n    if (index > 0 && index < data.length - 1) {\n      return val - arr[index - 1] === 1 && arr[index + 1] - val === 1;\n    }\n    return false;\n  });\n};\n\nconst getDiffs = (data: number[]): number[] => {\n  return data.map((val, index, arr) => {\n    return val - (index > 0 ? arr[index - 1] : 0);\n  });\n};\n\nconst findPermutations = (data: number[]): number => {\n  const sorted = data.sort((a, b) => a - b);\n  const optionals = findOptionalIndices(sorted);\n\n  const upperBound = 2 ** optionals.length;\n\n  const diffs = getDiffs(sorted);\n\n  diffs.push(3);\n\n  return (\n    diffs.filter((diff) => diff === 1).length *\n    diffs.filter((diff) => diff === 3).length\n  );\n};\n\nconst day10: Day<number[]> = {\n  title: \"Adapter Array\",\n  description: `\n  You discover weather forecasts of a massive tropical storm. Before you can figure \n  out whether it will impact your vacation plans, your device suddenly turns off!\n\n  Its battery is dead.\n`,\n  data: day10data,\n  dataConv: makeData,\n  parts: [\n    {\n      title: \"Part 1\",\n      description: `\n* The charging outlet near your seat produces the wrong number of jolts\n* Each of your joltage adapters is rated for a specific output joltage\n* Any given adapter can take an input 1-3 jolts lower than its rating\n* your device has a built-in joltage adapter rated for 3 jolts higher than the highest-rated adapter in your bag\n* What is the number of 1-jolt differences multiplied by the number of 3-jolt differences?\n`,\n      func: (data) => findDeviceRating(data),\n      tests: [\n        {\n          data: test1dataA,\n          result: 7 * 5,\n        },\n        {\n          data: test1dataB,\n          result: 22 * 10,\n        },\n      ],\n    },\n    {\n      title: \"Part 2\",\n      description: `\n* Count the ways you can arrange the adapters\n`,\n      func: (data) => findPermutations(data),\n      tests: [\n        {\n          data: test1dataA,\n          result: 8,\n        },\n        {\n          data: test1dataB,\n          result: 19208,\n        },\n      ],\n    },\n  ],\n};\n\nexport default day10;\n","const data = `LLLLLLLLLLLL.LLLLLLLLLL.LLLL.LLLL.LLLLLLLLLLL.LLLL.LLLLLLL.LL.LLLLLLLL.LLL.LLLLLLLLLLL.LLLLLLL\nLLLLLLLLLLL.LLLL.L..LLL.LL.LLLLLLLLLLL.LLLLLL.LLLLLLLL.L.LLLLL.LLLLLL..LLL.LLLLLLLLLLLLLLLLLLL\nLLLLLL.LLLL.LLLL.L.LLLL.LLL.LLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLL..LLLLLLLLLLLLLLLLLLLLLLLLLLL.LLL\nLLLLLLLLLLL.LL.LL..LLLL.LLLL.L.LLLLLLL.LLLLLL.LLLLLLLLLLLLLLL.LLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLL\nLLLL.L.L.L..LLLLLLLLLL..LLL..LLLL.LLLL.LLLLLLLL.LLLLLL.LLLLLL.LLLLLLLLLLLLLLL.L.LLLLLLLLLLLLLL\nLLLLLL.LLLL.LLLLLL.LLLL.LLLL.LL.LLLLLL.LLLLLLLLLLLLLLL.LLLLLL.LLLLLLLL.LLL.LLLL.LLLLLLL.LLLLLL\n.L.L....LL......LL..LL.....LLLLL.......L....LL......L.L..L..L..L.L.LL.....LL.......L.L....L..L\nLLLLLL.LLLL.LLLLLL.LLLL.LLLLLLLLLLLLLL.LLLLLL.LLLLLLLL.LLLL.L.LLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLL\nLLLLLL..LLL.LLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLL..LLLLLLL.LLLLLL.LLLLLLLL.LLLLLLLLLLLLLLL.LL.LLLL\nLLLLLL.LLLL.LLLLLL.L.LL.LLLL.LLLLLLLLL.LLLLLLLLLLLL.LL.LLLLLLLLLL..LLLLLL.LLLLLLLLLLLLLLLLLLLL\nLL..LL.LLLL.LLLLLL.LLLLLL.LL.LLLLL.LLLLLLLLLL.LLLLLLLLLLLLLLL.LL.LLLLL.LLLLLLLLLLLLLLLLLLLLLLL\nL......LLLLL.L....LL...L..........L..L...L.......LL.L.L.L........L......L..L...L...LL.LL...LL.\nLLLLLL.L.LL.LLLLLL.LLLLLLLLL.LLLLLLLLLLLLLLLL.LLLLLLLL.LLLLLL..LLL.LLL.LLLLLLLLLLLLLLLLLLL.LLL\n.LLL.L.LLLL.L.LLLLL.LLL.LLLL.LLLLLLL.LLLLLLLL.LLLLLLLLLL.LLLL.LLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLL\nLLLLLL.LLLLLLLLL.LLLLLL.LLLLLLLLLLLLLL.LL.LLL.LLLL.LLL.LLLLLL..LLL.LLL.LL.LLL.L..L.LLLL.LLLLLL\nLLLLLL.LLLL.LLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLL.LL\nLLLLLL.LLLLLLLLLLLLLLLLLLLLL.LLLLLLLLL..LLLLL.LL.LLLLL.LLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLL\nLLLLLL.LLLL.LLLLLL.LLLLLLLLL.LLLLLLLLL.LLLLLL.LLL.L.LL.LLLLLL..LLLLLLL.LLLLLLLL.LLLLLLLLLLLLLL\nLLLLL..LL.L.LLLLLL.LLLL.LLLL.LLLLLLLLL.LLLLLLLLLLLLLLL.LLL.LL.LLLLLLLL.LLLLLLLLLLLLLLLLLL.LLLL\nLLLLLL.LLLL.LLLLLL.LLLL.LLLL.LLLLLLLLL.LLLLLL.LLLLLLLL.LLLL.LLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLL\n.LL.......L.LL.L.L.........L..L...L..LL..L.....LL...LLLL.......L.........L.L..L...L.LL.LL...L.\nLLLLLL.LLLLLLLLLL..LLLLLLLLL.LLLLLLLLL.LL.LLLLLLLLL.LL.LLLLLLL.LLLLLLL.LLLLLLLL.LLLLLLLLLLLLLL\nLLL.LL.LLL..LLLLLL.LLLLLLLLL.LLLLLLLLL.LL.LLL.LLLLLLLL.LLLLLL.LLLLLLLL.LL.LLLLL.LLLLLLLLLLLLLL\nLLLLLL.LLLLLLLLLLL.LLLL.LLLLLLLLLLLLLL..LLL.L.LLLLLLLL.LLLLLLLLLLLLLLL.L...LLLL.LLLLLLLLLL.LLL\nLLLLLLLLLLLLLLLLLL.LLLL..L.L.LLLLL.LL..LLLLLL.LLLLLLLL.LLLLLL.LLLLLLLLLLLLLLLLL.LLLLLLL.LLLLLL\nLLLLLLLLLLL.LLLLLLL.LLLLLLLL.LLLLLLLLL.LLL.LL.LLLL.LLL.LLLLLL.LLLLLLL..LLLLLLLLLLLLLLLLLL.LLLL\nLLLLLLLLLLL.LLLLLL.LLLLLLLLL.L.LLLLLLLLL.LLLL.LLLLLLL..LLLLLLLLLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLL\nLLLLLLLLL.L.LLLLLLLLLLLLLLLL.LL.LLL.LL.L.LLLL.LLLLLLLLL.LLLLLLLLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLL\nLLLLLL.LLLL.LLLLLLLLL.L.LLLL.LLLLLLLLL.LLLLLL.LLLLLLLL.LLLLLL.LLLLLLLL.LLLLLLL.LLLLLLLLLLLLLLL\nLLLLLL.L.LL.LLLLLL.LLLLLLLLL.LLLLLLLLL.LLLLLL..LLLLLLL.LL.LLL.LLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLL\n.L........LL..L..LLL.LL.LL..L.....L..L........LL.LL.L..L.L..LL.L......L..L.L..L.L...L..L....L.\nLLLLLL.LLL.LLLL.LLLLLLL.LLL.L.LL.LLLLL.LLLLLLLLLLLLLLL.LLLLLL.LLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLL\nLLLL.LLLLL.LLLLLLL.LLLL.LLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLL.LLLLLLL.LLLLLL\nLLLLLL..LLLLLLLLLL.LLLLLLLLL.L.LLLLLLL.LLLLLLLLLLLLLLL.LLLLLLLLL.LLLLL...LLL.LLLLLLLLLLLLLLLLL\nLLLLLLLLLLLLLLLLLL.LLLL.LLLL.LLLLLLLLLL.LLLL..LLLLLLLL.LLLLLLLLLLLLLLL.L.LLLLLL.LLLLLLLLLLLLLL\nLLLLLLLLLLL.LLLLLLLLLLL.L.LL.LLLLLLLLL.LLLLLL.LLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLL\nLLLLLLLLLL..LLLLLL.LLLL.LLLLLLLLLLLLLL.LL.LLL.LL.LLLLL.LLLLLL.LLLLLLLLL.LLLLLLL.LLLLLLL.LLLLLL\nLLL.LL.LLLLLLLL.LL.LLLL.LLLL.L.LLLLLLLLLLLLLL.LLLLLLLL.L.LLLL.LLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLL\n....LL.....L..L.L..L.....LLL....LL.LL.L............L..LL.....LL..LL..L....L..L.L.L........LL..\nLLLLLL.LLLL.LLLLLL.LLLLL.LLL.LLLLLLLLL.LLLLLL.LLLLLLLL.LLLLLL.LLLLLLLL.L.LLLLLL.LLLLLLLLLLLLLL\nLLLLLL.LLLL.LLL.LLLLLLL.LLLLLLLLLLL.LL.LLLLLL.LLL.LLLLLLLLLLL.LLLLLLLL.LLLL.LLLLLLLLLLLLL.LLLL\nLLLL.LLLLLLLLLLL.L..LLLLLLLLLLLL.LLLLL.LLLLLL.LLLLLLLL.LLLLLL.LLLL.LL..LLLLLLLL.LLLLLLLLLLL.LL\nLLLLLL.LLLLLLLLLLL.LLLL.LLLL.LLLLLLLL..LLLLL..LLLLLLLLLL.LLL.LLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLL\nLLLLLL.LLLL.LLLLLL.LLLLLLLLLLLLLLLL..L.LL.LLL.LLLLLLL.LLLLLLLL.LLLLLLL.LLL.LLLLLLLLLLLLLLLLLLL\nLLLLLL.LLLL.L.LLLL.LLLLLLL.L.LLLL.LLLLLLL.LL..LLLLLLLL.LLLLLL.LLL.LLLL.LL..LLLL.LLLLLLLLLLL.LL\nLLLLLL.LLLL.LLLLLL.LLLLLLL.L.L.LLLLL.L.LLLLLLLLLLLLLLLLLLLLLL.LLLLLL.L.LL.LLLLL.LLLL.LLLLLLLLL\n.LLL....L.LLLL..L.LL.......LL.L...LL.L...LL....L..L..L..LLLL....L....L..L...L....L...L.LL.....\nLLLLLL.LLLL.LLLLLL.LLLLLLLLLLLLL.LLLLL..LLLLL.LLLLLL.LLLLLLLLLL.LLLLLLLLLLLLLLLLLL.LLLLLLLLLLL\nLLLLL..LLLLLLLLLLL.LLLL.LLLLLLLLLLLLLLLLLLLLL.LLLLLLLL.LLLLLL.LLLLLLLLLLLLL.LLL.LLLLLLLLLLLLLL\n..LL.LLLL.LL.LLLLL.L.LL.LLLL.LLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLL.LLLLLLL..LLLLLLLL.LLLLLLLLL.LL.L\nLLLLLL..LLL.LLLLLL.LLLLLLLLL.LLLLLLLLL.LLLLLL.LLLL.LLL.LLLLLL.LLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLL\nLLLLLLLLLLL.LLLLLLLLLLL.LLLLLLLLLLLLLL.LL.LLL.LLLLLLLL.LLLLLL.LLLLLLLL.LLLL.L.LLLLLLLLLLLL.LLL\nLLLLLLLLLLLL.LL.LL.LLLL.LLLL.L.LL.L.LLLLLLL.L.LLLLLLLL.LLLLLL.LLLL.LLL.LLLLLLLL.LLLLLLLLLLLLLL\n......L...L....L..............L.L....L..L.LL.L..LL....LLL........L..LL.L..L.L.LLL.........L.L.\nLLLLLL.LLLL.LLLLLL.L.LL.LLLL.LLLL.LLLLLL.LLLL.LLLLLLLL.LLL.LL.LLLLLLLL.LL.LLLLLLLLLLLLLLLLLLLL\nLL.LLLLLLLLL.LLLLLLLLLL.LLLL.LLLLLLLLL.LLLLLLLLLLLLLLL.LLLL.L.LLLLLLLL.LLLLLLLLLLLLLL.LLLLLL.L\nLLLLLL.LLLL.LLLLLL.LLLL.LLLL.LLLLLLLLL.L.LLLL.LLLLLLLL.LLLLLLLLLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLL\nL.LLLLLLLLLLLLLLLL.LLLLL.LLLLLLLL.LLLL.LLLLLL.LLL.LLLL.LLLLLL.LLLLLLLL.LLLLLLLLLLL..LLLL..LLLL\nLL.LLL.LLLLLLLLLLL.LLLLLLLLL..LLLLLLLL.LLLLLL.LLLL..LL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL.LL\nLLLLLLLLLLLLLLLLLLLLLL..LLLL.LLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLL.LLLLLLLLL.LLLLLLL.LLLLLLLLLLLLLL\nLLLLLLLLL.L..LLLLLLLLLL.LLLLLLLLLLLLLL.LLLLLL.LLLL.LLLLLLLLLL.LLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLL\nLLLL.L.LLLL.LLLL.L.L.LLLLLLL.LLLLLLLLLLLL.LLL.LLLLLLLL..LLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLL.LLLLL\nLLL.LL.LLLL.LLLLLLLLLLL.LLLLLLLLLLLLLL.LLLLLLLLLLLLLLL.LLLLLL.LLLLLLLLLLLLL.LLL.LLLLLLLLLLLLLL\n.L.......L..L...L..LL......L..L..L..L...L.L........LLL......L......LL.....L.L......L.L.LL....L\nLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLL.LLLLLL.LLLLLLLL.LLLLLL.LLLLLLLL.LLLLLLLL.LLLLLLL.LLLLLL\nLLLL.LLLLLLLLLLLLLLLL..LLLLL.LLLLLLLLL..LLLLL.LLLLLLLL.LLLLLLLLLLLLL.L.LLLLLLLLLLLLLLLLLLLLLLL\n.LLLLL.LLLL.LL.LLL.LLLL.LLLL.LLLLLLLLL.LLLL.L.LLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLL\nLLLLLL.LLLL.LLLLLLLLLLLL.LLL.LLLLLLLLL.LLLLLL.LLLLLLLL.LLLL...LLLLLLLL.L.LLLLLLLLLLLLLLLLLLLLL\nLLLLLLLLLLL.LLLLLL.LLLLLLLLL.LLLL.LLLL.LL.LLL.LLLLLLLL.LLLLLL.LLLLLLLLLLLLLLLLL.LLLLLLLL.LLLLL\n......L.LLLL...LLL.L..L......L..L.L.L....L.......LLL....L..LLLL.LLL..LL..L.L.L........LLL.L...\nLLLLLL.LLLL.LLLLLL.LLLL.LLLL..LLLLLLLL.LLLLLL.LLLLLLLL..LLLLL.LLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLL\nLLL.LL.LLLL.LLLLLL.LLLLLLLLL.LLLLLLLLL.LLLLLL.LLLLLLLL.LLLLLLLLLLLLLLL.LLLLLLLL.LLLLL.LLLLLLLL\nLLLLLL.LLLLLLLLLLLLLLLLLLLLL.LLLLLLLLL.LLLLLLLLLLLLLLL.LLLLLL.LLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLL\nLLLLLL.LLLLLLLLLLLLLLLL.LLLL.LLLLLLLLL.LL.LLLLLLLLLLLLLLLL.LL.LLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLL\nLLLLLL....L.LLLLLL.LLLL.LLL.LLLLLLLLLL.LLLLLL.LLLLLLLL.LLLLLL.LLLLL..L.LLLLLLLLLLLLLLLLLLLLL.L\nLLLLLLLL.LL.LLLLLLLLLLLLLL.L.LLLLLLLLL.LLLLLL..LLLLLLL.LLLLLLLL.LLLLLLLLLL.LLLL.LLLLLLLLLLL.LL\nLLLLLL.LLLLLLLLLLLLLLLL.LLLL.LLLLLLLLLLLLLL...LLLLLL.LLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLL\n.L..L....L.L..L..LL...L.L.LLLLLL...LLL.LL......LLL...L..LLLL.LLLLL.L...LLL...L.LL..L.L...L.L.L\nLLLLLL.LLL..LLLLLL.LLLL.LLLL.LLLLLLLLL.LLLLLLLLLLLLLLL..LLLLL.LLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLL\nLLLLLL.LLLL.LLLLLLLLLLL.LLLL.LLLLLLLLLLLLLLL..LLLLLLLL.LLLLLLLL.LLLLLL.LLLLLLLLLLLLLLLLLLLLLLL\nLLLLLL.LLLL.LLLLLLLLLLL.LLLL.LLLLLLLLL.LLLLLLLLLLLLL.LLLLLLLL.LLLLLLLL.LLLLLLL..LLLLLLLLLLLLLL\nLLLLLL.LLLL.LLLLLL.LLLLLLLLLLLLLLLLL.L.L.LLLL.LLLLLLLLLLLLLLL.LL.LLLLLLLLLLLLLL..LLLLLLLLLLLLL\nL.LLLL.LLLL.LLL.LLLLLLLLLLLL.LLLLLLLLL.LLLLL..LLLLLLLL.LLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL\nLLLLL.LLLLL.LLLL.L.LLLL.LLLL.LLLLL.LLL.LLLLLL.LLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL\nLLLLLLLLLLLLLLLLLLLLLLLL.LLLLL.LLLLLLL.LLLLLL.LLLLLLLL.LLLLLL.LLLLLLLLLLLLLLL.LLLLLLLLLLLLLLL.\nL....L.....L..L......L....L.L...L.L.....L.L...LL......L....LL...L....LL...LL.......LLL...L.L.L\nLLLLLLLLLLL.LLLLLLLL.LL.LLL..LLLLLLLLL.LLLLLL.LLLLLLLL.LLLLLLLLLLLLLLL.LLL.LLLL.LLLLLLLLLLLLLL\nLLLLLLLLLLLLLLLLLLLLLLLLLLL..LLLLLLLLL.LLLLLL..LLLLLLL.LLLLLL.L.L.LLLLLLLLL.LLL.LLLLLLLLLLLLLL\nLLLLLL.LLLL.LLLLLL.LLLL.LL.LLLLLLLLLLL.LLLLLLLL.LLLLLL.LLLLL...LLLLLLLLLLLLLLLL.LLLLLLLLLLLLL.\nLLLLLL.LLLL.LLLLLL.LL.LLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLL.LLLLLLLL.LLLLLL.L.LLLLLLLLLLLLLL\nLLLLLL.LLLL.LLLLLLLLLLL.LLLL.LLLLL.LLLLLLLLLL.LLLLLLLL..LLLLL.LL.LLLLL.LLL.LL.L.LLLLLLLLLLLLLL`;\n\nexport const test1dataA = `L.LL.LL.LL\nLLLLLLL.LL\nL.L.L..L..\nLLLL.LL.LL\nL.LL.LL.LL\nL.LLLLL.LL\n..L.L.....\nLLLLLLLLLL\nL.LLLLLL.L\nL.LLLLL.LL`;\n\nexport const test1dataB = [\n  `#.##.##.##\n#######.##\n#.#.#..#..\n####.##.##\n#.##.##.##\n#.#####.##\n..#.#.....\n##########\n#.######.#\n#.#####.##`,\n  `#.LL.L#.##\n#LLLLLL.L#\nL.L.L..L..\n#LLL.LL.L#\n#.LL.LL.LL\n#.LLLL#.##\n..L.L.....\n#LLLLLLLL#\n#.LLLLLL.L\n#.#LLLL.##`,\n  `#.##.L#.##\n#L###LL.L#\nL.#.#..#..\n#L##.##.L#\n#.##.LL.LL\n#.###L#.##\n..#.#.....\n#L######L#\n#.LL###L.L\n#.#L###.##`,\n  `#.#L.L#.##\n#LLL#LL.L#\nL.L.L..#..\n#LLL.##.L#\n#.LL.LL.LL\n#.LL#L#.##\n..L.L.....\n#L#LLLL#L#\n#.LLLLLL.L\n#.#L#L#.##`,\n  `#.#L.L#.##\n#LLL#LL.L#\nL.#.L..#..\n#L##.##.L#\n#.#L.LL.LL\n#.#L#L#.##\n..L.L.....\n#L#L##L#L#\n#.LLLLLL.L\n#.#L#L#.##`,\n];\n\nexport default data;\n","import { count, range } from \"util/collections\";\nimport { Day } from \"util/Day\";\nimport day11data, { test1dataA } from \"./data/day11\";\n\nconst makeData = (data: string) => {\n  return data.split(\"\\n\");\n};\n\ntype Coords = [number, number];\n\nconst isWithin = (height: number, width: number, pos: Coords) => {\n  return pos[0] >= 0 && pos[0] < height && pos[1] >= 0 && pos[1] < width;\n};\n\nconst getSeatAt = (data: string[], pos: Coords) => {\n  const [y, x] = pos;\n  return data[y][x];\n};\n\nconst getNeighborsAt = (data: string[], pos: Coords) => {\n  const [y, x] = pos;\n  const neighbors = [-1, 0, 1].map((row) =>\n    [-1, 0, 1]\n      .map((col) => {\n        const tx = x + col;\n        const ty = y + row;\n        if (\n          (row === 0 && col === 0) ||\n          !isWithin(data.length, data[0].length, [ty, tx])\n        ) {\n          return \".\";\n        }\n        return data[ty][tx];\n      })\n      .join(\"\")\n  );\n  return neighbors.join(\"\").split(\"\");\n};\n\nconst updateFromAdjacent = (data: string[], pos: Coords) => {\n  const currentSymbol = getSeatAt(data, pos);\n  const occupiedSeats = getNeighborsAt(data, pos).filter((s) => s === \"#\");\n  if (currentSymbol === \"L\" && occupiedSeats.length === 0) {\n    return \"#\";\n  }\n  if (currentSymbol === \"#\" && occupiedSeats.length >= 4) {\n    return \"L\";\n  }\n\n  return currentSymbol;\n};\n\nconst isEqual = (a: string[], b: string[]) => {\n  return a.map((row, index) => row === b[index]).every((row) => row === true);\n};\n\nconst trace = (data: string[], pos: Coords, direction: Coords) => {\n  let y = pos[0];\n  let x = pos[1];\n  const done = false;\n\n  while (!done) {\n    y += direction[0];\n    x += direction[1];\n\n    if (isWithin(data.length, data[0].length, [y, x])) {\n      const seat = getSeatAt(data, [y, x]);\n      if (seat !== \".\") {\n        return seat;\n      }\n    } else {\n      return \".\";\n    }\n  }\n  return \".\";\n};\n\nconst sweep = (data: string[], pos: Coords) => {\n  return [-1, 0, 1]\n    .map((row) =>\n      [-1, 0, 1]\n        .map((col) => {\n          if (row === 0 && col === 0) {\n            return \".\";\n          }\n          return trace(data, pos, [row, col]);\n        })\n        .join(\"\")\n    )\n    .join(\"\")\n    .split(\"\");\n};\n\nconst updateFromVisible = (data: string[], pos: Coords) => {\n  const currentSymbol = getSeatAt(data, pos);\n  const occupiedSeats = sweep(data, pos).filter((s) => s === \"#\");\n  if (currentSymbol === \"L\" && occupiedSeats.length === 0) {\n    return \"#\";\n  }\n  if (currentSymbol === \"#\" && occupiedSeats.length >= 5) {\n    return \"L\";\n  }\n  return currentSymbol;\n};\n\nconst simulate = (\n  data: string[],\n  func: (data: string[], pos: Coords) => string\n) => {\n  const createFrame = (frame: string[]) => {\n    return range(0, frame.length - 1).map((y) => {\n      return range(0, frame[0].length - 1)\n        .map((x) => {\n          return func(frame, [y, x]);\n        })\n        .join(\"\");\n    });\n  };\n\n  let currentFrame = data;\n  let ctr = 0;\n  while (ctr < 99) {\n    const nextFrame = createFrame(currentFrame);\n    if (isEqual(currentFrame, nextFrame)) {\n      return nextFrame.reduce((acc, row) => acc + count(row, \"#\"), 0);\n    }\n    currentFrame = nextFrame;\n    ctr += 1;\n  }\n  throw new Error(\"ran more than 99 times.\");\n};\n\nconst day11: Day<string[]> = {\n  title: \"Seating System\",\n  description: `\n  Your plane lands with plenty of time to spare.  As you reach the waiting \n  area to board the ferry, you realize you're so early, nobody else has even \n  arrived yet!\n\n  By modeling the process people use to choose (or abandon) their seat in the \n  waiting area, you're pretty sure you can predict the best place to sit.\n`,\n  data: day11data,\n  dataConv: makeData,\n  parts: [\n    {\n      title: \"Part 1\",\n      description: `\n* The seat layout fits neatly on a grid\n* All decisions are based on the number of occupied adjacent seats\n* How many seats end up occupied?\n`,\n      func: (data) => simulate(data, updateFromAdjacent),\n      tests: [\n        {\n          data: test1dataA,\n          result: 37,\n        },\n      ],\n    },\n    {\n      title: \"Part 2\",\n      description: `\n* People only care about the first seat they can see in each of the eight directions\n* it now takes **five or more** visible occupied seats for an occupied seat to become empty\n* how many seats end up occupied?\n\n`,\n      func: (data) => simulate(data, updateFromVisible),\n      tests: [\n        {\n          data: test1dataA,\n          result: 26,\n        },\n      ],\n    },\n  ],\n};\n\nexport default day11;\n","const data = `S3\nW3\nF47\nL90\nW1\nF42\nN1\nR90\nF7\nR90\nE2\nS1\nW2\nF11\nE4\nN1\nF77\nW1\nS3\nW4\nF64\nW3\nR180\nN5\nE1\nF8\nN1\nF54\nN2\nL180\nN1\nF44\nE2\nN2\nL90\nW3\nF5\nW2\nL180\nF100\nN3\nE1\nW4\nN5\nF40\nR180\nW5\nR90\nN1\nW3\nR270\nN1\nR90\nS5\nF10\nE4\nN4\nF56\nE3\nN4\nW4\nR90\nN3\nF24\nF58\nR90\nN2\nR90\nW5\nS2\nR90\nW3\nR90\nW1\nN3\nR90\nN4\nE2\nF25\nN5\nN4\nL90\nE5\nN4\nR90\nN1\nR90\nF73\nW1\nS3\nW4\nW1\nF28\nW3\nE2\nS3\nF28\nS3\nR270\nE1\nS2\nW3\nS3\nL90\nF56\nE5\nL180\nR90\nF48\nN2\nF75\nS2\nE5\nF21\nF57\nN5\nL90\nE4\nN4\nF14\nS3\nF75\nW5\nL90\nE3\nR90\nN1\nW4\nF4\nW5\nS3\nE3\nF68\nN3\nR90\nW4\nN5\nS3\nF4\nR90\nF48\nR90\nF93\nR90\nS3\nF90\nR90\nF41\nN2\nS1\nE5\nF19\nE3\nF71\nR180\nF16\nW3\nN4\nW3\nF12\nL180\nL90\nR180\nW4\nR90\nF26\nW1\nE4\nF65\nL90\nF90\nW5\nS4\nW1\nE3\nL90\nW3\nN2\nF77\nW2\nL90\nE4\nS2\nW5\nF60\nR90\nF45\nR90\nS3\nF56\nW2\nS3\nW5\nF58\nL90\nN1\nF94\nS4\nF17\nW5\nR180\nS2\nR90\nN4\nW1\nS3\nR180\nF93\nR90\nF45\nE4\nR90\nS1\nF81\nE2\nL90\nS1\nF63\nE2\nR90\nE2\nN1\nW1\nL90\nF91\nS5\nL270\nE3\nS1\nF29\nN4\nR180\nF44\nL90\nE3\nL90\nF90\nR90\nF93\nN2\nS2\nF28\nE1\nF58\nN1\nF9\nL90\nS1\nF74\nN2\nF19\nL180\nS3\nE1\nR90\nF55\nS3\nL90\nF58\nS1\nR90\nE4\nF42\nS5\nR90\nS4\nL90\nS1\nE3\nF75\nL90\nF44\nE2\nF50\nS2\nN4\nW2\nF14\nW2\nN2\nF14\nS1\nW4\nF74\nL90\nF52\nW3\nS5\nL90\nW5\nN3\nL90\nF54\nS1\nR90\nE3\nR90\nF23\nS4\nF75\nN5\nR90\nF79\nR90\nF70\nN2\nF89\nW1\nS5\nE2\nF44\nL180\nW5\nR90\nF72\nR90\nN3\nW4\nN4\nF90\nR270\nE4\nF43\nW4\nF44\nN5\nF55\nS4\nF68\nS1\nE1\nF39\nW2\nN4\nF46\nW5\nF62\nE1\nR270\nF97\nW4\nL180\nF41\nR90\nW3\nR270\nS1\nE1\nR90\nE2\nF18\nE2\nF12\nR90\nW5\nL90\nE2\nF82\nN3\nE5\nF45\nN5\nF69\nN5\nW1\nR90\nF15\nW1\nS2\nR90\nF50\nS4\nS5\nW2\nS4\nF21\nE5\nL90\nF47\nE1\nF73\nL90\nF4\nR90\nF65\nE2\nS4\nF52\nE1\nN1\nL90\nS1\nF41\nR180\nS2\nF5\nE1\nR90\nN3\nF29\nL90\nF69\nE4\nF92\nR90\nN4\nL180\nW5\nN3\nR180\nW1\nN5\nE5\nF1\nN3\nF19\nW4\nF33\nN2\nR90\nE2\nN3\nF68\nE3\nS1\nR90\nN3\nR180\nE5\nR90\nW1\nR90\nS2\nL90\nF67\nW2\nS4\nR270\nW1\nR90\nF11\nL180\nF83\nR90\nN3\nL90\nW1\nN1\nL90\nF41\nN4\nF45\nS2\nW4\nS4\nF92\nE3\nF21\nR180\nW4\nS1\nN3\nR90\nN2\nL90\nF97\nN4\nF99\nF78\nE2\nS3\nW1\nN4\nN1\nE1\nL180\nF32\nS1\nF84\nL90\nS3\nL90\nE3\nR90\nF62\nN4\nL90\nE2\nR90\nF68\nS4\nF29\nE5\nS5\nR180\nS1\nF15\nW1\nS3\nF65\nL180\nF54\nL90\nW2\nS3\nW2\nF22\nL180\nW5\nR90\nE4\nL90\nF65\nW5\nF82\nS3\nW5\nL90\nF83\nW4\nL90\nE1\nF92\nW4\nN2\nF99\nL90\nE5\nR180\nN5\nW5\nR90\nN3\nF74\nR90\nN1\nF26\nS3\nW2\nN2\nE3\nL90\nF75\nR90\nF12\nW3\nS5\nL90\nN2\nE4\nF13\nE1\nF44\nN3\nR90\nE5\nR90\nW4\nF4\nW5\nN3\nW3\nF40\nL180\nW3\nN2\nE3\nF57\nW1\nF16\nS2\nW3\nR90\nW3\nF24\nR90\nF84\nR90\nW2\nR270\nS1\nL180\nF62\nW1\nR180\nF71\nE2\nS2\nR90\nF84\nE2\nF64\nR90\nS5\nF42\nS4\nF37\nE5\nR90\nS2\nR90\nS4\nW1\nR180\nF71\nW3\nF19\nW5\nR180\nF98\nS5\nR90\nN2\nW5\nN5\nF14\nL270\nF29\nL90\nF94\nW4\nF92\nW5\nN4\nF78\nN1\nS3\nF10\nL90\nF72\nR90\nS2\nL180\nN3\nR180\nW3\nF83\nN4\nE5\nN2\nE3\nL90\nE2\nF84\nS4\nR90\nE3\nS4\nF59\nR90\nW1\nR90\nF29\nS4\nW1\nS5\nL90\nF77\nR90\nN4\nF69\nL90\nW5\nF15\nN3\nN1\nL180\nN2\nN4\nW4\nN1\nL180\nW4\nF5\nR180\nE2\nR90\nS2\nR90\nN2\nF49\nL180\nF32\nN5\nR90\nW5\nL90\nE1\nF46\nE1\nL90\nW3\nF69\nN5\nE1\nS3\nL90\nF98\nW2\nL90\nF17\nW3\nN2\nF78\nE5\nW1\nS1\nF73\nS2\nF36\nN5\nE3\nF61\nR90\nE4\nF88\nL90\nE4\nR180\nW4\nS2\nR180\nN2\nF17\nE5\nS5\nE1\nR90\nS3\nL90\nR90\nS4\nF1\nW2\nN1\nW5\nF35\nS2\nF78\nS2\nL90\nW1\nL180\nN4\nF99\nF34\nL90\nN5\nR90\nS4\nL90\nN2\nF72\nE5\nS4\nR180\nS4\nF18\nW1\nL90\nE1\nS4\nE2\nR90\nF62\nL90\nF71\nS1\nF18\nF6\nN1\nF28\nL90\nN1\nF24\nE1\nR90\nS2\nF51`;\n\nexport const test1data = `F10\nN3\nF7\nR90\nF11`;\n\nexport default data;\n","import { Day } from \"util/Day\";\nimport day12data, { test1data } from \"./data/day12\";\n\ntype Point = { x: number; y: number };\n\nconst pt = (x: number, y: number) => ({ x, y } as Point);\n\nconst Directions = [\"N\", \"E\", \"S\", \"W\"] as const;\ntype Direction = typeof Directions[number];\n\nconst Turns = [\"L\", \"R\"] as const;\ntype Turn = typeof Turns[number];\n\nconst TurnTransforms = {\n  0: (p: Point) => p,\n  1: (p: Point) => pt(-p.y, p.x),\n  2: (p: Point) => pt(-p.x, -p.y),\n  3: (p: Point) => pt(p.y, -p.x),\n};\n\ntype Movement = Direction | Turn | \"F\";\n\nconst DirectionMoves: Record<Direction, Point> = {\n  N: pt(0, -1),\n  E: pt(1, 0),\n  S: pt(0, 1),\n  W: pt(-1, 0),\n};\n\ntype Instruction = {\n  move: Movement;\n  steps: number;\n};\n\nclass Ferry {\n  location: Point;\n  heading: Direction;\n  waypoint: Point;\n\n  constructor(\n    location: Point = pt(0, 0),\n    heading: Direction = \"E\",\n    waypoint: Point = pt(10, -1)\n  ) {\n    this.location = location;\n    this.heading = heading;\n    this.waypoint = waypoint;\n  }\n\n  Move = (vector: Point, steps: number) => {\n    this.location.x += vector.x * steps;\n    this.location.y += vector.y * steps;\n  };\n\n  Turn = (turn: Turn, steps: number) => {\n    const turnSteps = (turn === \"R\" ? 1 : -1) * (steps / 90);\n    const currentIndex = Directions.indexOf(this.heading) + 4;\n    this.heading = Directions[(currentIndex + turnSteps) % 4];\n  };\n\n  MoveWaypoint = (vector: Point, steps: number) => {\n    this.waypoint.x += vector.x * steps;\n    this.waypoint.y += vector.y * steps;\n  };\n\n  Do = (instruction: Instruction) => {\n    const { move, steps } = instruction;\n    if (Directions.includes(move as Direction)) {\n      this.Move(DirectionMoves[move as Direction], steps);\n    } else if (Turns.includes(move as Turn)) {\n      this.Turn(move as Turn, steps);\n    } else {\n      this.Move(DirectionMoves[this.heading], steps);\n    }\n  };\n\n  DoWithWaypoint = (instruction: Instruction) => {\n    const { move, steps } = instruction;\n\n    if (Directions.includes(move as Direction)) {\n      this.MoveWaypoint(DirectionMoves[move as Direction], steps);\n    }\n    if (Turns.includes(move as Turn)) {\n      const turnSteps = ((move === \"R\" ? 1 : -1) * (steps / 90) + 4) % 4;\n      const transform =\n        TurnTransforms[turnSteps as keyof typeof TurnTransforms];\n      this.waypoint = transform(this.waypoint);\n    }\n    if (move === \"F\") {\n      this.Move(this.waypoint, steps);\n    }\n  };\n\n  getManhattanDistFrom = (origin: Point): number => {\n    return (\n      Math.abs(this.location.x - origin.x) +\n      Math.abs(this.location.y - origin.y)\n    );\n  };\n}\n\nconst makeData = (data: string): Instruction[] => {\n  return data.split(\"\\n\").map((line) => ({\n    move: line.substr(0, 1) as Movement,\n    steps: Number(line.substr(1)),\n  }));\n};\n\nconst part1 = (data: Instruction[]): number => {\n  const f = new Ferry(pt(0, 0), \"E\");\n  data.forEach((step) => {\n    f.Do(step);\n  });\n  return f.getManhattanDistFrom(pt(0, 0));\n};\n\nconst part2 = (data: Instruction[]): number => {\n  const f = new Ferry(pt(0, 0), \"E\", pt(10, -1));\n  data.forEach((step) => {\n    f.DoWithWaypoint(step);\n  });\n  return f.getManhattanDistFrom(pt(0, 0));\n};\n\nconst day12: Day<Instruction[]> = {\n  title: \"Rain Risk\",\n  description: `\n  Your ferry made decent progress toward the island, but the storm came in faster than anyone expected. \n  \n  The ferry needs to take evasive actions!\n`,\n  data: day12data,\n  dataConv: makeData,\n  parts: [\n    {\n      title: \"Part 1\",\n      description: `\n* The ship starts by facing east\n* Follow the navigation instructions\n* What is the Manhattan distance (height + width) between the ship's starting and final position?\n`,\n      func: (data) => part1(data),\n      tests: [\n        {\n          data: test1data,\n          result: 17 + 8,\n        },\n      ],\n    },\n    {\n      title: \"Part 2\",\n      description: `\n* All of the actions indicate how to move a waypoint which is relative to the ship's position\n* Move the ship according to the updated instructions\n* What is the Manhattan distance between the ship's starting and final position?\n`,\n      func: (data) => part2(data),\n      tests: [\n        {\n          data: test1data,\n          result: 214 + 72,\n        },\n      ],\n    },\n  ],\n};\n\nexport default day12;\n","const data = `1008141\n17,x,x,x,x,x,x,41,x,x,x,x,x,x,x,x,x,523,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,13,19,x,x,x,23,x,x,x,x,x,x,x,787,x,x,x,x,x,37,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,29`;\n\nexport const test1data = `939\n7,13,x,x,59,x,31,19`;\n\nexport default data;\n","import { Day } from \"util/Day\";\nimport day13data, { test1data } from \"./data/day13\";\n\ntype Schedule = {\n  departure: number;\n  buses: number[];\n};\n\ntype DataType = Schedule;\n\nconst calcNextBus = (bus: number, timestamp: number) => {\n  const nextBus = Math.floor(timestamp / bus) * bus;\n  return nextBus < timestamp ? nextBus + bus : nextBus;\n};\n\nconst makeData = (data: string): DataType => {\n  const lines = data.split(\"\\n\");\n  const departure = lines[0];\n  const buses = lines[1].split(\",\").filter((item) => item !== \"x\");\n  return {\n    departure: Number(departure),\n    buses: buses.map((bus) => Number(bus) || -1),\n  };\n};\n\nconst part1 = (data: DataType): number => {\n  const busDepartures = data.buses.map((bus) => ({\n    bus,\n    departure: calcNextBus(bus, data.departure),\n  }));\n  const nextBus = busDepartures.sort((a, b) => a.departure - b.departure)[0];\n  return (nextBus.departure - data.departure) * nextBus.bus;\n};\n\nconst part2 = (data: DataType): number => {\n  return -1;\n};\n\nconst day13: Day<DataType> = {\n  title: \"Shuttle Search\",\n  description: `\n  Your ferry can make it safely to a nearby port, but you'll need to get a shuttle bus to the nearest airport.\n\n  Each bus has an ID number that also indicates how often the bus leaves for the airport.\n`,\n  data: day13data,\n  dataConv: makeData,\n  parts: [\n    {\n      title: \"Part 1\",\n      description: `\n* Bus schedules are defined based on a timestamp\n* At timestamp 0, every bus simultaneously departed from the sea port\n* The ID number of a bus is also the time it takes to complete one loop\n* Figure out the earliest bus you can take to the airport\n* **Return ID of bus * number of minutes you have to wait**\n`,\n      func: (data) => part1(data),\n      tests: [\n        {\n          data: test1data,\n          result: 59 * 5,\n        },\n      ],\n    },\n    {\n      title: \"Part 2\",\n      description: `\n* All of the actions indicate how to move a waypoint which is relative to the ship's position\n* Move the ship according to the updated instructions\n* What is the Manhattan distance between the ship's starting and final position?\n`,\n      func: (data) => part2(data),\n      tests: [\n        {\n          data: test1data,\n          result: 214 + 72,\n        },\n      ],\n    },\n  ],\n};\n\nexport default day13;\n","import { Day } from \"util/Day\";\nimport day14data, { test1data } from \"./data/day14\";\n\ntype InstructionType = \"mask\" | \"mem\";\n\ntype Instruction = {\n  type: InstructionType;\n  value: string | bigint;\n  address: number;\n};\n\ntype DataType = Instruction;\n\nconst memRe = /mem\\[(?<addr>\\d+)\\]/;\n\nclass VM {\n  instructions: Instruction[] = [];\n  mem: bigint[] = [];\n\n  constructor(data?: Instruction[]) {\n    if (data !== undefined) this.instructions = data;\n  }\n\n  static parse = (line: string) => {\n    const [type, val] = line.split(\" = \");\n    if (type === \"mask\") {\n      return {\n        type: type as InstructionType,\n        value: val,\n        address: -1,\n      };\n    }\n\n    return {\n      type: \"mem\" as InstructionType,\n      value: BigInt(val) || val,\n      address: Number(memRe.exec(type)?.groups?.addr),\n    };\n  };\n\n  static applyMask = (mask: string, value: bigint): bigint => {\n    const maskBits = mask.split(\"\");\n    const ones = BigInt(\n      `0b${maskBits.map((c) => (c === \"1\" ? \"1\" : \"0\")).join(\"\")}`\n    );\n    const zeros = BigInt(\n      `0b${maskBits.map((c) => (c === \"0\" ? \"1\" : \"0\")).join(\"\")}`\n    );\n    // eslint-disable-next-line\n    const result = (value | ones) ^ (value & zeros);\n    return result;\n  };\n\n  run = () => {\n    let currentMask = \"\";\n    this.instructions.forEach((instr) => {\n      if (instr.type === \"mask\") {\n        currentMask = instr.value as string;\n      }\n      if (instr.type === \"mem\") {\n        this.mem[instr.address] = VM.applyMask(\n          currentMask,\n          BigInt(instr.value)\n        );\n      }\n    });\n    return this.mem.reduce((acc, val) => acc + val, BigInt(0));\n  };\n}\n\nconst makeData = (data: string): DataType[] => {\n  const lines = data.split(\"\\n\");\n  return lines.map((line) => VM.parse(line));\n};\n\nconst part1 = (data: DataType[]): bigint => {\n  const vm = new VM(data);\n  return vm.run();\n};\n\nconst day14: Day<DataType[]> = {\n  title: \"Docking Data\",\n  description: `\n  As your ferry approaches the sea port, the captain asks for your help again. \n\n  The computer system that runs this port isn't compatible with the docking program on the ferry.\n  `,\n  data: day14data,\n  dataConv: makeData,\n  parts: [\n    {\n      title: \"Part 1\",\n      description: `\n* Execute the initialization program\n* **What is the sum of all values left in memory after it completes?**\n`,\n      func: (data) => Number(part1(data)),\n      tests: [\n        {\n          data: test1data,\n          result: 101 + 64,\n        },\n      ],\n    },\n  ],\n};\n\nexport default day14;\n","const data = `mask = X100110110X011000101000101XX11001X11\nmem[5201] = 1838761\nmem[32099] = 25747352\nmem[36565] = 72187\nmem[31494] = 369864\nmem[17260] = 3138\nmem[64903] = 91484814\nmask = 0X00100101000XX0011110X10110X100X010\nmem[54866] = 120526\nmem[57614] = 430839\nmem[17916] = 648\nmem[43192] = 325890\nmem[23626] = 313518443\nmem[45988] = 50484\nmask = 01001001X0001X00XXX110X010010XX0X001\nmem[60805] = 1352\nmem[37516] = 5942314\nmem[63169] = 237020309\nmem[31655] = 274507\nmask = 010011010001110000010000X101X0X11X01\nmem[49875] = 15349586\nmem[6956] = 13765452\nmem[675] = 886107857\nmask = 01000001X1XX11011X1111X111X000X01X11\nmem[2135] = 5930\nmem[1861] = 1009\nmem[62754] = 145160\nmem[1333] = 1153712\nmem[15455] = 7454\nmask = 01X01X011X0011X0X10110001X1X1000X110\nmem[53253] = 667716\nmem[47571] = 745817\nmem[48582] = 5810\nmem[3620] = 7851685\nmem[41836] = 14080244\nmem[39150] = 84103\nmask = 01001X01100X100010X111111X11100XX111\nmem[249] = 514\nmem[25687] = 48545\nmem[62083] = 208926\nmem[39872] = 2590\nmem[28491] = 267\nmem[25340] = 115744\nmem[31101] = 6781\nmask = 0100100100011101000XX001XX0010100X10\nmem[6053] = 6291996\nmem[37941] = 514441\nmem[22984] = 108425255\nmem[30540] = 127685\nmask = 000X100101011X1X1010X1011110XX10X1X0\nmem[42567] = 253905\nmem[45241] = 15790\nmem[57132] = 480344\nmem[29971] = 22597051\nmask = XXX0111110001100010X1X01X10X0000000X\nmem[44680] = 428361054\nmem[17571] = 4884\nmask = X1X001010X0111101X11X100X10100101100\nmem[55107] = 2922\nmem[8605] = 5742\nmem[63754] = 289191\nmask = 01101001010X11000110111X11000X01X000\nmem[48186] = 7310\nmem[30306] = 413\nmem[1980] = 538481\nmask = 010011011XX011X110011111101X01101X1X\nmem[45241] = 11454771\nmem[65349] = 36152803\nmem[62368] = 34863\nmem[26794] = 5220\nmask = 010X10XXX1001100011101X00X0110011110\nmem[15496] = 898\nmem[59847] = 32170699\nmem[5411] = 130682\nmem[27017] = 205172\nmem[48688] = 3072\nmask = 001X000X111X110000110XX0010100001110\nmem[17575] = 12630818\nmem[51454] = 28544\nmem[52745] = 45251\nmask = 000000010100X110X11101X101X1011010X1\nmem[49456] = 637756\nmem[63169] = 99927\nmem[50318] = 7599616\nmem[42115] = 48825\nmem[20469] = 5931716\nmem[56899] = 2884\nmask = 01XX100X0100X10001XX011111X000001XX0\nmem[45630] = 2305\nmem[28560] = 118602807\nmem[45644] = 52185\nmem[3682] = 56264\nmem[63201] = 237495702\nmem[63572] = 7683\nmem[24477] = 370\nmask = 01X0X0XX0X011100011110000X0XX00X1111\nmem[14028] = 3492\nmem[28452] = 213847\nmem[57663] = 203516\nmem[24701] = 45071697\nmem[30226] = 856135\nmem[59279] = 100557\nmask = 0110100001X0X1X0010XX1XX00X100000000\nmem[4237] = 60693\nmem[51454] = 56389\nmem[44364] = 12145\nmem[53190] = 3825966\nmask = 0X0010000X011X0011111001100010X10100\nmem[45988] = 84435\nmem[43613] = 171165\nmem[39150] = 2025\nmask = 000001010X111100111101001000X00X000X\nmem[7204] = 243074994\nmem[30540] = 2829011\nmem[16986] = 171341\nmask = 01101X0101001X101X1111110X0X01X0010X\nmem[40006] = 276307\nmem[50601] = 45\nmem[2907] = 7955\nmem[61049] = 14014170\nmem[20722] = 52156072\nmem[12299] = 1701485\nmem[4643] = 2041760\nmask = X1101000010X110X0111X011001101000000\nmem[29309] = 29638912\nmem[23626] = 127552394\nmem[39357] = 2743410\nmask = XXX01000000110001111101X101X1XX0XX01\nmem[32322] = 110798340\nmem[38758] = 20398089\nmem[62368] = 6402\nmem[12381] = 125762\nmem[34042] = 46630\nmask = 0X1X100X0X01100X11X11111101100100001\nmem[56680] = 52806\nmem[3416] = 5097254\nmem[21217] = 959\nmem[11134] = 22705\nmem[39515] = 607\nmem[31858] = 527794383\nmask = 011110010100X10001110111X0XXX00110X1\nmem[37752] = 3783\nmem[27543] = 180509\nmem[56503] = 26998899\nmem[33984] = 2996098\nmem[6471] = 16602683\nmem[18585] = 5056811\nmem[3477] = 16274\nmask = 010110011XXX110X01011XX11X0100110X00\nmem[43993] = 784\nmem[12295] = 412860764\nmem[62707] = 11253\nmem[27017] = 1813664\nmask = 1XX0X001010X1010101100X000X0100XX000\nmem[25364] = 640\nmem[35537] = 489258314\nmem[356] = 47335\nmem[46814] = 130\nmem[21071] = 32074\nmem[23980] = 1969160\nmem[43457] = 28765451\nmask = 0X0XX00110XX1X00X10111110011X01X1001\nmem[37516] = 3409\nmem[32451] = 486160\nmem[31704] = 494261\nmem[64905] = 489121330\nmask = 10001001X101111010X010X1X11X1001010X\nmem[19927] = 125979\nmem[16164] = 163616\nmem[41291] = 11806544\nmem[13074] = 22666\nmem[65160] = 1102\nmem[21338] = 53735104\nmask = 00X00101X10111XX111101XX10X111111100\nmem[44736] = 13061\nmem[62844] = 31422\nmem[4643] = 59264\nmem[45417] = 5454\nmask = X0001X010X001101011X11001XX000101000\nmem[33984] = 13200\nmem[15462] = 316464\nmem[2638] = 1434216\nmem[29044] = 1370180\nmem[57663] = 77699993\nmem[39191] = 9595034\nmask = 100X1X0X010111X011101011111111XX1000\nmem[60509] = 275540\nmem[65073] = 8066\nmem[64726] = 78129\nmem[15719] = 724\nmem[52499] = 43989105\nmem[57518] = 6805488\nmem[27827] = 1522993\nmask = 0X010110X011X100111X00000111X1110X10\nmem[395] = 16602\nmem[21477] = 62043769\nmem[24630] = 663408947\nmem[3983] = 31082032\nmem[30545] = 456250\nmask = 0100XX01X000X10X10011101100X11101X10\nmem[28174] = 110183887\nmem[9644] = 12911\nmem[62113] = 145\nmask = 010010X10000100100110000101X1XX11011\nmem[63016] = 127052\nmem[49130] = 37\nmem[25394] = 187810\nmem[29779] = 11708792\nmem[36144] = 1033\nmask = 00101001X10XX10X11111X1100000111X001\nmem[35746] = 498408\nmem[15462] = 7839193\nmem[5741] = 168870\nmask = 0010100100X011XX1111X1001001X1X10101\nmem[2256] = 10474689\nmem[57428] = 8228\nmem[34062] = 16609889\nmem[45031] = 106065\nmem[17162] = 138367053\nmem[23302] = 14262\nmask = 001100110X1X11XX110100X0010100XX1000\nmem[33186] = 1012027\nmem[34051] = 148436\nmem[4762] = 25019364\nmem[41825] = 102071658\nmem[32580] = 739\nmem[15455] = 151015\nmask = 01X1XX00X10001000100011001000000XX10\nmem[31330] = 300785\nmem[30222] = 206857068\nmem[27739] = 774225\nmem[47798] = 12155\nmem[57437] = 440075165\nmem[49892] = 58\nmem[44723] = 116116\nmask = 100X1X00000X100011X1X00100101X00010X\nmem[35368] = 5187\nmem[24769] = 1425443\nmem[62844] = 277\nmem[30729] = 11517370\nmask = 0110100X0010110111X10X111000X11011X1\nmem[63295] = 139\nmem[60805] = 381899\nmem[6956] = 3979616\nmem[12295] = 1828\nmask = 010010X10X00X00X00X11XX00001X1001X00\nmem[39150] = 459766\nmem[52621] = 1962\nmem[11891] = 5261559\nmask = X11011X11X00110001011X1X110010000000\nmem[48473] = 3539\nmem[13808] = 331\nmem[30016] = 676\nmem[9736] = 3140258\nmem[12233] = 388562584\nmem[42686] = 1048145655\nmem[26132] = 67723\nmask = 01001X0X010X0001001X10101111X10110X1\nmem[35042] = 230878861\nmem[8611] = 488144\nmem[4290] = 942073\nmem[12381] = 17121117\nmem[15011] = 225\nmem[8378] = 9255\nmask = 00001X0XX01X11X01101001101011110101X\nmem[49708] = 312037855\nmem[19488] = 93439469\nmem[57113] = 7931\nmem[29037] = 210754\nmask = 0100X001X0X01X0100110X11X110001110X1\nmem[8519] = 38940\nmem[49033] = 10564\nmem[58481] = 4187786\nmem[5201] = 230275712\nmem[39296] = 886\nmask = 1000100X010X11101X1011011X0110X11XXX\nmem[38587] = 50240362\nmem[42581] = 116256847\nmem[37181] = 4441034\nmem[16281] = 23027479\nmem[32451] = 71649158\nmem[33316] = 6511\nmask = 000001X11101111011X1X10X1X001X1X1000\nmem[26168] = 390\nmem[11548] = 29301\nmem[2731] = 3188615\nmask = 1100XX00X0X110001X111X000011X0X10001\nmem[32136] = 6436\nmem[46206] = 225594\nmem[33132] = 7862942\nmem[15264] = 198\nmask = 01001001000X1101000111011X0011XXX10X\nmem[33733] = 14993993\nmem[9905] = 246637292\nmem[6373] = 2090\nmem[53539] = 29386\nmask = 0X1010X1X01011XX11111100100XX110X00X\nmem[41520] = 452041\nmem[8605] = 43647\nmem[62764] = 3241680\nmask = 0X1X10X1010111X0X1110XXX00000110X001\nmem[38517] = 3338\nmem[52745] = 4455\nmem[33218] = 850605\nmem[20495] = 315451\nmask = 0XX0X001010X11X01X111X1101X11X101000\nmem[32284] = 615642818\nmem[62844] = 46924\nmem[31120] = 146622\nmem[21925] = 518931\nmem[29515] = 1112\nmem[31241] = 130404\nmem[9905] = 5469165\nmask = 01101000001X110X1101101110XX1X1XX101\nmem[46432] = 346428972\nmem[64522] = 218092103\nmem[42311] = 2316477\nmem[20060] = 565\nmem[62919] = 261004\nmem[50103] = 42134\nmask = 0101100101000100X1X01XX11X0X00111010\nmem[41199] = 48367827\nmem[40992] = 886149\nmem[19927] = 93429\nmask = 01001X01X0XX110X0XX1110X011110001101\nmem[40019] = 187824261\nmem[3416] = 35491\nmem[51276] = 173825792\nmask = X100100110001X000X11010X00001010X001\nmem[21071] = 3775434\nmem[41466] = 601899\nmem[29191] = 163888869\nmem[64981] = 1094832\nmem[36745] = 7560\nmem[44434] = 3179\nmem[5040] = 16142\nmask = 0X101X011XX011111111010100010X0X01X0\nmem[44140] = 22478\nmem[26863] = 31310307\nmem[56680] = 131716\nmem[3983] = 22050\nmask = 1X0X10010X011X1X101X1000X1100X000010\nmem[45724] = 5130\nmem[38747] = 147724\nmem[39515] = 58764331\nmask = 0X001101X10000010X1X00010XX001010101\nmem[50201] = 65493\nmem[44879] = 7688011\nmem[29782] = 85876639\nmem[63157] = 57556\nmask = 00X00001010111X010X1X01X0101X01010XX\nmem[37667] = 539\nmem[65058] = 928398\nmem[16037] = 2162946\nmask = X010100000X11X001111001011011001XX11\nmem[20601] = 689238135\nmem[62832] = 22132331\nmem[20030] = 421255\nmem[38454] = 4898563\nmask = 01101XX0000111X001111100011000X01111\nmem[40968] = 287372\nmem[32860] = 121630361\nmem[6956] = 54910\nmask = 01101001100X11X0010X0101101010001X11\nmem[52270] = 852273185\nmem[44434] = 5773\nmem[40591] = 363113\nmem[31075] = 550\nmem[1148] = 237482\nmask = 0110100000001100X111X111111010X00X10\nmem[9807] = 919\nmem[10050] = 284353\nmem[11553] = 99307\nmask = 11X1X0X0010001000101100X1XX10X100X10\nmem[51707] = 59769\nmem[17916] = 456671254\nmem[15968] = 74716184\nmem[61681] = 11534\nmask = 0X0010010000110X01X1X111X001X111100X\nmem[63572] = 19584\nmem[12382] = 54348210\nmem[7204] = 62681\nmem[58309] = 718\nmask = XX0X0X11X0XX1100X10110111101X1000101\nmem[19172] = 49321\nmem[3972] = 156574486\nmem[53411] = 371993\nmem[34118] = 1245490\nmem[63786] = 28834\nmem[44434] = 1679\nmask = 0X010XX1101111001101110X1X0X1X1000X0\nmem[65433] = 41829624\nmem[5383] = 3874764\nmem[58309] = 40586\nmem[34516] = 1861\nmask = 0X00100X000X1100111X0011100010011100\nmem[30691] = 6349\nmem[26045] = 2259746\nmem[35285] = 2525303\nmem[56918] = 64290918\nmem[34521] = 495146\nmem[41173] = 1892852\nmem[62708] = 2610505\nmask = X1001000010XX10001011X10101000011000\nmem[41877] = 606935473\nmem[10746] = 30201\nmem[7236] = 2402617\nmem[31075] = 394149597\nmem[62893] = 2808512\nmem[44723] = 5738170\nmem[61147] = 2124552\nmask = 01X0100X0X0X1100X1111X11X00X01X01001\nmem[9905] = 376\nmem[56967] = 457904468\nmem[55040] = 2448\nmem[65513] = 2222\nmem[25340] = 23079\nmem[39876] = 4874\nmem[38909] = 16667453\nmask = X0001X0X01011110101X10XX1X1X10X01100\nmem[19488] = 3061762\nmem[26132] = 292794\nmask = 010010X101X01001001110X000X1011X11X0\nmem[1980] = 12162025\nmem[37165] = 15333747\nmem[39210] = 152686\nmask = 01X010X0010XX100011110000X000XX00101\nmem[27917] = 944976\nmem[25099] = 11114\nmem[7777] = 577171\nmem[27080] = 16334871\nmem[14285] = 531\nmask = X1X0100001X01100X10X1111100X00111010\nmem[28216] = 2511\nmem[37165] = 7141\nmem[55924] = 439753\nmem[11901] = 464\nmem[38571] = 407\nmem[782] = 10823\nmask = 0XX00X01010111XX11111110XX010010000X\nmem[54749] = 360481\nmem[20495] = 5280\nmem[37684] = 6039\nmem[6345] = 2073116\nmem[63110] = 22301539\nmask = X0X1010110111100110X1001100X1X100100\nmem[20722] = 9600365\nmem[19084] = 76987\nmem[23777] = 740859\nmask = 001X000111X01X000X11X000110111101100\nmem[27917] = 52797296\nmem[57636] = 322\nmem[11553] = 70582\nmem[8605] = 30966411\nmem[25394] = 812862\nmem[48296] = 317\nmem[60466] = 1411129\nmask = X110000X0XXX11101111001X100110100000\nmem[33339] = 4981\nmem[40073] = 5710720\nmem[33814] = 13208\nmem[14664] = 1950645\nmem[35042] = 35994943\nmask = 10101000X0X1X0XXX1X1101011001100000X\nmem[61417] = 114327\nmem[26863] = 706549\nmem[5651] = 118955\nmask = 011X10000010110111X10111X1001100101X\nmem[7679] = 272716\nmem[24077] = 12277996\nmask = X11XX000010001X00X011X1111X001XX0000\nmem[46531] = 35092779\nmem[1116] = 11777757\nmem[5932] = 519743\nmem[36187] = 318\nmem[38758] = 718897339\nmask = 01001X0110001000X0010X010010X01000X0\nmem[31101] = 257\nmem[39813] = 30972074\nmem[23252] = 1761211\nmask = 0X10100X00X0110X1111X1111010X1001101\nmem[17132] = 2823025\nmem[62368] = 442239906\nmem[24553] = 339245\nmem[64751] = 66303\nmem[56967] = 870173\nmem[15383] = 342572184\nmem[1647] = 20517\nmask = 00001XX000X11X0011X110X110XX1X010101\nmem[16037] = 1478\nmem[33316] = 30615219\nmem[6729] = 209640491\nmask = 01001000X1X1X100X1110100000X1X011X01\nmem[62368] = 29355190\nmem[48784] = 1522851\nmem[26590] = 14698075\nmask = 0XX0X0011X00X0000X11011010011110X101\nmem[249] = 746\nmem[11553] = 236505210\nmem[38328] = 823888\nmem[58433] = 125568672\nmask = X000X0000101X1101X10110X000X00111100\nmem[37813] = 4058843\nmem[32745] = 9417061\nmask = 000XX110001111X01XX1XX01X00111110100\nmem[22103] = 2397\nmem[40229] = 47978173\nmem[3477] = 14703\nmem[8594] = 2471\nmem[22603] = 44648051\nmem[11340] = 25471\nmask = 000001X1010111001X11X1X1100XX0101X0X\nmem[41160] = 52\nmem[2907] = 827\nmem[15719] = 107392281\nmem[43537] = 19084747\nmem[53742] = 3326211\nmem[46206] = 51870\nmem[30694] = 6031208\nmask = 0X10100000011100111X11100010X1111X01\nmem[31885] = 3110667\nmem[40041] = 30422\nmask = 00XX0XX101X111XX11X10111001101001000\nmem[2874] = 10110\nmem[21776] = 28380745\nmem[32004] = 7076\nmem[9644] = 526\nmask = 011010110001X1000XX110X0X0110000X011\nmem[35281] = 4670\nmem[7204] = 115940579\nmem[58380] = 17616\nmem[40735] = 46877007\nmem[30986] = 20371\nmask = 0XX01001010010X100111010110001111X10\nmem[43046] = 2060276\nmem[20743] = 553391345\nmem[20821] = 3685352\nmem[43943] = 39969\nmask = 0010100101010X0011XXX01XX100XXX11111\nmem[29261] = 60453\nmem[63512] = 94339357\nmem[34827] = 18871625\nmem[52359] = 322200\nmem[38003] = 25491\nmem[24795] = 461240689\nmask = 0000010X01011100101X010100X1X1101010\nmem[26894] = 3512\nmem[1023] = 9354\nmask = 11010XXX100011001101011X1111011001X1\nmem[45476] = 4571\nmem[2838] = 7601404\nmem[30540] = 187\nmask = X1X01X01X000110001011X010X0111X01001\nmem[32944] = 381053\nmem[63110] = 7479218\nmem[59783] = 121082\nmem[56918] = 1237706\nmem[32355] = 472\nmem[44080] = 131839645\nmem[56680] = 38523`;\n\nexport const test1data = `mask = XXXXXXXXXXXXXXXXXXXXXXXXXXXXX1XXXX0X\nmem[8] = 11\nmem[7] = 101\nmem[8] = 0`;\n\nexport const maskTests = [\n  {\n    value: \"000000000000000000000000000000001011\",\n    mask: \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXX1XXXX0X\",\n    result: \"000000000000000000000000000001001001\",\n  },\n  {\n    value: \"000000000000000000000000000001100101\",\n    mask: \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXX1XXXX0X\",\n    result: \"000000000000000000000000000001100101\",\n  },\n  {\n    value: \"000000000000000000000000000000000000\",\n    mask: \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXX1XXXX0X\",\n    result: \"000000000000000000000000000001000000\",\n  },\n];\n\nexport default data;\n","import { Day } from \"util/Day\";\n\nconst day15data = `0,20,7,16,1,18,15`;\n\ntype DataType = number;\n\nconst makeData = (data: string): DataType[] => {\n  return data.split(\",\").map((num) => Number(num));\n};\n\nconst part1 = (startingNumbers: DataType[], stopAt: number): number => {\n  const table = Array<Array<number>>();\n\n  const addNum = (num: number, index: number) => {\n    if (table[num] === undefined) table[num] = Array<number>();\n    table[num].push(index);\n  };\n\n  startingNumbers.forEach(addNum);\n\n  let lastNum = startingNumbers[startingNumbers.length - 1];\n  for (let i = startingNumbers.length; i <= stopAt - 1; i += 1) {\n    const entry = table[lastNum];\n\n    if (entry && entry.length >= 2) {\n      lastNum = entry[entry.length - 1] - entry[entry.length - 2];\n    } else {\n      lastNum = 0;\n    }\n    addNum(lastNum, i);\n  }\n  return lastNum;\n};\n\nconst day14: Day<number[]> = {\n  title: \"Rambunctious Recitation\",\n  description: `\n  While you wait for your flight, you decide to check in with the Elves back at the North Pole. \n  \n  They're playing a memory game and are ever so excited to explain the rules!\n  `,\n  data: day15data,\n  dataConv: makeData,\n  parts: [\n    {\n      title: \"Part 1\",\n      description: `\n* **what will be the 2020th number spoken?**\n`,\n      func: (data) => Number(part1(data, 2020)),\n\n      tests: [\n        { data: \"0,3,6\", result: 436 },\n        { data: \"1,3,2\", result: 1 },\n        { data: \"2,1,3\", result: 10 },\n        { data: \"1,2,3\", result: 27 },\n        { data: \"2,3,1\", result: 78 },\n        { data: \"3,2,1\", result: 438 },\n        { data: \"3,1,2\", result: 1836 },\n      ],\n    },\n    {\n      title: \"Part 2\",\n      description: `\n* **what will be the 30,000,000th number spoken?**\n    `,\n      func: (data) => Number(part1(data, 30 * 1000 * 1000)),\n    },\n  ],\n};\n\nexport default day14;\n","import { Day } from \"util/Day\";\nimport day16data, { test1data } from \"./data/day16\";\n\ntype FieldName =\n  | \"departureLocation\"\n  | \"departureStation\"\n  | \"departurePlatform\"\n  | \"departureTrack\"\n  | \"departureDate\"\n  | \"departureTime\"\n  | \"arrivalLocation\"\n  | \"arrivalStation\"\n  | \"arrivalPlatform\"\n  | \"arrivalTrack\"\n  | \"class\"\n  | \"duration\"\n  | \"price\"\n  | \"route\"\n  | \"row\"\n  | \"seat\"\n  | \"train\"\n  | \"type\"\n  | \"wagon\"\n  | \"zone\";\n\nconst FieldNames: Record<string, FieldName> = {\n  \"departure location\": \"departureLocation\",\n  \"departure station\": \"departureStation\",\n  \"departure platform\": \"departurePlatform\",\n  \"departure track\": \"departureTrack\",\n  \"departure date\": \"departureDate\",\n  \"departure time\": \"departureTime\",\n  \"arrival location\": \"arrivalLocation\",\n  \"arrival station\": \"arrivalStation\",\n  \"arrival platform\": \"arrivalPlatform\",\n  \"arrival track\": \"arrivalTrack\",\n  class: \"class\",\n  duration: \"duration\",\n  price: \"price\",\n  route: \"route\",\n  row: \"row\",\n  seat: \"seat\",\n  train: \"train\",\n  type: \"type\",\n  wagon: \"wagon\",\n  zone: \"zone\",\n};\n\ntype Ticket = Record<FieldName, number>;\n\ntype Range = { min: number; max: number };\nconst inRange = (val: number, range: Range) =>\n  val >= range.min && val <= range.max;\n\ntype TicketSchema = {\n  fieldName: FieldName;\n  ranges: Range[];\n};\n\nclass Validator {\n  schemas: TicketSchema[];\n\n  constructor(schemas: TicketSchema[]) {\n    this.schemas = schemas;\n  }\n\n  static parseSchema = (data: string) => {\n    const schemas = data.split(\"\\n\").map((line) => {\n      const [field, rangeDescs] = line.split(\":\");\n\n      const ranges = rangeDescs.split(\" or \").map((rangeDesc) => {\n        const [min, max] = rangeDesc.split(\"-\").map((val) => Number(val));\n        return { min, max } as Range;\n      });\n      return {\n        fieldName: FieldNames[field],\n        ranges,\n      } as TicketSchema;\n    });\n    return schemas;\n  };\n\n  static parseTicket = (data: string) =>\n    data.split(\",\").map((val) => Number(val));\n\n  validate = (value: number): TicketSchema[] => {\n    return this.schemas.filter((schema) =>\n      schema.ranges.some((range) => inRange(value, range))\n    );\n  };\n\n  getInvalidFields = (ticket: number[]): number[] => {\n    return ticket.filter((num) => {\n      const validFor = this.validate(num);\n      return validFor.length === 0;\n    });\n  };\n}\n\ntype DataSet = {\n  schema: TicketSchema[];\n  yourTicket: number[];\n  nearbyTickets: number[][];\n};\n\ntype DataType = DataSet;\n\nconst makeData = (data: string): DataType => {\n  const [schemaDesc, yourTicketDesc, nearbyTicketsDesc] = data.split(\"\\n\\n\");\n  const schema = Validator.parseSchema(schemaDesc);\n  const yourTicket = Validator.parseTicket(\n    yourTicketDesc.split(\"your ticket:\\n\")[1]\n  );\n  const nearbyTickets = nearbyTicketsDesc\n    .split(\"nearby tickets:\\n\")[1]\n    .split(\"\\n\")\n    .map((row) => Validator.parseTicket(row));\n\n  return {\n    schema,\n    yourTicket,\n    nearbyTickets,\n  };\n};\n\nconst part1 = (data: DataType) => {\n  const v = new Validator(data.schema);\n  const invalidTickets = data.nearbyTickets.map((ticket) =>\n    v.getInvalidFields(ticket)\n  );\n  const errorSum = invalidTickets.reduce(\n    (acc, ticket) =>\n      acc + ticket.reduce((ticketAcc, num) => ticketAcc + num, 0),\n    0\n  );\n  return errorSum;\n};\n\nconst day16: Day<DataType> = {\n  title: \"Rambunctious Recitation\",\n  description: `\n  The train ticket you were given is in a language you don't understand.\n  `,\n  data: day16data,\n  dataConv: makeData,\n  parts: [\n    {\n      title: \"Part 1\",\n      description: `\n* **What is your ticket scanning error rate?**\n`,\n      func: (data) => Number(part1(data)),\n\n      tests: [{ data: test1data, result: 4 + 55 + 12 }],\n    },\n  ],\n};\n\nexport default day16;\n","const data = `departure location: 41-526 or 547-973\ndeparture station: 29-874 or 891-961\ndeparture platform: 25-200 or 213-966\ndeparture track: 38-131 or 152-951\ndeparture date: 29-349 or 366-955\ndeparture time: 34-450 or 464-958\narrival location: 28-635 or 650-962\narrival station: 25-663 or 689-955\narrival platform: 49-731 or 738-955\narrival track: 50-617 or 627-970\nclass: 39-90 or 98-966\nduration: 32-99 or 120-949\nprice: 43-742 or 756-955\nroute: 32-501 or 520-968\nrow: 41-276 or 285-951\nseat: 30-830 or 840-972\ntrain: 31-123 or 131-974\ntype: 35-63 or 75-949\nwagon: 26-564 or 580-951\nzone: 47-380 or 402-952\n\nyour ticket:\n197,173,229,179,157,83,89,79,193,53,163,59,227,131,199,223,61,181,167,191\n\nnearby tickets:\n153,109,923,689,426,793,483,628,843,774,785,841,63,168,314,725,489,339,231,914\n177,714,226,83,177,199,186,227,474,942,978,440,905,346,788,700,346,247,925,825\n98,718,599,348,225,261,310,490,773,867,659,874,286,290,408,481,780,240,309,391\n549,157,51,253,338,559,185,820,914,412,180,88,811,426,420,715,557,325,9,700\n523,86,241,489,735,854,797,654,380,846,522,432,87,911,849,88,219,757,564,901\n160,772,822,425,240,250,335,411,478,599,783,251,561,786,869,12,864,405,925,869\n202,581,555,337,185,699,857,222,869,826,873,445,273,440,465,938,766,482,901,99\n793,468,773,432,300,82,853,557,408,75,220,468,610,748,51,415,775,154,784,189\n949,200,857,419,777,613,489,424,152,872,486,599,580,925,230,250,574,903,865,914\n498,921,903,481,422,313,563,997,949,898,447,123,181,295,694,631,257,935,756,660\n740,384,249,792,303,857,830,236,651,628,560,408,466,469,343,599,83,324,345,375\n709,170,627,415,273,741,441,251,320,98,372,373,433,558,304,312,458,176,928,926\n77,606,582,935,420,820,816,468,115,303,346,264,422,335,699,494,423,709,913,334\n483,799,490,303,724,808,728,586,895,443,303,271,238,826,818,369,865,976,274,656\n928,326,220,182,303,811,472,470,736,217,627,190,450,616,526,719,415,300,417,772\n635,300,443,125,56,228,275,485,629,629,250,436,789,526,779,342,780,525,605,706\n889,712,260,409,419,895,828,421,344,479,341,524,709,943,156,555,152,550,845,61\n859,173,870,784,252,153,254,689,824,444,692,782,560,762,224,689,119,443,323,891\n242,87,292,843,472,404,168,817,806,699,372,763,896,65,251,63,251,611,216,260\n484,257,411,900,496,785,106,243,725,86,171,581,857,226,184,920,658,923,286,910\n607,458,690,765,582,322,61,946,939,131,262,830,428,339,230,774,192,704,340,285\n191,704,696,123,853,937,924,948,921,905,336,740,67,53,915,247,487,236,164,186\n466,501,224,225,873,786,268,172,904,588,250,417,896,821,493,428,907,918,84,624\n555,868,775,295,414,312,468,909,344,704,857,482,491,851,926,643,75,83,630,866\n368,565,89,373,340,298,592,421,894,323,240,231,902,223,705,305,415,820,772,213\n169,85,703,920,501,77,689,697,327,194,757,116,257,366,591,265,435,422,63,417\n199,255,233,481,241,270,727,339,337,87,930,778,548,438,874,418,168,283,707,728\n275,596,342,484,465,695,715,440,928,55,408,855,766,482,328,589,161,839,830,347\n193,856,583,827,862,402,486,943,862,902,406,309,85,229,286,941,215,135,689,162\n232,53,235,839,216,820,872,465,265,300,230,162,819,698,260,654,491,98,78,377\n769,897,470,752,336,122,190,767,88,583,90,225,161,583,81,157,658,192,291,498\n613,813,721,166,819,182,596,948,705,339,380,727,319,359,852,478,524,334,366,120\n409,941,60,23,488,714,487,289,328,380,523,304,741,81,612,756,584,928,487,260\n256,332,176,556,126,159,483,428,300,181,906,185,305,818,591,941,286,304,893,739\n177,70,616,469,168,632,846,215,807,58,473,368,590,555,705,812,715,919,224,168\n752,369,501,414,376,286,846,341,858,219,827,698,806,185,404,561,827,494,603,225\n384,346,232,465,771,272,470,900,724,232,706,847,501,522,179,657,768,335,710,630\n166,815,264,550,806,759,229,184,416,85,319,624,229,802,582,238,556,293,303,497\n337,591,606,937,564,789,858,614,724,986,934,862,158,415,701,194,852,189,157,407\n488,259,377,949,721,310,243,788,304,604,436,214,287,268,468,417,736,549,907,602\n422,877,860,900,898,483,286,178,345,188,370,651,846,177,376,217,436,83,168,791\n378,192,429,372,172,812,863,591,349,584,53,410,325,787,999,609,926,479,662,432\n477,444,421,706,629,438,436,862,447,826,264,738,624,865,728,236,913,554,860,303\n633,751,491,298,658,464,259,661,377,802,292,482,430,770,692,483,290,627,552,587\n524,906,177,259,821,168,771,70,650,722,798,228,900,606,940,77,854,270,258,470\n551,128,917,706,430,913,122,582,859,559,412,171,787,599,276,720,369,848,195,434\n182,772,919,616,402,843,193,427,474,734,82,633,589,723,607,466,221,466,440,435\n928,93,477,215,939,631,551,930,464,172,162,706,316,298,77,406,290,336,840,692\n944,560,714,409,369,908,413,56,320,173,902,307,776,412,262,553,23,613,923,215\n657,328,760,556,586,75,932,402,229,780,997,867,806,376,167,769,477,718,898,447\n805,472,258,931,741,766,871,433,775,220,764,895,604,308,310,500,515,120,722,121\n173,84,260,160,271,918,712,949,870,321,213,906,857,710,344,143,717,689,376,610\n559,938,76,800,553,823,870,423,421,169,615,704,811,980,701,403,194,627,857,198\n620,922,83,371,823,780,309,900,488,662,585,227,690,554,933,937,167,893,762,775\n284,820,787,435,768,466,584,560,123,587,910,341,220,57,810,847,799,872,721,257\n488,553,593,867,525,656,652,731,435,65,774,740,842,331,214,152,808,771,295,317\n721,804,766,450,276,944,741,927,580,728,62,242,713,287,837,587,423,442,498,177\n846,731,692,50,522,412,632,305,768,288,326,818,274,262,349,726,170,997,487,162\n549,860,760,246,782,214,377,441,727,602,560,183,820,531,214,702,447,768,200,692\n290,740,421,404,898,583,718,769,341,712,476,317,937,303,81,865,641,307,275,859\n443,775,321,371,275,412,292,757,729,947,233,241,225,694,308,292,445,11,333,818\n659,446,597,781,925,812,56,186,595,422,821,266,729,417,383,188,696,296,845,635\n138,559,258,718,449,309,366,873,290,936,59,193,193,156,556,171,769,434,223,302\n611,631,340,123,713,334,799,337,600,930,80,83,268,702,432,58,838,221,254,902\n310,905,722,414,336,851,319,423,823,428,296,922,476,575,474,476,120,594,740,783\n172,6,581,868,225,484,916,813,930,233,89,366,303,310,155,594,428,923,182,348\n479,218,791,558,689,871,739,417,405,438,820,796,846,613,894,421,939,62,279,288\n720,912,429,389,823,554,239,52,158,432,777,780,121,237,298,795,380,946,197,701\n233,655,790,186,496,758,586,236,928,173,904,493,851,5,910,709,936,52,466,697\n82,920,716,469,373,863,945,117,271,480,276,242,155,742,487,175,154,869,446,726\n285,725,652,249,63,244,235,698,742,106,797,172,75,629,475,845,922,194,275,161\n768,310,785,318,658,873,377,76,904,760,656,720,924,553,405,872,187,407,740,8\n804,763,653,730,220,221,369,407,337,277,553,857,498,310,864,932,772,152,306,415\n57,791,55,380,795,249,169,415,863,522,90,918,269,81,343,427,782,10,479,193\n820,81,442,608,552,233,155,181,948,187,427,918,944,343,220,228,128,371,470,925\n168,195,120,427,482,660,404,341,780,496,581,705,831,75,468,473,187,80,635,98\n274,821,738,446,328,944,224,489,332,699,499,500,402,582,691,82,213,125,255,501\n900,131,178,425,305,493,738,131,288,83,802,931,78,559,642,292,797,904,448,862\n200,694,928,67,485,605,917,596,229,232,166,903,273,822,657,155,935,423,448,154\n476,762,260,290,174,53,550,495,853,186,78,662,366,337,936,123,174,749,232,556\n198,192,798,370,908,948,605,229,803,701,628,874,209,475,304,177,227,131,302,468\n521,335,331,650,399,707,213,691,259,296,795,238,758,698,926,598,99,467,548,158\n73,601,419,548,263,367,828,807,448,341,921,170,485,778,495,247,320,756,794,219\n421,652,924,822,224,257,260,406,656,378,290,153,4,480,791,340,791,238,873,717\n635,739,172,893,468,247,423,817,706,845,59,895,927,196,326,524,85,113,804,256\n448,446,870,727,689,988,241,725,293,422,449,557,798,332,376,250,258,707,524,522\n908,422,218,649,183,773,217,708,228,936,526,182,314,780,411,780,444,213,726,336\n323,464,915,184,262,433,721,485,249,468,348,179,949,742,635,696,357,937,272,302\n939,165,84,79,419,187,494,442,902,326,263,697,384,196,53,921,823,856,907,563\n239,696,438,287,600,896,709,520,774,479,866,307,61,344,376,112,862,256,658,906\n304,221,79,252,179,187,628,172,777,343,819,430,924,195,276,555,799,249,300,24\n857,410,592,262,482,712,736,171,270,656,300,870,940,75,871,864,328,500,343,802\n809,856,478,893,938,85,560,285,438,482,841,616,923,861,712,19,226,424,824,762\n431,869,924,772,494,896,263,121,236,337,23,424,926,55,582,477,630,491,261,53\n301,321,896,689,777,291,420,264,909,336,937,522,54,553,277,98,220,343,704,241\n257,494,123,339,260,696,946,814,251,911,799,808,584,929,829,279,614,796,287,716\n627,780,924,527,263,860,807,60,915,774,522,602,368,764,77,617,319,217,553,323\n535,756,557,548,724,499,487,796,273,893,921,285,772,402,696,910,552,218,157,420\n906,443,921,186,474,821,70,629,594,867,345,651,492,289,815,297,715,549,190,304\n171,425,632,975,909,919,83,715,221,762,765,721,828,366,827,153,843,633,550,285\n458,522,691,153,724,520,176,85,244,306,936,921,54,377,757,818,758,524,79,316\n817,635,327,581,488,412,861,180,367,778,474,720,761,297,893,327,552,563,295,69\n330,597,219,78,282,86,158,584,161,431,653,161,243,552,171,925,342,597,822,774\n771,338,272,500,192,422,480,227,895,79,470,416,753,440,491,448,174,823,170,855\n293,806,271,120,209,76,807,805,946,98,801,288,409,425,474,288,475,302,406,825\n345,317,654,222,477,367,85,161,715,772,245,222,102,53,348,860,584,500,492,469\n645,251,857,60,525,369,656,444,58,658,121,934,253,200,469,342,249,190,605,250\n419,605,594,441,902,894,725,277,661,377,81,200,225,794,378,729,922,789,88,308\n853,373,199,249,323,756,905,193,293,428,827,153,335,148,936,479,295,847,90,289\n739,223,217,225,894,994,704,824,712,182,864,84,247,564,61,914,374,522,474,845\n784,769,596,197,253,64,852,592,845,214,122,297,285,251,425,823,366,823,174,798\n846,818,581,178,194,226,170,619,250,258,802,698,911,84,525,251,62,329,763,88\n438,174,928,179,897,651,558,846,865,724,159,830,583,321,691,54,987,695,816,465\n299,705,824,281,827,174,62,727,87,796,783,906,307,217,174,801,800,614,846,247\n193,489,121,908,841,88,780,581,444,243,252,797,368,475,259,582,482,75,610,283\n923,788,408,219,727,435,187,920,477,405,495,222,823,696,557,413,610,173,14,159\n499,143,406,825,412,762,944,480,249,828,947,585,821,939,822,920,699,298,840,180\n811,768,723,924,61,242,258,170,657,650,324,290,825,397,338,75,156,556,173,176\n441,233,582,247,489,893,155,75,553,850,51,829,936,832,305,490,123,61,858,778\n371,789,90,302,423,131,300,307,498,774,470,849,591,697,258,859,537,702,936,441\n784,430,222,266,720,469,287,419,720,337,263,164,430,690,324,540,290,944,329,840\n809,253,441,927,922,768,485,424,232,705,123,873,737,374,414,710,347,234,892,860\n810,475,997,257,941,690,472,448,243,599,829,738,256,906,818,378,874,825,262,83\n230,627,66,61,583,870,590,899,250,370,330,725,413,824,157,605,689,343,76,498\n822,632,80,804,612,860,333,703,715,319,270,464,485,127,415,582,661,482,584,821\n261,779,868,327,531,933,949,200,189,778,652,918,787,304,293,175,864,250,340,694\n722,873,3,472,153,722,80,855,590,874,170,870,942,720,320,348,188,241,171,309\n721,472,916,718,182,591,75,156,986,301,635,783,286,770,826,473,596,895,915,324\n338,318,485,229,823,789,661,375,167,899,198,549,713,431,911,328,142,615,904,904\n940,539,904,276,227,818,327,910,812,898,926,797,630,729,942,562,789,245,756,801\n115,153,776,78,311,472,182,288,597,252,659,271,774,934,784,166,924,231,287,340\n22,220,802,812,478,237,187,742,87,819,60,864,417,477,631,908,714,759,870,237\n416,53,159,728,854,75,86,735,61,871,595,859,220,896,796,430,310,81,629,481\n196,377,867,718,350,77,521,786,725,713,604,379,321,90,427,595,473,122,191,905\n488,638,923,271,912,631,524,331,481,369,478,340,926,236,346,437,241,157,500,663\n410,632,632,598,856,857,787,182,428,718,181,487,927,731,81,947,812,553,23,326\n603,894,778,82,938,991,795,709,226,411,191,584,912,490,730,609,820,469,379,895\n919,190,499,563,230,78,763,81,840,909,254,449,470,650,321,179,887,859,197,922\n477,335,179,934,936,285,395,476,269,58,548,819,694,497,436,553,268,329,801,286\n290,285,58,842,417,909,834,654,789,807,706,191,449,604,249,893,335,328,818,261\n808,260,341,526,366,725,791,58,893,247,442,847,482,223,548,785,389,313,63,809\n447,256,215,623,215,479,811,580,169,402,425,254,846,478,703,910,222,267,338,77\n629,209,920,758,858,811,845,593,346,438,90,494,821,488,693,466,917,941,856,285\n939,173,15,170,707,431,374,437,473,344,699,654,716,628,90,274,522,176,556,87\n724,54,722,343,729,219,434,227,614,662,367,77,423,196,229,481,72,615,181,820\n349,549,496,595,841,594,220,702,908,244,706,870,427,203,927,713,160,808,770,339\n356,859,858,77,549,469,694,699,844,919,770,780,272,477,738,604,171,465,857,474\n805,120,62,249,255,168,332,170,766,945,731,90,855,187,849,88,60,202,285,610\n339,587,524,309,785,594,813,295,744,305,654,650,727,501,804,940,793,849,326,912\n468,296,844,907,904,415,424,465,89,935,407,475,446,89,896,70,322,85,909,305\n975,787,851,85,427,796,604,830,718,61,841,916,696,330,714,376,314,799,944,656\n696,307,907,778,759,717,407,853,87,948,241,789,342,454,409,780,239,865,488,557\n368,427,213,285,194,658,922,652,700,434,305,224,500,980,244,781,181,874,236,302\n325,601,498,733,756,602,780,842,767,342,563,53,925,564,927,299,760,817,174,773\n159,90,268,176,725,431,427,169,612,840,186,327,251,941,812,446,792,292,67,690\n178,50,318,592,271,799,585,930,937,320,293,271,757,914,103,556,60,489,234,843\n656,345,598,589,861,659,630,342,871,827,54,655,271,523,708,556,428,73,444,291\n187,658,894,311,852,855,345,289,702,312,410,561,226,87,169,124,596,290,221,763\n338,429,167,520,697,189,826,178,626,329,651,52,57,416,817,860,761,713,902,758\n285,497,628,807,466,370,162,594,850,253,227,926,281,182,801,854,822,227,487,708\n551,768,718,213,107,652,325,247,199,660,948,419,244,435,762,803,605,829,526,551\n635,214,893,304,427,406,851,475,413,199,705,493,533,429,704,797,925,342,265,372\n815,902,849,557,825,484,247,520,600,162,181,792,323,794,600,696,122,534,873,180\n553,274,186,936,603,949,277,198,54,243,174,758,905,941,322,871,232,587,705,409\n706,845,557,938,644,269,249,428,929,489,923,482,918,913,420,901,802,804,815,438\n555,380,417,270,224,869,256,260,329,268,582,408,407,720,903,716,752,761,924,374\n317,728,467,828,861,993,230,783,214,229,426,522,406,762,781,606,826,582,372,633\n199,80,564,860,304,587,341,406,175,156,407,412,547,446,757,236,911,438,269,838\n985,723,857,553,722,692,81,919,302,186,780,220,53,61,310,464,473,184,83,369\n818,863,348,158,604,301,906,291,936,596,656,591,303,943,661,162,891,737,592,830\n466,622,321,467,491,484,700,794,695,275,218,789,484,631,814,781,266,558,588,81\n251,215,310,266,769,564,287,942,805,10,234,438,630,496,370,286,709,931,596,228\n371,772,218,817,406,421,808,296,306,633,198,448,629,774,122,650,282,230,698,493\n346,783,99,260,263,329,246,799,652,854,788,121,783,647,616,825,161,99,617,157\n407,121,805,224,290,189,717,294,481,183,316,818,432,377,944,620,487,725,223,806\n803,56,237,320,819,234,473,759,70,329,295,828,866,99,867,773,937,863,779,247\n482,361,215,492,710,335,559,862,415,610,799,159,929,704,706,380,294,404,896,185\n269,52,526,304,436,908,942,814,948,218,550,319,420,279,87,254,555,175,297,656\n590,735,411,153,193,416,295,76,654,76,935,807,315,772,592,845,86,786,335,178\n446,524,861,792,741,714,380,374,833,341,270,868,803,722,51,702,327,433,348,857\n696,633,936,590,832,824,762,694,373,122,337,157,225,689,89,250,556,660,871,78\n493,230,899,553,692,610,157,435,172,730,786,465,329,735,366,657,597,295,241,896\n221,796,480,372,190,87,921,603,761,818,192,198,140,551,707,811,376,171,707,260\n469,690,404,703,255,891,200,162,660,20,85,59,199,407,595,315,223,552,523,860\n779,946,818,237,606,824,926,661,894,377,816,606,239,52,487,297,908,398,944,231\n561,160,488,475,716,860,582,587,768,99,60,591,337,293,610,630,607,822,757,734\n326,281,242,779,260,238,223,607,593,52,927,184,629,789,595,483,287,218,234,943\n446,865,816,487,784,444,746,224,303,818,429,292,500,720,560,304,818,761,264,441\n226,837,290,596,434,823,501,613,598,824,174,236,941,803,425,276,899,480,131,806\n166,335,524,464,985,800,290,520,180,200,448,651,699,476,650,440,75,526,873,788\n177,252,341,446,654,493,61,563,248,60,233,902,82,717,422,427,156,442,329,111\n291,715,185,849,756,895,773,580,425,895,562,54,195,719,488,832,653,934,57,702\n420,895,445,900,938,308,856,850,934,900,156,280,229,85,798,424,330,691,376,815\n554,470,334,694,979,323,406,231,274,829,766,651,348,417,162,929,866,160,930,178\n409,711,220,656,433,929,922,308,828,368,612,167,600,186,313,840,932,580,732,905\n790,216,774,172,623,741,426,437,376,431,791,526,419,797,327,344,608,783,845,595\n344,264,852,634,692,555,597,78,636,827,582,171,805,373,602,614,793,935,257,296\n318,251,595,293,285,330,713,913,760,367,489,594,698,621,50,492,215,425,691,76\n468,424,714,56,585,698,157,79,789,470,191,449,292,334,690,786,622,595,870,334\n689,171,299,563,775,580,629,781,246,739,852,99,945,866,778,276,251,623,424,766\n347,178,497,713,738,629,772,613,474,760,434,440,801,217,934,368,202,276,696,564\n826,762,230,690,189,764,808,841,663,923,179,698,57,878,323,934,492,803,260,430\n817,824,224,367,407,868,797,690,58,711,552,733,522,616,660,79,802,347,342,215\n652,633,51,186,808,447,86,484,702,258,779,436,130,215,558,606,762,166,822,216\n735,719,445,910,705,158,467,154,242,921,905,719,949,526,236,416,199,285,490,418\n317,898,347,321,376,339,822,271,796,287,432,863,225,103,629,427,855,699,657,779\n487,791,616,723,708,526,499,81,279,159,239,776,260,812,166,630,406,655,467,175\n340,928,343,595,13,923,799,229,320,793,790,911,500,586,915,180,436,200,635,848\n867,596,942,287,843,225,432,341,927,440,55,445,234,425,868,740,786,806,798,993\n938,160,200,840,862,316,618,660,893,520,343,590,663,302,595,925,265,549,782,338\n61,467,331,697,345,896,78,601,550,874,194,918,692,717,624,778,932,616,263,60\n214,656,85,469,771,903,556,247,473,936,794,479,826,606,736,760,307,818,709,267\n631,474,167,321,654,438,82,233,522,893,261,820,380,791,67,797,165,272,320,897\n902,483,228,155,146,485,929,765,784,467,175,449,726,245,291,292,824,596,778,329\n348,317,467,80,429,188,246,292,313,157,474,286,270,493,703,733,249,904,213,245\n195,588,243,474,437,547,914,758,426,82,854,172,365,616,337,342,780,909,791,243\n554,913,412,332,327,476,225,377,725,719,200,67,779,270,60,627,172,182,857,739\n839,315,85,761,311,366,726,725,409,731,433,445,824,194,87,585,347,411,266,698\n176,275,466,499,759,895,307,177,158,598,524,467,554,171,53,933,937,643,423,793\n848,162,911,260,468,584,764,242,324,445,629,778,824,562,755,168,695,317,220,328\n129,275,898,405,166,329,695,62,760,497,769,554,863,234,711,783,470,249,858,845\n376,375,278,86,522,76,895,858,703,920,183,434,245,62,379,585,916,349,214,423\n332,482,248,804,755,600,410,930,928,52,75,61,764,768,256,444,245,798,852,262\n419,296,547,869,931,261,893,726,438,292,941,915,85,868,698,382,851,52,915,692\n295,122,893,335,77,856,824,368,59,230,302,713,726,560,843,752,199,808,895,286\n488,21,254,375,582,794,776,310,793,199,915,339,495,187,657,445,467,483,231,813\n809,249,794,338,764,233,120,76,304,234,774,250,452,226,740,773,372,84,784,949\n657,176,272,829,783,822,718,483,417,700,830,594,823,796,348,613,473,15,553,264\n589,792,761,81,847,229,248,807,131,800,722,833,464,703,443,558,561,265,218,909\n175,555,557,103,334,525,769,344,219,438,868,742,54,435,611,721,816,437,417,597\n823,190,611,905,718,215,84,450,870,235,221,863,345,902,782,403,468,660,700,23\n174,263,804,689,692,739,188,802,293,805,559,663,636,216,197,420,317,659,613,922\n222,496,316,764,162,779,430,496,759,931,742,704,259,440,125,273,166,244,251,78\n906,413,852,216,333,304,659,596,400,61,496,703,380,341,764,785,584,478,56,904\n772,617,174,235,407,285,826,563,563,600,788,468,909,689,84,473,93,496,652,154\n427,842,823,347,73,849,257,158,600,449,51,478,270,303,523,295,738,237,269,120\n322,931,842,416,89,980,523,89,943,606,247,693,826,163,50,54,199,650,153,915`;\n\nexport const test1data = `class: 1-3 or 5-7\nrow: 6-11 or 33-44\nseat: 13-40 or 45-50\n\nyour ticket:\n7,1,14\n\nnearby tickets:\n7,3,47\n40,4,50\n55,2,20\n38,6,12`;\n\nexport default data;\n","import { Day } from \"util/Day\";\nimport day1 from \"./2020/day01\";\nimport day2 from \"./2020/day02\";\nimport day3 from \"./2020/day03\";\nimport day4 from \"./2020/day04\";\nimport day5 from \"./2020/day05\";\nimport day6 from \"./2020/day06\";\nimport day7 from \"./2020/day07\";\nimport day8 from \"./2020/day08\";\nimport day9 from \"./2020/day09\";\nimport day10 from \"./2020/day10\";\nimport day11 from \"./2020/day11\";\nimport day12 from \"./2020/day12\";\nimport day13 from \"./2020/day13\";\nimport day14 from \"./2020/day14\";\nimport day15 from \"./2020/day15\";\nimport day16 from \"./2020/day16\";\n\nconst days = new Map<number, Day<unknown>>();\n\ndays.set(1, { ...(day1 as Day<unknown>) });\ndays.set(2, { ...(day2 as Day<unknown>) });\ndays.set(3, { ...(day3 as Day<unknown>) });\ndays.set(4, { ...(day4 as Day<unknown>) });\ndays.set(5, { ...(day5 as Day<unknown>) });\ndays.set(6, { ...(day6 as Day<unknown>) });\ndays.set(7, { ...(day7 as Day<unknown>) });\ndays.set(8, { ...(day8 as Day<unknown>) });\ndays.set(9, { ...(day9 as Day<unknown>) });\ndays.set(10, { ...(day10 as Day<unknown>) });\ndays.set(11, { ...(day11 as Day<unknown>) });\ndays.set(12, { ...(day12 as Day<unknown>) });\ndays.set(13, { ...(day13 as Day<unknown>) });\ndays.set(14, { ...(day14 as Day<unknown>) });\ndays.set(15, { ...(day15 as Day<unknown>) });\ndays.set(16, { ...(day16 as Day<unknown>) });\n\nexport default days;\n","import days2015 from \"./2015\";\r\nimport days2020 from \"./2020\";\r\n\r\nconst years = new Map<number, Map<number, unknown>>();\r\n\r\nyears.set(2015, days2015);\r\nyears.set(2020, days2020);\r\n\r\nexport default years;\r\n","import React, { FunctionComponent, useState } from \"react\";\r\nimport { HashRouter, Route, useParams } from \"react-router-dom\";\r\nimport { Day } from \"util/Day\";\r\nimport \"./App.scss\";\r\nimport DayPanel from \"./components/DayPanel\";\r\nimport Picker from \"./components/Picker\";\r\nimport \"./styles.scss\";\r\nimport years from \"./years/years\";\r\n\r\ntype RouteParams = {\r\n  year: string;\r\n  day: string;\r\n};\r\n\r\nconst AppMain = () => {\r\n  // eslint-disable-next-line\r\n  const { year, day } = useParams<RouteParams>();\r\n  const yearIndex = Number(year);\r\n  const dayIndex = Number(day) || 1;\r\n\r\n  const currentYear = years.get(yearIndex) as Map<number, Day<unknown>>;\r\n\r\n  const currentDay = currentYear?.get(dayIndex);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"my-app__nav\">\r\n        <Picker\r\n          {...{\r\n            options: Array.from(years.keys()),\r\n            current: yearIndex,\r\n          }}\r\n        />\r\n        {currentYear !== undefined && (\r\n          <Picker\r\n            {...{\r\n              options: Array.from(currentYear.keys()),\r\n              current: dayIndex,\r\n              linkPrefix: `${yearIndex}/`,\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n      <div className=\"my-app__main\">\r\n        {currentDay !== undefined && (\r\n          <DayPanel day={currentDay} year={yearIndex} dayIndex={dayIndex} />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst App: FunctionComponent = () => {\r\n  return (\r\n    <HashRouter>\r\n      <div className=\"my-app\">\r\n        <Route exact path=\"/:year?/:day?\">\r\n          <AppMain />\r\n        </Route>\r\n\r\n        <div className=\"my-app__boilerplate\">\r\n          <span>\r\n            Made for{\" \"}\r\n            <a href=\"https://adventofcode.com/2020\">Advent of Code 2020</a>\r\n          </span>\r\n          <span>\r\n            Source at <a href=\"https://github.com/teetow/aoc2020\">GitHub</a>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","/* eslint-disable */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}